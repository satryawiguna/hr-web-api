{
    "openapi": "3.0.0",
    "info": {
        "title": "SmartBiz OpenApi",
        "description": "SmartBiz swagger OpenApi description",
        "contact": {
            "email": "admin@smartbiz.id"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "https://api.smartbiz-2.0.local/api",
            "description": "SmartBiz OpenApi host server"
        }
    ],
    "paths": {
        "/cities": {
            "get": {
                "tags": [
                    "City"
                ],
                "summary": "Get list of city",
                "description": "Get list of city",
                "operationId": "getCityList",
                "parameters": [
                    {
                        "name": "state_id",
                        "in": "query",
                        "description": "State id parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/city/list-search": {
            "post": {
                "tags": [
                    "City"
                ],
                "summary": "Get list of city with query search",
                "description": "Get list of city with query search",
                "operationId": "postCityListSearch",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "query": {
                                        "description": "Query property (Keyword would be filter cover letter)",
                                        "type": "string",
                                        "example": "keyword"
                                    },
                                    "state_id": {
                                        "$ref": "#/components/schemas/CityEloquent/properties/state_id"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/city/page-search": {
            "post": {
                "tags": [
                    "City"
                ],
                "summary": "Get list of city with query and page parameter search",
                "description": "Get list of city with query and page parameter search",
                "operationId": "postCityPageSearch",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "query": {
                                                "description": "Query property (Keyword would be filter note)",
                                                "properties": {
                                                    "value": {
                                                        "type": "string",
                                                        "example": "keyword"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "state_id": {
                                                "$ref": "#/components/schemas/CityEloquent/properties/state_id"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/PagedSearchParameter"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/city": {
            "put": {
                "tags": [
                    "City"
                ],
                "summary": "Update city",
                "description": "Update city",
                "operationId": "putCityUpdate",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCityEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "City"
                ],
                "summary": "Create city",
                "description": "Create city",
                "operationId": "postCityCreate",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateCityEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/city/{id}": {
            "delete": {
                "tags": [
                    "City"
                ],
                "summary": "Delete city",
                "description": "Delete city",
                "operationId": "deleteCity",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of city",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/countries": {
            "get": {
                "tags": [
                    "Country"
                ],
                "summary": "Get list of country",
                "description": "Get list of country",
                "operationId": "getCountryList",
                "parameters": [
                    {
                        "name": "country_name",
                        "in": "query",
                        "description": "Country name parameter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "Indonesia"
                        }
                    },
                    {
                        "name": "two_letter_code",
                        "in": "query",
                        "description": "Two letter code parameter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "ID"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/country/list-search": {
            "post": {
                "tags": [
                    "Country"
                ],
                "summary": "Get list of country with query search",
                "description": "Get list of country with query search",
                "operationId": "postCountryListSearch",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "query": {
                                        "description": "Query property (Keyword would be filter cover letter)",
                                        "type": "string",
                                        "example": "keyword"
                                    },
                                    "country_name": {
                                        "$ref": "#/components/schemas/CountryEloquent/properties/country_name"
                                    },
                                    "two_letter_code": {
                                        "$ref": "#/components/schemas/CountryEloquent/properties/two_letter_code"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/country/page-search": {
            "post": {
                "tags": [
                    "Country"
                ],
                "summary": "Get list of country with query and page parameter search",
                "description": "Get list of country with query and page parameter search",
                "operationId": "postCountryPageSearch",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "query": {
                                                "description": "Query property (Keyword would be filter note)",
                                                "properties": {
                                                    "value": {
                                                        "type": "string",
                                                        "example": "keyword"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "country_name": {
                                                "$ref": "#/components/schemas/CountryEloquent/properties/country_name"
                                            },
                                            "two_letter_code": {
                                                "$ref": "#/components/schemas/CountryEloquent/properties/two_letter_code"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/PagedSearchParameter"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/country": {
            "put": {
                "tags": [
                    "Country"
                ],
                "summary": "Update country",
                "description": "Update country",
                "operationId": "putCountryUpdate",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCountryEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "Country"
                ],
                "summary": "Create country",
                "description": "Create country",
                "operationId": "postCountryCreate",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateCountryEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/country/{id}": {
            "delete": {
                "tags": [
                    "Country"
                ],
                "summary": "Delete country",
                "description": "Delete country",
                "operationId": "deleteCountry",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of country",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/states": {
            "get": {
                "tags": [
                    "State"
                ],
                "summary": "Get list of state",
                "description": "Get list of state",
                "operationId": "getStateList",
                "parameters": [
                    {
                        "name": "country_id",
                        "in": "query",
                        "description": "Country id parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/state/list-search": {
            "post": {
                "tags": [
                    "State"
                ],
                "summary": "Get list of state with query search",
                "description": "Get list of state with query search",
                "operationId": "postStateListSearch",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "query": {
                                        "description": "Query property (Keyword would be filter cover letter)",
                                        "type": "string",
                                        "example": "keyword"
                                    },
                                    "country_id": {
                                        "$ref": "#/components/schemas/StateEloquent/properties/country_id"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/state/page-search": {
            "post": {
                "tags": [
                    "State"
                ],
                "summary": "Get list of state with query and page parameter search",
                "description": "Get list of state with query and page parameter search",
                "operationId": "postStatePageSearch",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "query": {
                                                "description": "Query property (Keyword would be filter note)",
                                                "properties": {
                                                    "value": {
                                                        "type": "string",
                                                        "example": "keyword"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "country_id": {
                                                "$ref": "#/components/schemas/StateEloquent/properties/country_id"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/PagedSearchParameter"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/state": {
            "put": {
                "tags": [
                    "State"
                ],
                "summary": "Update state",
                "description": "Update state",
                "operationId": "putStateUpdate",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateStateEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "State"
                ],
                "summary": "Create state",
                "description": "Create state",
                "operationId": "postStateCreate",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateStateEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/state/{id}": {
            "delete": {
                "tags": [
                    "State"
                ],
                "summary": "Delete state",
                "description": "Delete state",
                "operationId": "deleteState",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of state",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/login": {
            "post": {
                "tags": [
                    "Login"
                ],
                "summary": "Login user",
                "description": "Login user",
                "operationId": "postLogin",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "identity",
                                    "password"
                                ],
                                "properties": {
                                    "identity": {
                                        "description": "identity property",
                                        "type": "string"
                                    },
                                    "password": {
                                        "$ref": "#/components/schemas/UserEloquent/properties/password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/logout": {
            "post": {
                "tags": [
                    "Logout"
                ],
                "description": "Logout user",
                "operationId": "postLogout",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "description": "Id property",
                                        "type": "integer",
                                        "format": "int64"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/token-refresh": {
            "post": {
                "tags": [
                    "Token Refresh"
                ],
                "summary": "Token refresh user",
                "description": "Token refresh user",
                "operationId": "postTokenRefresh",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "refresh_token"
                                ],
                                "properties": {
                                    "refresh_token": {
                                        "description": "Refresh token property",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/register/{group}": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "User Register",
                "description": "User Register",
                "operationId": "postUserRegister",
                "parameters": [
                    {
                        "name": "group",
                        "in": "query",
                        "description": "Group parameter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "company"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "full_name": {
                                        "$ref": "#/components/schemas/ProfileEloquent/properties/full_name"
                                    },
                                    "nick_name": {
                                        "$ref": "#/components/schemas/ProfileEloquent/properties/nick_name"
                                    },
                                    "email": {
                                        "$ref": "#/components/schemas/UserEloquent/properties/email"
                                    },
                                    "username": {
                                        "$ref": "#/components/schemas/UserEloquent/properties/username"
                                    },
                                    "password": {
                                        "$ref": "#/components/schemas/UserEloquent/properties/password"
                                    },
                                    "confirm_password": {
                                        "description": "Confirm password property",
                                        "type": "string"
                                    },
                                    "company_category_id": {
                                        "$ref": "#/components/schemas/CompanyEloquent/properties/company_category_id"
                                    },
                                    "employee_number_scale_id": {
                                        "$ref": "#/components/schemas/CompanyEloquent/properties/employee_number_scale_id"
                                    },
                                    "name": {
                                        "$ref": "#/components/schemas/CompanyEloquent/properties/name"
                                    },
                                    "application_ids": {
                                        "description": "Application ids property",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "format": "int64"
                                        },
                                        "example": [
                                            1,
                                            2,
                                            3
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/access/list": {
            "get": {
                "tags": [
                    "Access"
                ],
                "summary": "Get list of access",
                "description": "Get list of access",
                "operationId": "getAccessList",
                "parameters": [
                    {
                        "name": "is_active",
                        "in": "query",
                        "description": "Is active parameter (active = 1; not active = 0)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/access/list-search": {
            "post": {
                "tags": [
                    "Access"
                ],
                "summary": "Get list of access with query search",
                "description": "Get list of access with query search",
                "operationId": "postAccessListSearch",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "query": {
                                        "description": "Query property (Keyword would be filter name, slug and description)",
                                        "type": "string",
                                        "example": "keyword"
                                    },
                                    "is_active": {
                                        "$ref": "#/components/schemas/AccessEloquent/properties/is_active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/access/page-search": {
            "post": {
                "tags": [
                    "Access"
                ],
                "summary": "Get list of access with query and page parameter search",
                "description": "Get list of access with query and page parameter search",
                "operationId": "postAccessPageSearch",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "query": {
                                                "description": "Query property (Keyword would be filter name, slug and description)",
                                                "properties": {
                                                    "value": {
                                                        "type": "string",
                                                        "example": "keyword"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "is_active": {
                                                "$ref": "#/components/schemas/AccessEloquent/properties/is_active"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/PagedSearchParameter"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/access/detail/{id}": {
            "get": {
                "tags": [
                    "Access"
                ],
                "summary": "Get detail access",
                "description": "Get detail access",
                "operationId": "getAccessDetail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/access/create": {
            "post": {
                "tags": [
                    "Access"
                ],
                "summary": "Create access",
                "description": "Create access",
                "operationId": "postAccessCreate",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateAccessEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/access/update": {
            "put": {
                "tags": [
                    "Access"
                ],
                "summary": "Update access",
                "description": "Update access",
                "operationId": "putAccessUpdate",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateAccessEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/access/delete/{id}": {
            "delete": {
                "tags": [
                    "Access"
                ],
                "summary": "Delete access",
                "description": "Delete access",
                "operationId": "deleteAccess",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/access/deletes": {
            "delete": {
                "tags": [
                    "Access"
                ],
                "summary": "Delete bulk access",
                "description": "Delete bulk access",
                "operationId": "deleteBulkAccess",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ids": {
                                        "description": "Ids property",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "format": "int64",
                                            "example": 1
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/access/active": {
            "put": {
                "tags": [
                    "Access"
                ],
                "summary": "Set active access",
                "description": "Set active access",
                "operationId": "putAccessActive",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "is_active"
                                ],
                                "properties": {
                                    "id": {
                                        "description": "Id property",
                                        "type": "integer",
                                        "format": "int64",
                                        "example": 1
                                    },
                                    "is_active": {
                                        "$ref": "#/components/schemas/AccessEloquent/properties/is_active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/access/slug/{name}": {
            "get": {
                "tags": [
                    "Access"
                ],
                "summary": "Get slug of access",
                "description": "Get slug of access",
                "operationId": "getAccessSlug",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name parameter",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/application/list": {
            "get": {
                "tags": [
                    "Application"
                ],
                "summary": "Get list of application",
                "description": "Get list of application",
                "operationId": "getApplicationList",
                "parameters": [
                    {
                        "name": "is_active",
                        "in": "query",
                        "description": "Is active parameter (active = 1; not active = 0)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/application/list-search": {
            "post": {
                "tags": [
                    "Application"
                ],
                "summary": "Get list of application with query search",
                "description": "Get list of application with query search",
                "operationId": "postApplicationListSearch",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "query": {
                                        "description": "Query property (Keyword would be filter name, slug and description)",
                                        "type": "string",
                                        "example": "keyword"
                                    },
                                    "is_active": {
                                        "$ref": "#/components/schemas/ApplicationEloquent/properties/is_active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/application/page-search": {
            "post": {
                "tags": [
                    "Application"
                ],
                "summary": "Get list of application with query and page parameter search",
                "description": "Get list of application with query and page parameter search",
                "operationId": "postApplicationPageSearch",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "query": {
                                                "description": "Query property (Keyword would be filter name, slug and description)",
                                                "properties": {
                                                    "value": {
                                                        "type": "string",
                                                        "example": "keyword"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "is_active": {
                                                "$ref": "#/components/schemas/ApplicationEloquent/properties/is_active"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/PagedSearchParameter"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/application/detail/{id}": {
            "get": {
                "tags": [
                    "Application"
                ],
                "summary": "Get detail application",
                "description": "Get detail application",
                "operationId": "getApplicationDetail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/application/create": {
            "post": {
                "tags": [
                    "Application"
                ],
                "summary": "Create application",
                "description": "Create application",
                "operationId": "postApplicationCreate",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateApplicationEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/application/update": {
            "put": {
                "tags": [
                    "Application"
                ],
                "summary": "Update application",
                "description": "Update application",
                "operationId": "putApplicationUpdate",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateApplicationEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/application/delete/{id}": {
            "delete": {
                "tags": [
                    "Application"
                ],
                "summary": "Delete application",
                "description": "Delete application",
                "operationId": "deleteApplication",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/application/deletes": {
            "delete": {
                "tags": [
                    "Application"
                ],
                "summary": "Delete bulk application",
                "description": "Delete bulk application",
                "operationId": "deleteBulkApplication",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ids": {
                                        "description": "Ids property",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "format": "int64",
                                            "example": 1
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/application/active": {
            "put": {
                "tags": [
                    "Application"
                ],
                "summary": "Set active application",
                "description": "Set active application",
                "operationId": "putApplicationActive",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "is_active"
                                ],
                                "properties": {
                                    "id": {
                                        "description": "Id property",
                                        "type": "integer",
                                        "format": "int64",
                                        "example": 1
                                    },
                                    "is_active": {
                                        "$ref": "#/components/schemas/ApplicationEloquent/properties/is_active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/application/slug/{name}": {
            "get": {
                "tags": [
                    "Application"
                ],
                "summary": "Get slug of application",
                "description": "Get slug of application",
                "operationId": "getApplicationSlug",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name parameter",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/application/list-search/export": {
            "post": {
                "tags": [
                    "Application"
                ],
                "summary": "Export list of application",
                "description": "Export list of application",
                "operationId": "postApplicationListSearchExport",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "export": {
                                        "description": "Export property",
                                        "type": "string",
                                        "default": "",
                                        "enum": [
                                            "excel",
                                            "pdf"
                                        ],
                                        "example": "excel"
                                    },
                                    "is_active": {
                                        "$ref": "#/components/schemas/ApplicationEloquent/properties/is_active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/bank/list": {
            "get": {
                "tags": [
                    "Bank"
                ],
                "summary": "Get list of bank",
                "description": "Get list of bank",
                "operationId": "getBankList",
                "parameters": [
                    {
                        "name": "is_active",
                        "in": "query",
                        "description": "Is active parameter (active = 1; not active = 0)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/bank/list-search": {
            "post": {
                "tags": [
                    "Bank"
                ],
                "summary": "Get list of bank with query search",
                "description": "Get list of bank with query search",
                "operationId": "postBankListSearch",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "query": {
                                        "description": "Query property (Keyword would be filter name, slug and description)",
                                        "type": "string",
                                        "example": "keyword"
                                    },
                                    "is_active": {
                                        "$ref": "#/components/schemas/BankEloquent/properties/is_active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/bank/page-search": {
            "post": {
                "tags": [
                    "Bank"
                ],
                "summary": "Get list of bank with query and page parameter search",
                "description": "Get list of bank with query and page parameter search",
                "operationId": "postBankPageSearch",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "query": {
                                                "description": "Query property (Keyword would be filter name, slug and description)",
                                                "properties": {
                                                    "value": {
                                                        "type": "string",
                                                        "example": "keyword"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "is_active": {
                                                "$ref": "#/components/schemas/BankEloquent/properties/is_active"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/PagedSearchParameter"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/bank/detail/{id}": {
            "get": {
                "tags": [
                    "Bank"
                ],
                "summary": "Get detail bank",
                "description": "Get detail bank",
                "operationId": "getBankDetail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/bank/create": {
            "post": {
                "tags": [
                    "Bank"
                ],
                "summary": "Create bank",
                "description": "Create bank",
                "operationId": "postBankCreate",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateBankEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/bank/update": {
            "put": {
                "tags": [
                    "Bank"
                ],
                "summary": "Update bank",
                "description": "Update bank",
                "operationId": "putBankUpdate",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateBankEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/bank/delete/{id}": {
            "delete": {
                "tags": [
                    "Bank"
                ],
                "summary": "Delete bank",
                "description": "Delete bank",
                "operationId": "deleteBank",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/bank/deletes": {
            "delete": {
                "tags": [
                    "Bank"
                ],
                "summary": "Delete bulk bank",
                "description": "Delete bulk bank",
                "operationId": "deleteBulkBank",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ids": {
                                        "description": "Ids property",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "format": "int64",
                                            "example": 1
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/bank/active": {
            "put": {
                "tags": [
                    "Bank"
                ],
                "summary": "Active bank",
                "description": "Return object of bank activated",
                "operationId": "putBankActive",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "is_active"
                                ],
                                "properties": {
                                    "id": {
                                        "description": "Id property",
                                        "type": "integer",
                                        "format": "int64",
                                        "example": 1
                                    },
                                    "is_active": {
                                        "$ref": "#/components/schemas/BankEloquent/properties/is_active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/bank/slug/{name}": {
            "get": {
                "tags": [
                    "Bank"
                ],
                "summary": "Get slug of bank",
                "description": "Get slug of bank",
                "operationId": "getBankSlug",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name parameter",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/bank/list-search/export": {
            "post": {
                "tags": [
                    "Bank"
                ],
                "summary": "Export list of bank",
                "description": "Export list of bank",
                "operationId": "postBankListSearchExport",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "export": {
                                        "description": "Export property",
                                        "type": "string",
                                        "default": "",
                                        "enum": [
                                            "excel",
                                            "pdf"
                                        ],
                                        "example": "excel"
                                    },
                                    "is_active": {
                                        "$ref": "#/components/schemas/BankEloquent/properties/is_active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/company-category/list": {
            "get": {
                "tags": [
                    "Company Category"
                ],
                "summary": "Get company category list",
                "description": "Get company category list",
                "operationId": "getCompanyCategoryList",
                "parameters": [
                    {
                        "name": "is_active",
                        "in": "query",
                        "description": "Is active parameter (active = 1; not active = 0)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/company-category/list-search": {
            "post": {
                "tags": [
                    "Company Category"
                ],
                "summary": "Get list of company category with query search",
                "description": "Get list of company category with query search",
                "operationId": "postCompany CategoryListSearch",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "query": {
                                        "description": "Query property (Keyword would be filter name, slug and description)",
                                        "type": "string",
                                        "example": "keyword"
                                    },
                                    "is_active": {
                                        "$ref": "#/components/schemas/CompanyCategoryEloquent/properties/is_active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/company-category/page-search": {
            "post": {
                "tags": [
                    "Company Category"
                ],
                "summary": "Get list of company category with query and page parameter search",
                "description": "Get list of company category with query and page parameter search",
                "operationId": "postCompany CategoryPageSearch",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "query": {
                                                "description": "Query property (Keyword would be filter name, slug and description)",
                                                "properties": {
                                                    "value": {
                                                        "type": "string",
                                                        "example": "keyword"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "is_active": {
                                                "$ref": "#/components/schemas/CompanyCategoryEloquent/properties/is_active"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/PagedSearchParameter"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/company-category/detail/{id}": {
            "get": {
                "tags": [
                    "Company Category"
                ],
                "summary": "Get detail company category",
                "description": "Get detail company category",
                "operationId": "getCompany CategoryDetail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/company-category/create": {
            "post": {
                "tags": [
                    "Company Category"
                ],
                "summary": "Create company category",
                "description": "Create company category",
                "operationId": "postCompanyCategoryCreate",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateCompanyCategoryEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/company-category/update": {
            "put": {
                "tags": [
                    "Company Category"
                ],
                "summary": "Update company category",
                "description": "Update company category",
                "operationId": "putCompanyCategoryUpdate",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCompanyCategoryEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/company-category/delete/{id}": {
            "delete": {
                "tags": [
                    "Company Category"
                ],
                "summary": "Delete company category",
                "description": "Delete company category",
                "operationId": "deleteCompanyCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/company-category/deletes": {
            "delete": {
                "tags": [
                    "Company Category"
                ],
                "summary": "Delete bulk company category",
                "description": "Return objects of company category deleted",
                "operationId": "deleteBulkCompanyCategory",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ids": {
                                        "description": "Ids property",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "format": "int64",
                                            "example": 1
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/company-category/active": {
            "put": {
                "tags": [
                    "Company Category"
                ],
                "summary": "Active company category",
                "description": "Active company category",
                "operationId": "putCompanyCategoryActive",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "is_active"
                                ],
                                "properties": {
                                    "id": {
                                        "description": "Id property",
                                        "type": "integer",
                                        "format": "int64",
                                        "example": 1
                                    },
                                    "is_active": {
                                        "$ref": "#/components/schemas/CompanyCategoryEloquent/properties/is_active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/company-category/slug/{name}": {
            "get": {
                "tags": [
                    "Company Category"
                ],
                "summary": "Get slug of company category",
                "description": "Get slug of company category",
                "operationId": "getCompanyCategorySlug",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name parameter",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/company-category/list-search/export": {
            "post": {
                "tags": [
                    "Company Category"
                ],
                "summary": "Export list of company category",
                "description": "Export list of company category",
                "operationId": "postCompanyCategoryListSearchExport",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "export": {
                                        "description": "Export property",
                                        "type": "string",
                                        "default": "",
                                        "enum": [
                                            "excel",
                                            "pdf"
                                        ],
                                        "example": "excel"
                                    },
                                    "is_active": {
                                        "$ref": "#/components/schemas/CompanyCategoryEloquent/properties/is_active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/company/list": {
            "get": {
                "tags": [
                    "Company"
                ],
                "summary": "Get list of company",
                "description": "Get list of company",
                "operationId": "getCompanyList",
                "parameters": [
                    {
                        "name": "company_category_id",
                        "in": "query",
                        "description": "Company category id parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "example": 1
                        }
                    },
                    {
                        "name": "employee_number_scale_id",
                        "in": "query",
                        "description": "Employee number scale id parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "example": 1
                        }
                    },
                    {
                        "name": "is_active",
                        "in": "query",
                        "description": "Is active parameter (active = 1; not active = 0)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/company/list-search": {
            "post": {
                "tags": [
                    "Company"
                ],
                "summary": "Get list of company with query search",
                "description": "Get list of company with query search",
                "operationId": "postCompanyListSearch",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "query": {
                                        "description": "Query property (Keyword would be filter name, slug, email, url and description)",
                                        "type": "string",
                                        "example": "keyword"
                                    },
                                    "company_category_id": {
                                        "$ref": "#/components/schemas/CompanyEloquent/properties/company_category_id"
                                    },
                                    "employee_number_scale_id": {
                                        "$ref": "#/components/schemas/CompanyEloquent/properties/employee_number_scale_id"
                                    },
                                    "is_active": {
                                        "$ref": "#/components/schemas/CompanyEloquent/properties/is_active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/company/page-search": {
            "post": {
                "tags": [
                    "Company"
                ],
                "summary": "Get list of company with query and page parameter search",
                "description": "Get list of company with query and page parameter search",
                "operationId": "postCompanyPageSearch",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "query": {
                                                "description": "Query property (Keyword would be filter name, slug, email, url and description)",
                                                "properties": {
                                                    "value": {
                                                        "type": "string",
                                                        "example": "keyword"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "company_category_id": {
                                                "$ref": "#/components/schemas/CompanyEloquent/properties/company_category_id"
                                            },
                                            "employee_number_scale_id": {
                                                "$ref": "#/components/schemas/CompanyEloquent/properties/employee_number_scale_id"
                                            },
                                            "is_active": {
                                                "$ref": "#/components/schemas/CompanyEloquent/properties/is_active"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/PagedSearchParameter"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/company/detail/{id}": {
            "get": {
                "tags": [
                    "Company"
                ],
                "summary": "Get detail company",
                "description": "Get detail company",
                "operationId": "getCompanyDetail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/company/create": {
            "post": {
                "tags": [
                    "Company"
                ],
                "summary": "Create company",
                "description": "Create company",
                "operationId": "postCompanyCreate",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/CreateCompanyEloquent"
                                    },
                                    {
                                        "properties": {
                                            "media_libraries": {
                                                "description": "Media library property",
                                                "type": "array",
                                                "items": {
                                                    "properties": {
                                                        "media_library_id": {
                                                            "description": "Media library id property",
                                                            "type": "string",
                                                            "example": "152cc099-56a2-46b6-b2a8-ebc080477e3a"
                                                        },
                                                        "pivot": {
                                                            "description": "Pivot property",
                                                            "properties": {
                                                                "attribute": {
                                                                    "type": "string",
                                                                    "example": "logo"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/company/update": {
            "put": {
                "tags": [
                    "Company"
                ],
                "summary": "Update company",
                "description": "Update company",
                "operationId": "putCompanyUpdate",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/UpdateCompanyEloquent"
                                    },
                                    {
                                        "properties": {
                                            "media_libraries": {
                                                "description": "Media library property",
                                                "type": "array",
                                                "items": {
                                                    "properties": {
                                                        "media_library_id": {
                                                            "description": "Media library id property",
                                                            "type": "string",
                                                            "example": "152cc099-56a2-46b6-b2a8-ebc080477e3a"
                                                        },
                                                        "pivot": {
                                                            "description": "Pivot property",
                                                            "properties": {
                                                                "attribute": {
                                                                    "type": "string",
                                                                    "example": "logo"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/company/delete/{id}": {
            "delete": {
                "tags": [
                    "Company"
                ],
                "summary": "Delete company",
                "description": "Delete company",
                "operationId": "deleteCompany",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/company/deletes": {
            "delete": {
                "tags": [
                    "Company"
                ],
                "summary": "Delete bulk company",
                "description": "Delete bulk company",
                "operationId": "deleteBulkCompany",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ids": {
                                        "description": "Ids property",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "format": "int64",
                                            "example": 1
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/company/active": {
            "put": {
                "tags": [
                    "Company"
                ],
                "summary": "Set active company",
                "description": "Set active company",
                "operationId": "putCompanyActive",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "is_active"
                                ],
                                "properties": {
                                    "id": {
                                        "description": "Id property",
                                        "type": "integer",
                                        "format": "int64"
                                    },
                                    "is_active": {
                                        "$ref": "#/components/schemas/CompanyEloquent/properties/is_active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/company/slug/{name}": {
            "get": {
                "tags": [
                    "Company"
                ],
                "summary": "Get slug of company",
                "description": "Get slug of company",
                "operationId": "getCompanySlug",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name parameter",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/company/list-search/export": {
            "post": {
                "tags": [
                    "Company"
                ],
                "summary": "Export list of company",
                "description": "Export list of company",
                "operationId": "postCompanyListSearchExport",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "export": {
                                        "description": "Export property",
                                        "type": "string",
                                        "default": "",
                                        "enum": [
                                            "excel",
                                            "pdf"
                                        ],
                                        "example": "excel"
                                    },
                                    "company_category_id": {
                                        "$ref": "#/components/schemas/CompanyEloquent/properties/company_category_id"
                                    },
                                    "employee_number_scale_id": {
                                        "$ref": "#/components/schemas/CompanyEloquent/properties/employee_number_scale_id"
                                    },
                                    "is_active": {
                                        "$ref": "#/components/schemas/CompanyEloquent/properties/is_active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/contract-type/list": {
            "get": {
                "tags": [
                    "Contract Type"
                ],
                "summary": "Get list of contract type",
                "description": "Get list of contract type",
                "operationId": "getContractTypeList",
                "parameters": [
                    {
                        "name": "is_active",
                        "in": "query",
                        "description": "Is active parameter (active = 1; not active = 0)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/contract-type/list-search": {
            "post": {
                "tags": [
                    "Contract Type"
                ],
                "summary": "Get list of contract type with query search",
                "description": "Get list of contract type with query search",
                "operationId": "postContractTypeListSearch",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "query": {
                                        "description": "Query property (Keyword would be filter name, slug and description)",
                                        "type": "string",
                                        "example": "keyword"
                                    },
                                    "is_active": {
                                        "$ref": "#/components/schemas/ContractTypeEloquent/properties/is_active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/contract-type/page-search": {
            "post": {
                "tags": [
                    "Contract Type"
                ],
                "summary": "Get list of contract type with query and page parameter search",
                "description": "Get list of contract type with query and page parameter search",
                "operationId": "postContractTypePageSearch",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "query": {
                                                "description": "Query property (Keyword would be filter username and email)",
                                                "properties": {
                                                    "value": {
                                                        "type": "string",
                                                        "example": "keyword"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "is_active": {
                                                "$ref": "#/components/schemas/ContractTypeEloquent/properties/is_active"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/PagedSearchParameter"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/contract-type/detail/{id}": {
            "get": {
                "tags": [
                    "Contract Type"
                ],
                "summary": "Get detail contract type",
                "description": "Get detail contract type",
                "operationId": "getContractTypeDetail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/contract-type/create": {
            "post": {
                "tags": [
                    "Contract Type"
                ],
                "summary": "Create contract type",
                "description": "Create contract type",
                "operationId": "postContractTypeCreate",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateContractTypeEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/contract-type/update": {
            "put": {
                "tags": [
                    "Contract Type"
                ],
                "summary": "Update contract type",
                "description": "Update contract type",
                "operationId": "putContractTypeUpdate",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateContractTypeEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/contract-type/delete/{id}": {
            "delete": {
                "tags": [
                    "Contract Type"
                ],
                "summary": "Delete contract type",
                "description": "Delete contract type",
                "operationId": "deleteContractType",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/contract-type/deletes": {
            "delete": {
                "tags": [
                    "Contract Type"
                ],
                "summary": "Delete bulk contract type",
                "description": "Return objects of contract type deleted",
                "operationId": "deleteBulkContractType",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ids": {
                                        "description": "Ids property",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "format": "int64",
                                            "example": 1
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/contract-type/active": {
            "put": {
                "tags": [
                    "Contract Type"
                ],
                "summary": "Set active contract type",
                "description": "Set active contract type",
                "operationId": "putContractTypeActive",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "is_active"
                                ],
                                "properties": {
                                    "id": {
                                        "description": "Id property",
                                        "type": "integer",
                                        "format": "int64",
                                        "example": 1
                                    },
                                    "is_active": {
                                        "$ref": "#/components/schemas/ContractTypeEloquent/properties/is_active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/contract-type/slug/{name}": {
            "get": {
                "tags": [
                    "Contract Type"
                ],
                "summary": "Get slug of contract type",
                "description": "Get slug of contract type",
                "operationId": "getContractTypeSlug",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name parameter",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/contract-type/list-search/export": {
            "post": {
                "tags": [
                    "Contract Type"
                ],
                "summary": "Export list of contract type",
                "description": "Export list of contract type",
                "operationId": "postContractTypeListSearchExport",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "export": {
                                        "description": "Export property",
                                        "type": "string",
                                        "default": "",
                                        "enum": [
                                            "excel",
                                            "pdf"
                                        ],
                                        "example": "excel"
                                    },
                                    "is_active": {
                                        "$ref": "#/components/schemas/ContractTypeEloquent/properties/is_active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/degree/list": {
            "get": {
                "tags": [
                    "Degree"
                ],
                "summary": "Get list of degree",
                "description": "Get list of degree",
                "operationId": "getDegreeList",
                "parameters": [
                    {
                        "name": "is_active",
                        "in": "query",
                        "description": "Is active parameter (active = 1; not active = 0)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/degree/list-search": {
            "post": {
                "tags": [
                    "Degree"
                ],
                "summary": "Get list of degree with query search",
                "description": "Get list of degree with query search",
                "operationId": "postDegreeListSearch",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "query": {
                                        "description": "Query property (Keyword would be filter name, slug and description)",
                                        "type": "string",
                                        "example": "keyword"
                                    },
                                    "is_active": {
                                        "$ref": "#/components/schemas/DegreeEloquent/properties/is_active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/degree/page-search": {
            "post": {
                "tags": [
                    "Degree"
                ],
                "summary": "Get list of degree with query and page parameter search",
                "description": "Get list of degree with query and page parameter search",
                "operationId": "postDegreePageSearch",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "query": {
                                                "description": "Query property (Keyword would be filter name, slug and description)",
                                                "properties": {
                                                    "value": {
                                                        "type": "string",
                                                        "example": "keyword"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "is_active": {
                                                "$ref": "#/components/schemas/DegreeEloquent/properties/is_active"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/PagedSearchParameter"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/degree/detail/{id}": {
            "get": {
                "tags": [
                    "Degree"
                ],
                "summary": "Get detail degree",
                "description": "Get detail degree",
                "operationId": "getDegreeDetail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/degree/create": {
            "post": {
                "tags": [
                    "Degree"
                ],
                "summary": "Create degree",
                "description": "Create degree",
                "operationId": "postDegreeCreate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateDegreeEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/degree/update": {
            "put": {
                "tags": [
                    "Degree"
                ],
                "summary": "Update degree",
                "description": "Update degree",
                "operationId": "putDegreeUpdate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateDegreeEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/degree/delete/{id}": {
            "delete": {
                "tags": [
                    "Degree"
                ],
                "summary": "Delete degree",
                "description": "Delete degree",
                "operationId": "deleteDegree",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/degree/deletes": {
            "delete": {
                "tags": [
                    "Degree"
                ],
                "summary": "Delete bulk degree",
                "description": "Delete bulk degree",
                "operationId": "deleteBulkDegree",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ids": {
                                        "description": "Ids parameter",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "format": "int64",
                                            "example": 1
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/degree/active": {
            "put": {
                "tags": [
                    "Degree"
                ],
                "summary": "Set active degree",
                "description": "Set active degree",
                "operationId": "putDegreeActive",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "is_active"
                                ],
                                "properties": {
                                    "id": {
                                        "description": "Id parameter",
                                        "type": "integer",
                                        "format": "int64",
                                        "example": 1
                                    },
                                    "is_active": {
                                        "$ref": "#/components/schemas/DegreeEloquent/properties/is_active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/degree/slug/{name}": {
            "get": {
                "tags": [
                    "Degree"
                ],
                "summary": "Get slug of degree",
                "description": "Get slug of degree",
                "operationId": "getDegreeSlug",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name parameter",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/degree/list-search/export": {
            "post": {
                "tags": [
                    "Degree"
                ],
                "summary": "Export list of degree",
                "description": "Export list of degree",
                "operationId": "postDegreeListSearchExport",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "type": {
                                        "description": "Type property",
                                        "type": "string",
                                        "default": "",
                                        "enum": [
                                            "excel",
                                            "pdf"
                                        ],
                                        "example": "excel"
                                    },
                                    "is_active": {
                                        "$ref": "#/components/schemas/DegreeEloquent/properties/is_active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/employee-number-scale/list": {
            "get": {
                "tags": [
                    "Employee Number Scale"
                ],
                "summary": "Get list of employee number scale",
                "description": "Get list of employee number scale",
                "operationId": "getEmployeeNumberScaleList",
                "parameters": [
                    {
                        "name": "is_active",
                        "in": "query",
                        "description": "Is active parameter (active = 1; not active = 0)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/employee-number-scale/list-search": {
            "post": {
                "tags": [
                    "Employee Number Scale"
                ],
                "summary": "Get list of employee number scale with query search",
                "description": "Get list of employee number scale with query search",
                "operationId": "postEmployeeNumberScaleListSearch",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "query": {
                                        "description": "Query property (Keyword would be filter name, slug and description)",
                                        "type": "string",
                                        "example": "keyword"
                                    },
                                    "is_active": {
                                        "$ref": "#/components/schemas/EmployeeNumberScaleEloquent/properties/is_active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/employee-number-scale/page-search": {
            "post": {
                "tags": [
                    "Employee Number Scale"
                ],
                "summary": "Get list of employee number scale with query and page parameter search",
                "description": "Get list of employee number scale with query and page parameter search",
                "operationId": "postEmployeeNumberScalePageSearch",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "query": {
                                                "description": "Query property (Keyword would be filter name, slug and description)",
                                                "properties": {
                                                    "value": {
                                                        "type": "string",
                                                        "example": "keyword"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "is_active": {
                                                "$ref": "#/components/schemas/EmployeeNumberScaleEloquent/properties/is_active"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/PagedSearchParameter"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/employee-number-scale/detail/{id}": {
            "get": {
                "tags": [
                    "Employee Number Scale"
                ],
                "summary": "Get detail employee number scale",
                "description": "Get detail employee number scale",
                "operationId": "getEmployeeNumberScaleDetail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/employee-number-scale/create": {
            "post": {
                "tags": [
                    "Employee Number Scale"
                ],
                "summary": "Create employee number scale",
                "description": "Create employee number scale",
                "operationId": "postEmployeeNumberScaleCreate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateEmployeeNumberScaleEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/employee-number-scale/update": {
            "put": {
                "tags": [
                    "Employee Number Scale"
                ],
                "summary": "Update employee number scale",
                "description": "Update employee number scale",
                "operationId": "putEmployeeNumberScaleUpdate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateEmployeeNumberScaleEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/employee-number-scale/delete/{id}": {
            "delete": {
                "tags": [
                    "Employee Number Scale"
                ],
                "summary": "Delete employee number scale",
                "description": "Delete employee number scale",
                "operationId": "deleteEmployeeNumberScale",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/employe-number-scale/deletes": {
            "delete": {
                "tags": [
                    "Employee Number Scale"
                ],
                "summary": "Delete bulk employe number scale",
                "description": "Delete bulk employe number scale",
                "operationId": "deleteBulkEmployeeNumberScale",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ids": {
                                        "description": "Ids parameter",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "format": "int64",
                                            "example": 1
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/employee-number-scale/active": {
            "put": {
                "tags": [
                    "Employee Number Scale"
                ],
                "summary": "Set active employee number scale",
                "description": "Set active employee number scale",
                "operationId": "putEmployeeNumberScaleActive",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "is_active"
                                ],
                                "properties": {
                                    "id": {
                                        "description": "Id property",
                                        "type": "integer",
                                        "format": "int64",
                                        "example": 1
                                    },
                                    "is_active": {
                                        "$ref": "#/components/schemas/EmployeeNumberScaleEloquent/properties/is_active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/employee-number-scale/slug/{name}": {
            "get": {
                "tags": [
                    "Employee Number Scale"
                ],
                "summary": "Get slug of employee number scale",
                "description": "Get slug of employee number scale",
                "operationId": "getEmployeeNumberScaleSlug",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name parameter",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/employee-number-scale/list-search/export": {
            "post": {
                "tags": [
                    "Employee Number Scale"
                ],
                "summary": "Export list of employee number scale",
                "description": "Export list of employee number scale",
                "operationId": "postEmployeeNumberScaleListSearchExport",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "export": {
                                        "description": "Export property",
                                        "type": "string",
                                        "default": "",
                                        "enum": [
                                            "excel",
                                            "pdf"
                                        ],
                                        "example": "excel"
                                    },
                                    "is_active": {
                                        "$ref": "#/components/schemas/EmployeeNumberScaleEloquent/properties/is_active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/gender/list": {
            "get": {
                "tags": [
                    "Gender"
                ],
                "summary": "Get list of gender",
                "description": "Get list of gender",
                "operationId": "getGenderList",
                "parameters": [
                    {
                        "name": "is_active",
                        "in": "query",
                        "description": "Is active parameter (active = 1; not active = 0)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/gender/list-search": {
            "post": {
                "tags": [
                    "Gender"
                ],
                "summary": "Get list of gender with query search",
                "description": "Get list of gender with query search",
                "operationId": "postGenderListSearch",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "query": {
                                        "description": "Query property (Keyword would be filter name, slug and description)",
                                        "type": "string",
                                        "example": "keyword"
                                    },
                                    "is_active": {
                                        "$ref": "#/components/schemas/GenderEloquent/properties/is_active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/gender/page-search": {
            "post": {
                "tags": [
                    "Gender"
                ],
                "summary": "Get list of gender with query and page parameter search",
                "description": "Get list of gender with query and page parameter search",
                "operationId": "postGenderPageSearch",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "query": {
                                                "description": "Query property (Keyword would be filter name, slug and description)",
                                                "properties": {
                                                    "value": {
                                                        "type": "string",
                                                        "example": "keyword"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "is_active": {
                                                "$ref": "#/components/schemas/GenderEloquent/properties/is_active"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/PagedSearchParameter"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/gender/detail/{id}": {
            "get": {
                "tags": [
                    "Gender"
                ],
                "summary": "Get detail gender",
                "description": "Get detail gender",
                "operationId": "getGenderDetail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/gender/create": {
            "post": {
                "tags": [
                    "Gender"
                ],
                "summary": "Create gender",
                "description": "Create gender",
                "operationId": "postGenderCreate",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateGenderEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/gender/update": {
            "put": {
                "tags": [
                    "Gender"
                ],
                "summary": "Update gender",
                "description": "Update gender",
                "operationId": "putGenderUpdate",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateGenderEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/gender/delete/{id}": {
            "delete": {
                "tags": [
                    "Gender"
                ],
                "summary": "Delete gender",
                "description": "Delete gender",
                "operationId": "deleteGender",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of gender",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/gender/deletes": {
            "delete": {
                "tags": [
                    "Gender"
                ],
                "summary": "Delete bulk gender",
                "description": "Delete bulk gender",
                "operationId": "deleteBulkGender",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ids": {
                                        "description": "Ids property",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "format": "int64",
                                            "example": 1
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/gender/active": {
            "put": {
                "tags": [
                    "Gender"
                ],
                "summary": "Set active gender",
                "description": "Set active gender",
                "operationId": "putGenderActive",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "is_active"
                                ],
                                "properties": {
                                    "id": {
                                        "description": "Id property",
                                        "type": "integer",
                                        "format": "int64",
                                        "example": 1
                                    },
                                    "is_active": {
                                        "$ref": "#/components/schemas/GenderEloquent/properties/is_active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/gender/slug/{name}": {
            "get": {
                "tags": [
                    "Gender"
                ],
                "summary": "Get slug of gender",
                "description": "Get slug of gender",
                "operationId": "getGenderSlug",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name parameter",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/gender/list-search/export": {
            "post": {
                "tags": [
                    "Gender"
                ],
                "summary": "Export list of gender",
                "description": "Export list of gender",
                "operationId": "postGenderListSearchExport",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "export": {
                                        "description": "Export property",
                                        "type": "string",
                                        "default": "",
                                        "enum": [
                                            "excel",
                                            "pdf"
                                        ],
                                        "example": "excel"
                                    },
                                    "is_active": {
                                        "description": "Filter is_active of gender by is_active parameter. 1 for active and 0 for not active",
                                        "type": "integer",
                                        "format": "int32"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/group/list": {
            "get": {
                "tags": [
                    "Group"
                ],
                "summary": "Get list of group",
                "description": "Get list of group",
                "operationId": "getGroupList",
                "parameters": [
                    {
                        "name": "is_active",
                        "in": "query",
                        "description": "Is active parameter (active = 1; not active = 0)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/group/list-search": {
            "post": {
                "tags": [
                    "Group"
                ],
                "summary": "Get list of group with query search",
                "description": "Get list of group with query search",
                "operationId": "postGroupListSearch",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "query": {
                                        "description": "Query property (Keyword would be filter code, name, slug and description)",
                                        "type": "string",
                                        "example": "keyword"
                                    },
                                    "is_active": {
                                        "$ref": "#/components/schemas/GroupEloquent/properties/is_active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/group/page-search": {
            "post": {
                "tags": [
                    "Group"
                ],
                "summary": "Get list of group with query and page parameter search",
                "description": "Get list of group with query and page parameter search",
                "operationId": "postGroupPageSearch",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "query": {
                                                "description": "Query property (Keyword would be filter code, name, slug and description)",
                                                "properties": {
                                                    "value": {
                                                        "type": "string",
                                                        "example": "keyword"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "is_active": {
                                                "$ref": "#/components/schemas/GroupEloquent/properties/is_active"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/PagedSearchParameter"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/group/detail/{id}": {
            "get": {
                "tags": [
                    "Group"
                ],
                "summary": "Get detail group",
                "description": "Get detail group",
                "operationId": "getGroupDetail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/group/create": {
            "post": {
                "tags": [
                    "Group"
                ],
                "summary": "Create group",
                "description": "Create group",
                "operationId": "postGroupCreate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateGroupEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/group/update": {
            "put": {
                "tags": [
                    "Group"
                ],
                "summary": "Update group",
                "description": "Update group",
                "operationId": "putGroupUpdate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateGroupEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/group/delete/{id}": {
            "delete": {
                "tags": [
                    "Group"
                ],
                "summary": "Delete group",
                "description": "Delete group",
                "operationId": "deleteGroup",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/group/deletes": {
            "delete": {
                "tags": [
                    "Group"
                ],
                "summary": "Delete bulk group",
                "description": "Delete bulk group",
                "operationId": "deleteBulkGroup",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ids": {
                                        "description": "Ids property",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "format": "int64",
                                            "example": 1
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/group/active": {
            "put": {
                "tags": [
                    "Group"
                ],
                "summary": "Set active group",
                "description": "Set active group",
                "operationId": "putGroupActive",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "is_active"
                                ],
                                "properties": {
                                    "id": {
                                        "description": "Id property",
                                        "type": "integer",
                                        "format": "int64",
                                        "example": 1
                                    },
                                    "is_active": {
                                        "$ref": "#/components/schemas/GroupEloquent/properties/is_active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/group/slug/{name}": {
            "get": {
                "tags": [
                    "Group"
                ],
                "summary": "Get slug of group",
                "description": "Get slug of group",
                "operationId": "getGroupSlug",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name parameter",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/major/list": {
            "get": {
                "tags": [
                    "Major"
                ],
                "summary": "Get list of major",
                "description": "Get list of major",
                "operationId": "getGenderList",
                "parameters": [
                    {
                        "name": "is_active",
                        "in": "query",
                        "description": "Is active parameter (active = 1; not active = 0)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/major/list-search": {
            "post": {
                "tags": [
                    "Major"
                ],
                "summary": "Get list of major with query search",
                "description": "Get list of major with query search",
                "operationId": "postGenderListSearch",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "query": {
                                        "description": "Query property (Keyword would be filter name, slug and description)",
                                        "type": "string",
                                        "example": "keyword"
                                    },
                                    "is_active": {
                                        "$ref": "#/components/schemas/MajorEloquent/properties/is_active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/major/page-search": {
            "post": {
                "tags": [
                    "Major"
                ],
                "summary": "Get list of major with query and page parameter search",
                "description": "Get list of major with query and page parameter search",
                "operationId": "postGenderPageSearch",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "page",
                                    "perpage",
                                    "sort",
                                    "field"
                                ],
                                "properties": {
                                    "query": {
                                        "description": "Query property (Keyword would be filter name, slug and description)",
                                        "properties": {
                                            "value": {
                                                "type": "string",
                                                "example": "keyword"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "is_active": {
                                        "$ref": "#/components/schemas/MajorEloquent/properties/is_active"
                                    },
                                    "pagination": {
                                        "description": "Pagination of page",
                                        "properties": {
                                            "page": {
                                                "type": "integer",
                                                "format": "int32",
                                                "example": 1
                                            },
                                            "perpage": {
                                                "type": "integer",
                                                "format": "int32",
                                                "example": 10
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "sort": {
                                        "description": "Sort of page",
                                        "properties": {
                                            "sort": {
                                                "type": "string",
                                                "default": "",
                                                "enum": [
                                                    "ASC",
                                                    "DESC"
                                                ],
                                                "example": "ASC"
                                            },
                                            "field": {
                                                "type": "string",
                                                "example": "id"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/major/detail/{id}": {
            "get": {
                "tags": [
                    "Major"
                ],
                "summary": "Get detail major",
                "description": "Get detail major",
                "operationId": "getGenderDetail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/major/create": {
            "post": {
                "tags": [
                    "Major"
                ],
                "summary": "Create major",
                "description": "Create major",
                "operationId": "postGenderCreate",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateMajorEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/major/update": {
            "put": {
                "tags": [
                    "Major"
                ],
                "summary": "Update major",
                "description": "Update major",
                "operationId": "putGenderUpdate",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateMajorEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/major/delete/{id}": {
            "delete": {
                "tags": [
                    "Major"
                ],
                "summary": "Delete major",
                "description": "Delete major",
                "operationId": "deleteGender",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of major",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/major/deletes": {
            "delete": {
                "tags": [
                    "Major"
                ],
                "summary": "Delete bulk major",
                "description": "Delete bulk major",
                "operationId": "deleteBulkMajor",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ids": {
                                        "description": "Ids property",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "format": "int64",
                                            "example": 1
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/major/active": {
            "put": {
                "tags": [
                    "Major"
                ],
                "summary": "Set active major",
                "description": "Set active major",
                "operationId": "putGenderActive",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "is_active"
                                ],
                                "properties": {
                                    "id": {
                                        "description": "Id property",
                                        "type": "integer",
                                        "format": "int64",
                                        "example": 1
                                    },
                                    "is_active": {
                                        "$ref": "#/components/schemas/MajorEloquent/properties/is_active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/major/slug/{name}": {
            "get": {
                "tags": [
                    "Major"
                ],
                "summary": "Get slug of major",
                "description": "Get slug of major",
                "operationId": "getGenderSlug",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name parameter",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/major/list-search/export": {
            "post": {
                "tags": [
                    "Major"
                ],
                "summary": "Export list of major",
                "description": "Export list of major",
                "operationId": "postMajorListSearchExport",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "export": {
                                        "description": "Export property",
                                        "type": "string",
                                        "default": "",
                                        "enum": [
                                            "excel",
                                            "pdf"
                                        ],
                                        "example": "excel"
                                    },
                                    "is_active": {
                                        "$ref": "#/components/schemas/MajorEloquent/properties/is_active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/marital-status/list": {
            "get": {
                "tags": [
                    "Marital Status"
                ],
                "summary": "Get list of marital status",
                "description": "Get list of marital status",
                "operationId": "getGenderList",
                "parameters": [
                    {
                        "name": "is_active",
                        "in": "query",
                        "description": "Is active parameter (active = 1; not active = 0)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/marital-status/list-search": {
            "post": {
                "tags": [
                    "Marital Status"
                ],
                "summary": "Get list of marital status with query search",
                "description": "Get list of marital status with query search",
                "operationId": "postGenderListSearch",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "query": {
                                        "description": "Query property (Keyword would be filter name, slug and description)",
                                        "type": "string",
                                        "example": "keyword"
                                    },
                                    "is_active": {
                                        "$ref": "#/components/schemas/MaritalStatusEloquent/properties/is_active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/marital-status/page-search": {
            "post": {
                "tags": [
                    "Marital Status"
                ],
                "summary": "Get list of marital status with query and page parameter search",
                "description": "Get list of marital status with query and page parameter search",
                "operationId": "postGenderPageSearch",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "query": {
                                                "description": "Query property (Keyword would be filter username and email)",
                                                "properties": {
                                                    "value": {
                                                        "type": "string",
                                                        "example": "keyword"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "is_active": {
                                                "$ref": "#/components/schemas/MaritalStatusEloquent/properties/is_active"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/PagedSearchParameter"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/marital-status/detail/{id}": {
            "get": {
                "tags": [
                    "Marital Status"
                ],
                "summary": "Get detail marital status",
                "description": "Get detail marital status",
                "operationId": "getGenderDetail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/marital-status/create": {
            "post": {
                "tags": [
                    "Marital Status"
                ],
                "summary": "Create marital status",
                "description": "Create marital status",
                "operationId": "postGenderCreate",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateMaritalStatusEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/marital-status/update": {
            "put": {
                "tags": [
                    "Marital Status"
                ],
                "summary": "Update marital status",
                "description": "Update marital status",
                "operationId": "putGenderUpdate",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateMaritalStatusEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/marital-status/delete/{id}": {
            "delete": {
                "tags": [
                    "Marital Status"
                ],
                "summary": "Delete marital status",
                "description": "Delete marital status",
                "operationId": "deleteGender",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/marital-status/deletes": {
            "delete": {
                "tags": [
                    "Marital Status"
                ],
                "summary": "Delete bulk marital status",
                "description": "Delete bulk marital status",
                "operationId": "deleteBulkMaritalStatus",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ids": {
                                        "description": "Ids property",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "format": "int64",
                                            "example": 1
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/marital-status/active": {
            "put": {
                "tags": [
                    "Marital Status"
                ],
                "summary": "Set ative marital status",
                "description": "Set ative marital status",
                "operationId": "putGenderActive",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "is_active"
                                ],
                                "properties": {
                                    "id": {
                                        "description": "Id property",
                                        "type": "integer",
                                        "format": "int64",
                                        "example": 1
                                    },
                                    "is_active": {
                                        "$ref": "#/components/schemas/MaritalStatusEloquent/properties/is_active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/marital-status/slug/{name}": {
            "get": {
                "tags": [
                    "Marital Status"
                ],
                "summary": "Get slug of marital status",
                "description": "Get slug of marital status",
                "operationId": "getGenderSlug",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name parameter",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/marital-status/list-search/export": {
            "post": {
                "tags": [
                    "Marital Status"
                ],
                "summary": "Export list of marital status",
                "description": "Export list of marital status",
                "operationId": "postMaritalStatusListSearchExport",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "export": {
                                        "description": "Export property",
                                        "type": "string",
                                        "default": "",
                                        "enum": [
                                            "excel",
                                            "pdf"
                                        ],
                                        "example": "excel"
                                    },
                                    "is_active": {
                                        "$ref": "#/components/schemas/MaritalStatusEloquent/properties/is_active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/office/list": {
            "get": {
                "tags": [
                    "Office"
                ],
                "summary": "Get list of office",
                "description": "Get list of office",
                "operationId": "getOfficeList",
                "parameters": [
                    {
                        "name": "company_id",
                        "in": "query",
                        "description": "Company id parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Type parameter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "",
                            "enum": [
                                "HEAD",
                                "BRANCH"
                            ],
                            "example": "HEAD"
                        }
                    },
                    {
                        "name": "country",
                        "in": "query",
                        "description": "Country parameter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "ID"
                        }
                    },
                    {
                        "name": "is_active",
                        "in": "query",
                        "description": "Is active parameter (active = 1; not active = 0)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/office/list-search": {
            "post": {
                "tags": [
                    "Office"
                ],
                "summary": "Get list of office with query search",
                "description": "Get list of office with query search",
                "operationId": "postOfficeListSearch",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "query": {
                                        "description": "Query property (Keyword would be filter name, slug, state_or_province, city, address)",
                                        "type": "string",
                                        "example": "keyword"
                                    },
                                    "company_id": {
                                        "$ref": "#/components/schemas/OfficeEloquent/properties/company_id"
                                    },
                                    "type": {
                                        "$ref": "#/components/schemas/OfficeEloquent/properties/type"
                                    },
                                    "country": {
                                        "$ref": "#/components/schemas/OfficeEloquent/properties/country"
                                    },
                                    "is_active": {
                                        "$ref": "#/components/schemas/OfficeEloquent/properties/is_active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/office/page-search": {
            "post": {
                "tags": [
                    "Office"
                ],
                "summary": "Get list of office with query and page parameter search",
                "description": "Get list of office with query and page parameter search",
                "operationId": "postOfficePageSearch",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "query": {
                                                "description": "Query property (Keyword would be filter name, slug, state_or_province, city, address)",
                                                "properties": {
                                                    "value": {
                                                        "type": "string",
                                                        "example": "keyword"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "company_id": {
                                                "$ref": "#/components/schemas/OfficeEloquent/properties/company_id"
                                            },
                                            "type": {
                                                "$ref": "#/components/schemas/OfficeEloquent/properties/type"
                                            },
                                            "country": {
                                                "$ref": "#/components/schemas/OfficeEloquent/properties/country"
                                            },
                                            "is_active": {
                                                "$ref": "#/components/schemas/OfficeEloquent/properties/is_active"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/PagedSearchParameter"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/office/detail/{id}": {
            "get": {
                "tags": [
                    "Office"
                ],
                "summary": "Get detail office",
                "description": "Get detail office",
                "operationId": "getOfficeDetail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/office/create": {
            "post": {
                "tags": [
                    "Office"
                ],
                "summary": "Create office",
                "description": "Create office",
                "operationId": "postOfficeCreate",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateOfficeEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/office/update": {
            "put": {
                "tags": [
                    "Office"
                ],
                "summary": "Update office",
                "description": "Update office",
                "operationId": "putOfficeUpdate",
                "requestBody": {
                    "content": {
                        "application/office": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateOfficeEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/office/delete/{id}": {
            "delete": {
                "tags": [
                    "Office"
                ],
                "summary": "Delete office",
                "description": "Delete office",
                "operationId": "deleteOffice",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of office",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/office/deletes": {
            "delete": {
                "tags": [
                    "Office"
                ],
                "summary": "Delete bulk office",
                "description": "Delete bulk office",
                "operationId": "deleteBulkOffice",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ids": {
                                        "description": "Ids property",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "format": "int64",
                                            "example": 1
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/office/active": {
            "put": {
                "tags": [
                    "Office"
                ],
                "summary": "Set active office",
                "description": "Set active office",
                "operationId": "putOfficeActive",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "is_active"
                                ],
                                "properties": {
                                    "id": {
                                        "description": "Id property",
                                        "type": "integer",
                                        "format": "int64",
                                        "example": 1
                                    },
                                    "is_active": {
                                        "$ref": "#/components/schemas/OfficeEloquent/properties/is_active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/office/slug/{company_id}/{name}": {
            "get": {
                "tags": [
                    "Office"
                ],
                "summary": "Get slug of office",
                "description": "Get slug of office",
                "operationId": "getOfficeSlug",
                "parameters": [
                    {
                        "name": "company_id",
                        "in": "path",
                        "description": "Company id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name parameter",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/office/list-search/export": {
            "post": {
                "tags": [
                    "Office"
                ],
                "summary": "Export list of office",
                "description": "Export list of office",
                "operationId": "postOfficeListSearchExport",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "export": {
                                        "description": "Export property",
                                        "type": "string",
                                        "default": "",
                                        "enum": [
                                            "excel",
                                            "pdf"
                                        ],
                                        "example": "excel"
                                    },
                                    "company_id": {
                                        "$ref": "#/components/schemas/OfficeEloquent/properties/company_id"
                                    },
                                    "type": {
                                        "$ref": "#/components/schemas/OfficeEloquent/properties/type"
                                    },
                                    "is_active": {
                                        "$ref": "#/components/schemas/OfficeEloquent/properties/is_active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/permission/list": {
            "get": {
                "tags": [
                    "Permission"
                ],
                "summary": "Get list of permission",
                "description": "Get list of permission",
                "operationId": "getPermissionList",
                "parameters": [
                    {
                        "name": "is_active",
                        "in": "query",
                        "description": "Is active parameter (active = 1; not active = 0)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/permission/list-search": {
            "post": {
                "tags": [
                    "Permission"
                ],
                "summary": "Get list of permission with query search",
                "description": "Get list of permission with query search",
                "operationId": "postPermissionListSearch",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "query": {
                                        "description": "Query property (Keyword would be filter name, slug, server, path and description)",
                                        "type": "string",
                                        "example": "keyword"
                                    },
                                    "is_active": {
                                        "$ref": "#/components/schemas/PermissionEloquent/properties/is_active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/permission/page-search": {
            "post": {
                "tags": [
                    "Permission"
                ],
                "summary": "Get list of permission with query and page parameter search",
                "description": "Get list of permission with query and page parameter search",
                "operationId": "postPermissionPageSearch",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "query": {
                                                "description": "Query property (Keyword would be filter name, slug, server, path and description)",
                                                "properties": {
                                                    "value": {
                                                        "type": "string",
                                                        "example": "keyword"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "is_active": {
                                                "$ref": "#/components/schemas/PermissionEloquent/properties/is_active"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/PagedSearchParameter"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/permission/detail/{id}": {
            "get": {
                "tags": [
                    "Permission"
                ],
                "summary": "Get detail permission",
                "description": "Get detail permission",
                "operationId": "getPermissionDetail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/permission/detail/{id}/access": {
            "get": {
                "tags": [
                    "Permission"
                ],
                "summary": "Get access role",
                "description": "Get access role",
                "operationId": "getPermissionAccess",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/permission/create": {
            "post": {
                "tags": [
                    "Permission"
                ],
                "summary": "Create permission",
                "description": "Create permission",
                "operationId": "postPermissionCreate",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/CreatePermissionEloquent"
                                    },
                                    {
                                        "properties": {
                                            "access_ids": {
                                                "description": "Access ids property",
                                                "example": [
                                                    [
                                                        1,
                                                        "READ",
                                                        "ALLOW"
                                                    ],
                                                    [
                                                        2,
                                                        "WRITE",
                                                        "DENY"
                                                    ]
                                                ]
                                            }
                                        },
                                        "type": "object"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/permission/update": {
            "put": {
                "tags": [
                    "Permission"
                ],
                "summary": "Update permission",
                "description": "Return object of permission updated",
                "operationId": "putPermissionUpdate",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/UpdatePermissionEloquent"
                                    },
                                    {
                                        "properties": {
                                            "access_ids": {
                                                "description": "Access ids property",
                                                "example": [
                                                    [
                                                        1,
                                                        "READ",
                                                        "ALLOW"
                                                    ],
                                                    [
                                                        2,
                                                        "WRITE",
                                                        "DENY"
                                                    ]
                                                ]
                                            }
                                        },
                                        "type": "object"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/permission/update/access": {
            "put": {
                "tags": [
                    "Permission"
                ],
                "summary": "Update permission access",
                "description": "Update permission access",
                "operationId": "putPermissionAccessUpdate",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdatePermissionAccessEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/permission/delete/{id}": {
            "delete": {
                "tags": [
                    "Permission"
                ],
                "summary": "Delete permission",
                "description": "Delete permission",
                "operationId": "deletePermission",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/permission/deletes": {
            "delete": {
                "tags": [
                    "Permission"
                ],
                "summary": "Delete bulk permission",
                "description": "Delete bulk permission",
                "operationId": "deleteBulkPermission",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ids": {
                                        "description": "Ids property",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "format": "int64",
                                            "example": 1
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/permission/active": {
            "put": {
                "tags": [
                    "Permission"
                ],
                "summary": "Set active permission",
                "description": "Set active permission",
                "operationId": "putPermissionActive",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "is_active"
                                ],
                                "properties": {
                                    "id": {
                                        "description": "Id property",
                                        "type": "integer",
                                        "format": "int64",
                                        "example": 1
                                    },
                                    "is_active": {
                                        "$ref": "#/components/schemas/PermissionEloquent/properties/is_active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/permission/slug/{name}": {
            "get": {
                "tags": [
                    "Permission"
                ],
                "summary": "Get slug of permission",
                "description": "Get slug of permission",
                "operationId": "getPermissionSlug",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name parameter",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/religion/list": {
            "get": {
                "tags": [
                    "Religion"
                ],
                "summary": "Get list of religion",
                "description": "Get list of religion",
                "operationId": "getReligionList",
                "parameters": [
                    {
                        "name": "is_active",
                        "in": "query",
                        "description": "Is active parameter (active = 1; not active = 0)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/religion/list-search": {
            "post": {
                "tags": [
                    "Religion"
                ],
                "summary": "Get list of religion with query search",
                "description": "Get list of religion with query search",
                "operationId": "postReligionListSearch",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "query": {
                                        "description": "Query property (Keyword would be filter name, slug and description)",
                                        "type": "string",
                                        "example": "keyword"
                                    },
                                    "is_active": {
                                        "$ref": "#/components/schemas/ReligionEloquent/properties/is_active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/religion/page-search": {
            "post": {
                "tags": [
                    "Religion"
                ],
                "summary": "Get list of religion with query and page parameter search",
                "description": "Get list of religion with query and page parameter search",
                "operationId": "postReligionPageSearch",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "query": {
                                                "description": "Query property (Keyword would be filter name, slug and description)",
                                                "properties": {
                                                    "value": {
                                                        "type": "string",
                                                        "example": "keyword"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "is_active": {
                                                "$ref": "#/components/schemas/ReligionEloquent/properties/is_active"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/PagedSearchParameter"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/religion/detail/{id}": {
            "get": {
                "tags": [
                    "Religion"
                ],
                "summary": "Get detail religion",
                "description": "Get detail religion",
                "operationId": "getReligionDetail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/religion/create": {
            "post": {
                "tags": [
                    "Religion"
                ],
                "summary": "Create religion",
                "description": "Create religion",
                "operationId": "postReligionCreate",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateReligionEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/religion/update": {
            "put": {
                "tags": [
                    "Religion"
                ],
                "summary": "Update religion",
                "description": "Update religion",
                "operationId": "putReligionUpdate",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateReligionEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/religion/delete/{id}": {
            "delete": {
                "tags": [
                    "Religion"
                ],
                "summary": "Delete religion",
                "description": "Delete religion",
                "operationId": "deleteReligion",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/religion/deletes": {
            "delete": {
                "tags": [
                    "Religion"
                ],
                "summary": "Delete bulk religion",
                "description": "Delete bulk religion",
                "operationId": "deleteBulkReligion",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ids": {
                                        "description": "Ids property",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "format": "int64",
                                            "example": 1
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/religion/active": {
            "put": {
                "tags": [
                    "Religion"
                ],
                "summary": "Set active religion",
                "description": "Set active religion",
                "operationId": "putReligionActive",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "is_active"
                                ],
                                "properties": {
                                    "id": {
                                        "description": "Id property",
                                        "type": "integer",
                                        "format": "int64",
                                        "example": 1
                                    },
                                    "is_active": {
                                        "$ref": "#/components/schemas/ReligionEloquent/properties/is_active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/religion/slug/{name}": {
            "get": {
                "tags": [
                    "Religion"
                ],
                "summary": "Get slug of religion",
                "description": "Return slug of religion",
                "operationId": "getReligionSlug",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name of religion",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/religion/list-search/export": {
            "post": {
                "tags": [
                    "Religion"
                ],
                "summary": "Get list export of bank",
                "description": "Return bank exported",
                "operationId": "postReligionListSearchExport",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "export": {
                                        "description": "Export property",
                                        "type": "string",
                                        "default": "",
                                        "enum": [
                                            "excel",
                                            "pdf"
                                        ],
                                        "example": "excel"
                                    },
                                    "is_active": {
                                        "description": "Filter is_active of bank by is_active parameter. 1 for active and 0 for not active",
                                        "type": "integer",
                                        "format": "int32"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/role/list": {
            "get": {
                "tags": [
                    "Role"
                ],
                "summary": "Get list of role",
                "description": "Get list of role",
                "operationId": "getRoleList",
                "parameters": [
                    {
                        "name": "is_active",
                        "in": "query",
                        "description": "Is active parameter (active = 1; not active = 0)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/role/list-search": {
            "post": {
                "tags": [
                    "Role"
                ],
                "summary": "Get list of role with query search",
                "description": "Get list of role with query search",
                "operationId": "postRoleListSearch",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "query": {
                                        "description": "Query property (Keyword would be filter name, slug and description)",
                                        "type": "string",
                                        "example": "keyword"
                                    },
                                    "is_active": {
                                        "$ref": "#/components/schemas/RoleEloquent/properties/is_active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/role/page-search": {
            "post": {
                "tags": [
                    "Role"
                ],
                "summary": "Get list of role with query and page parameter search",
                "description": "Get list of role with query and page parameter search",
                "operationId": "postRolePageSearch",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "query": {
                                                "description": "Query property (Keyword would be filter name, slug and description)",
                                                "properties": {
                                                    "value": {
                                                        "type": "string",
                                                        "example": "keyword"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "is_active": {
                                                "$ref": "#/components/schemas/RoleEloquent/properties/is_active"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/PagedSearchParameter"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/role/detail/{id}": {
            "get": {
                "tags": [
                    "Role"
                ],
                "summary": "Get detail role",
                "description": "Get detail role",
                "operationId": "getRoleDetail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/role/detail/{id}/permission": {
            "get": {
                "tags": [
                    "Role"
                ],
                "summary": "Get permission role",
                "description": "Get permission role",
                "operationId": "getRolePermission",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/role/create": {
            "post": {
                "tags": [
                    "Role"
                ],
                "summary": "Create role",
                "description": "Create role",
                "operationId": "postRoleCreate",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/CreateRoleEloquent"
                                    },
                                    {
                                        "properties": {
                                            "permission_ids": {
                                                "description": "Permission ids property",
                                                "example": [
                                                    [
                                                        1,
                                                        "READ",
                                                        "ALLOW"
                                                    ],
                                                    [
                                                        2,
                                                        "WRITE",
                                                        "DENY"
                                                    ]
                                                ]
                                            }
                                        },
                                        "type": "object"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/role/update": {
            "put": {
                "tags": [
                    "Role"
                ],
                "summary": "Update role",
                "description": "Return object of role updated",
                "operationId": "putRoleUpdate",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/UpdateRoleEloquent"
                                    },
                                    {
                                        "properties": {
                                            "permission_ids": {
                                                "description": "Permission ids property",
                                                "example": [
                                                    [
                                                        1,
                                                        "READ",
                                                        "ALLOW"
                                                    ],
                                                    [
                                                        2,
                                                        "WRITE",
                                                        "DENY"
                                                    ]
                                                ]
                                            }
                                        },
                                        "type": "object"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/role/update/permission": {
            "put": {
                "tags": [
                    "Role"
                ],
                "summary": "Update role permission",
                "description": "Update role permission",
                "operationId": "putRolePermissionUpdate",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateRolePermissionEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/role/delete/{id}": {
            "delete": {
                "tags": [
                    "Role"
                ],
                "summary": "Delete role",
                "description": "Delete role",
                "operationId": "deleteRole",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/role/deletes": {
            "delete": {
                "tags": [
                    "Role"
                ],
                "summary": "Delete bulk role",
                "description": "Delete bulk role",
                "operationId": "deleteBulkRole",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ids": {
                                        "description": "Ids property",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "format": "int64",
                                            "example": 1
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/role/active": {
            "put": {
                "tags": [
                    "Role"
                ],
                "summary": "Set active role",
                "description": "Set active role",
                "operationId": "putRoleActive",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "is_active"
                                ],
                                "properties": {
                                    "id": {
                                        "description": "Id property",
                                        "type": "integer",
                                        "format": "int64",
                                        "example": 1
                                    },
                                    "is_active": {
                                        "$ref": "#/components/schemas/RoleEloquent/properties/is_active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/role/slug/{name}": {
            "get": {
                "tags": [
                    "Role"
                ],
                "summary": "Get slug of role",
                "description": "Get slug of role",
                "operationId": "getRoleSlug",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name parameter",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/role/list-search/export": {
            "post": {
                "tags": [
                    "Role"
                ],
                "summary": "Export list of role",
                "description": "Export list of role",
                "operationId": "postRoleSearchExport",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "export": {
                                        "description": "Export property",
                                        "type": "string",
                                        "default": "",
                                        "enum": [
                                            "excel",
                                            "pdf"
                                        ],
                                        "example": "excel"
                                    },
                                    "is_active": {
                                        "$ref": "#/components/schemas/RoleEloquent/properties/is_active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/skills": {
            "get": {
                "tags": [
                    "Skill"
                ],
                "summary": "Get list of skill",
                "description": "Get list of skill",
                "operationId": "getSkillList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Skill"
                ],
                "summary": "Delete bulk skill",
                "description": "Delete bulk skill",
                "operationId": "deleteBulkSkill",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ids": {
                                        "description": "Ids property",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "format": "int64",
                                            "example": 1
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/skills/list-search": {
            "post": {
                "tags": [
                    "Skill"
                ],
                "summary": "Get list of skill with query search",
                "description": "Get list of skill with query search",
                "operationId": "postSkillListSearch",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "query": {
                                        "description": "Query property (Keyword would be filter name, slug and description)",
                                        "type": "string",
                                        "example": "keyword"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/skills/page-search": {
            "post": {
                "tags": [
                    "Skill"
                ],
                "summary": "Get list of skill with query and page parameter search",
                "description": "Get list of skill with query and page parameter search",
                "operationId": "postSkillPageSearch",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "query": {
                                                "description": "Query property (Keyword would be filter name, slug and description)",
                                                "properties": {
                                                    "value": {
                                                        "type": "string",
                                                        "example": "keyword"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/PagedSearchParameter"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/skill": {
            "put": {
                "tags": [
                    "Skill"
                ],
                "summary": "Update skill",
                "description": "Update skill",
                "operationId": "putSkillUpdate",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateSkillEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "Skill"
                ],
                "summary": "Create skill",
                "description": "Create skill",
                "operationId": "postSkillCreate",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateSkillEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/skill/{id}": {
            "delete": {
                "tags": [
                    "Skill"
                ],
                "summary": "Delete skill",
                "description": "Delete skill",
                "operationId": "deleteSkill",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of skill",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/skill/slug/{name}": {
            "get": {
                "tags": [
                    "Skill"
                ],
                "summary": "Get slug of skill",
                "description": "Get slug of skill",
                "operationId": "getSkillSlug",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name parameter",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/vacancy-categories": {
            "get": {
                "tags": [
                    "VacancyCategory"
                ],
                "summary": "Get list of vacancyCategory",
                "description": "Get list of vacancyCategory",
                "operationId": "getVacancyCategoryList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "VacancyCategory"
                ],
                "summary": "Delete bulk vacancyCategory",
                "description": "Delete bulk vacancyCategory",
                "operationId": "deleteBulkVacancyCategory",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ids": {
                                        "description": "Ids property",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "format": "int64",
                                            "example": 1
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/vacancy-categories/list-search": {
            "post": {
                "tags": [
                    "VacancyCategory"
                ],
                "summary": "Get list of vacancyCategory with query search",
                "description": "Get list of vacancyCategory with query search",
                "operationId": "postVacancyCategoryListSearch",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "query": {
                                        "description": "Query property (Keyword would be filter name, slug and description)",
                                        "type": "string",
                                        "example": "keyword"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/vacancy-categories/page-search": {
            "post": {
                "tags": [
                    "VacancyCategory"
                ],
                "summary": "Get list of vacancyCategory with query and page parameter search",
                "description": "Get list of vacancyCategory with query and page parameter search",
                "operationId": "postVacancyCategoryPageSearch",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "query": {
                                                "description": "Query property (Keyword would be filter name, slug and description)",
                                                "properties": {
                                                    "value": {
                                                        "type": "string",
                                                        "example": "keyword"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/PagedSearchParameter"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/vacancy-category": {
            "put": {
                "tags": [
                    "VacancyCategory"
                ],
                "summary": "Update vacancyCategory",
                "description": "Update vacancyCategory",
                "operationId": "putVacancyCategoryUpdate",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateVacancyCategoryEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "VacancyCategory"
                ],
                "summary": "Create vacancyCategory",
                "description": "Create vacancyCategory",
                "operationId": "postVacancyCategoryCreate",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateVacancyCategoryEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/vacancy-category/{id}": {
            "delete": {
                "tags": [
                    "VacancyCategory"
                ],
                "summary": "Delete vacancyCategory",
                "description": "Delete vacancyCategory",
                "operationId": "deleteVacancyCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of vacancyCategory",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/vacancy-category/slug/{name}": {
            "get": {
                "tags": [
                    "VacancyCategory"
                ],
                "summary": "Get slug of vacancyCategory",
                "description": "Get slug of vacancyCategory",
                "operationId": "getVacancyCategorySlug",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name parameter",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/vacancy-locations": {
            "get": {
                "tags": [
                    "VacancyLocation"
                ],
                "summary": "Get list of vacancyLocation",
                "description": "Get list of vacancyLocation",
                "operationId": "getVacancyLocationList",
                "parameters": [
                    {
                        "name": "parent_id",
                        "in": "query",
                        "description": "Parent id parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "VacancyLocation"
                ],
                "summary": "Delete bulk vacancyLocation",
                "description": "Delete bulk vacancyLocation",
                "operationId": "deleteBulkVacancyLocation",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ids": {
                                        "description": "Ids property",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "format": "int64",
                                            "example": 1
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/vacancy-locations/list-search": {
            "post": {
                "tags": [
                    "VacancyLocation"
                ],
                "summary": "Get list of vacancyLocation with query search",
                "description": "Get list of vacancyLocation with query search",
                "operationId": "postVacancyLocationListSearch",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "query": {
                                        "description": "Query property (Keyword would be filter name, slug and description)",
                                        "type": "string",
                                        "example": "keyword"
                                    },
                                    "parent_id": {
                                        "$ref": "#/components/schemas/VacancyLocationEloquent/properties/parent_id"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/vacancy-locations/page-search": {
            "post": {
                "tags": [
                    "VacancyLocation"
                ],
                "summary": "Get list of vacancyLocation with query and page parameter search",
                "description": "Get list of vacancyLocation with query and page parameter search",
                "operationId": "postVacancyLocationPageSearch",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "query": {
                                                "description": "Query property (Keyword would be filter name, slug and description)",
                                                "properties": {
                                                    "value": {
                                                        "type": "string",
                                                        "example": "keyword"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/PagedSearchParameter"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/vacancy-location": {
            "put": {
                "tags": [
                    "VacancyLocation"
                ],
                "summary": "Update vacancyLocation",
                "description": "Update vacancyLocation",
                "operationId": "putVacancyLocationUpdate",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateVacancyLocationEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "VacancyLocation"
                ],
                "summary": "Create vacancyLocation",
                "description": "Create vacancyLocation",
                "operationId": "postVacancyLocationCreate",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateVacancyLocationEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/vacancy-Location/{id}": {
            "delete": {
                "tags": [
                    "VacancyLocation"
                ],
                "summary": "Delete vacancyLocation",
                "description": "Delete vacancyLocation",
                "operationId": "deleteVacancyLocation",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of vacancyLocation",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/vacancy-Location/slug/{name}": {
            "get": {
                "tags": [
                    "VacancyLocation"
                ],
                "summary": "Get slug of vacancyLocation",
                "description": "Get slug of vacancyLocation",
                "operationId": "getVacancyLocationSlug",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name parameter",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element/list": {
            "get": {
                "tags": [
                    "Element"
                ],
                "summary": "Get list of element",
                "description": "Get list of element",
                "operationId": "getElementList",
                "parameters": [
                    {
                        "name": "formula_id",
                        "in": "query",
                        "description": "Formula id parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element/list-search": {
            "post": {
                "tags": [
                    "Element"
                ],
                "summary": "Get list of element with query search",
                "description": "Get list of element with query search",
                "operationId": "postElementListSearch",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "query": {
                                        "description": "Query property (Keyword would be filter name, slug and description)",
                                        "type": "string",
                                        "example": "keyword"
                                    },
                                    "formula_id": {
                                        "$ref": "#/components/schemas/ElementEloquent/properties/formula_id"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element/page-search": {
            "post": {
                "tags": [
                    "Element"
                ],
                "summary": "Get list of element with query and page parameter search",
                "description": "Get list of element with query and page parameter search",
                "operationId": "postElementPageSearch",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "query": {
                                                "description": "Query property (Keyword would be filter code, name, slug and seq number)",
                                                "properties": {
                                                    "value": {
                                                        "type": "string",
                                                        "example": "keyword"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "formula_id": {
                                                "$ref": "#/components/schemas/ElementEloquent/properties/formula_id"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/PagedSearchParameter"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element/detail/{id}": {
            "get": {
                "tags": [
                    "Element"
                ],
                "summary": "Get detail element",
                "description": "Get detail element",
                "operationId": "getElementDetail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element/create": {
            "post": {
                "tags": [
                    "Element"
                ],
                "summary": "Create element",
                "description": "Return id of element created",
                "operationId": "postElementCreate",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateElementEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element/update": {
            "put": {
                "tags": [
                    "Element"
                ],
                "summary": "Update element",
                "description": "Update element",
                "operationId": "putElementUpdate",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateElementEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element/delete/{id}": {
            "delete": {
                "tags": [
                    "Element"
                ],
                "summary": "Delete element",
                "description": "Delete element",
                "operationId": "deleteElement",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element/deletes": {
            "delete": {
                "tags": [
                    "Element"
                ],
                "summary": "Delete bulk element",
                "description": "Delete bulk element",
                "operationId": "deleteBulkElement",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ids": {
                                        "description": "Ids property",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "format": "int64",
                                            "example": 1
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element/slug/{name}": {
            "get": {
                "tags": [
                    "Element"
                ],
                "summary": "Get slug of element",
                "description": "Get slug of element",
                "operationId": "getElementSlug",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name parameter",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element/list-search/export": {
            "post": {
                "tags": [
                    "Element"
                ],
                "summary": "Export list of element",
                "description": "Export list of element",
                "operationId": "postAElementListSearchExport",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "export": {
                                        "description": "Export property",
                                        "type": "string",
                                        "default": "",
                                        "enum": [
                                            "excel",
                                            "pdf"
                                        ],
                                        "example": "excel"
                                    },
                                    "formula_id": {
                                        "$ref": "#/components/schemas/ElementEloquent/properties/formula_id"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element-entry/list": {
            "get": {
                "tags": [
                    "Element Entry"
                ],
                "summary": "Get list of element entry",
                "description": "Get list of element entry",
                "operationId": "getElementEntryList",
                "parameters": [
                    {
                        "name": "element_id",
                        "in": "query",
                        "description": "Element id parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "employee_id",
                        "in": "query",
                        "description": "Employee id parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "description": "Date parameter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2020-01-01 00:00:00"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element-entry/list-search": {
            "post": {
                "tags": [
                    "Element Entry"
                ],
                "summary": "Get list of element entry with query search",
                "description": "Get list of element entry with query search",
                "operationId": "postElementEntryListSearch",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "element_id": {
                                        "$ref": "#/components/schemas/ElementEntryEloquent/properties/element_id"
                                    },
                                    "employee_id": {
                                        "$ref": "#/components/schemas/ElementEntryEloquent/properties/employee_id"
                                    },
                                    "date": {
                                        "description": "Date property",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element-entry/page-search": {
            "post": {
                "tags": [
                    "Element Entry"
                ],
                "summary": "Get list of element entry with query and page parameter search",
                "description": "Get list of element entry with query and page parameter search",
                "operationId": "postElementEntryPageSearch",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "element_id": {
                                                "$ref": "#/components/schemas/ElementEntryEloquent/properties/element_id"
                                            },
                                            "employee_id": {
                                                "$ref": "#/components/schemas/ElementEntryEloquent/properties/employee_id"
                                            },
                                            "date": {
                                                "description": "Date property",
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2020-01-01 00:00:00"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/PagedSearchParameter"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element-entry/detail/{id}": {
            "get": {
                "tags": [
                    "Element Entry"
                ],
                "summary": "Get detail element entry",
                "description": "Get detail element entry",
                "operationId": "getElementEntryDetail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element-entry/create": {
            "post": {
                "tags": [
                    "Element Entry"
                ],
                "summary": "Create element entry",
                "description": "Create element entry",
                "operationId": "postElementEntryCreate",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateElementEntryEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element-entry/update": {
            "put": {
                "tags": [
                    "Element Entry"
                ],
                "summary": "Update element entry",
                "description": "Update element entry",
                "operationId": "putElementEntryUpdate",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateElementEntryEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element-entry/delete/{id}": {
            "delete": {
                "tags": [
                    "Element Entry"
                ],
                "summary": "Delete element",
                "description": "Delete element",
                "operationId": "deleteElementEntry",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element-entry/deletes": {
            "delete": {
                "tags": [
                    "Element Entry"
                ],
                "summary": "Delete bulk element entry",
                "description": "Delete bulk element entry",
                "operationId": "deleteBulkElementEntry",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ids": {
                                        "description": "Ids property",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "format": "int64",
                                            "example": 1
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element-entry/list-search/export": {
            "post": {
                "tags": [
                    "Element Entry"
                ],
                "summary": "Export list of element entry",
                "description": "Export list of element entry",
                "operationId": "postElementEntryListSearchExport",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "export": {
                                        "description": "Export property",
                                        "type": "string",
                                        "default": "",
                                        "enum": [
                                            "excel",
                                            "pdf"
                                        ],
                                        "example": "excel"
                                    },
                                    "element_id": {
                                        "$ref": "#/components/schemas/ElementEntryEloquent/properties/element_id"
                                    },
                                    "employee_id": {
                                        "$ref": "#/components/schemas/ElementEntryEloquent/properties/employee_id"
                                    },
                                    "date": {
                                        "description": "Date property",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element-entry-value/list": {
            "get": {
                "tags": [
                    "Element Entry Value"
                ],
                "summary": "Get list of element entry value",
                "description": "Get list of element entry value",
                "operationId": "getElementEntryValueList",
                "parameters": [
                    {
                        "name": "element_entry_id",
                        "in": "query",
                        "description": "Element entry id parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "element_value_id",
                        "in": "query",
                        "description": "Element value id parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "description": "Date parameter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2020-01-01 00:00:00"
                        }
                    },
                    {
                        "name": "start_value",
                        "in": "query",
                        "description": "Start value parameter",
                        "required": false,
                        "schema": {
                            "type": "float",
                            "example": "0"
                        }
                    },
                    {
                        "name": "end_value",
                        "in": "query",
                        "description": "End value parameter",
                        "required": false,
                        "schema": {
                            "type": "float",
                            "example": "100"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element-entry-value/list-search": {
            "post": {
                "tags": [
                    "Element Entry Value"
                ],
                "summary": "Get list of element entry value with query search",
                "description": "Get list of element entry value with query search",
                "operationId": "postElementEntryValueListSearch",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "element_entry_id": {
                                        "$ref": "#/components/schemas/ElementEntryValueEloquent/properties/element_entry_id"
                                    },
                                    "element_value_id": {
                                        "$ref": "#/components/schemas/ElementEntryValueEloquent/properties/element_value_id"
                                    },
                                    "date": {
                                        "description": "Date property",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    },
                                    "start_value": {
                                        "description": "Start value property",
                                        "type": "float",
                                        "example": "0"
                                    },
                                    "end_value": {
                                        "description": "End value property",
                                        "type": "float",
                                        "example": "100"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element-entry-value/page-search": {
            "post": {
                "tags": [
                    "Element Entry Value"
                ],
                "summary": "Get list of element entry value with query and page parameter search",
                "description": "Get list of element entry value with query and page parameter search",
                "operationId": "postElementEntryValuePageSearch",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "element_entry_id": {
                                                "$ref": "#/components/schemas/ElementEntryValueEloquent/properties/element_entry_id"
                                            },
                                            "element_value_id": {
                                                "$ref": "#/components/schemas/ElementEntryValueEloquent/properties/element_value_id"
                                            },
                                            "date": {
                                                "description": "Date property",
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2020-01-01 00:00:00"
                                            },
                                            "start_value": {
                                                "description": "Start value property",
                                                "type": "float",
                                                "example": "0"
                                            },
                                            "end_value": {
                                                "description": "End value property",
                                                "type": "float",
                                                "example": "100"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/PagedSearchParameter"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element-entry-value/detail/{id}": {
            "get": {
                "tags": [
                    "Element Entry Value"
                ],
                "summary": "Get detail element by id",
                "description": "Return element",
                "operationId": "getElementEntryValueDetail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element-entry-value/create": {
            "post": {
                "tags": [
                    "Element Entry Value"
                ],
                "summary": "Create element",
                "description": "Return id of element entry value created",
                "operationId": "postElementEntryValueCreate",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateElementEntryValueEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element-entry-value/update": {
            "put": {
                "tags": [
                    "Element Entry Value"
                ],
                "summary": "Update element",
                "description": "Return object of element entry value updated",
                "operationId": "putElementEntryValueUpdate",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateElementEntryEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element-entry-value/delete/{id}": {
            "delete": {
                "tags": [
                    "Element Entry Value"
                ],
                "summary": "Delete element",
                "description": "Delete element",
                "operationId": "deleteElementEntryValue",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element-entry-value/deletes": {
            "delete": {
                "tags": [
                    "Element Entry Value"
                ],
                "summary": "Delete bulk element entry value",
                "description": "Delete bulk element entry value",
                "operationId": "deleteBulkElementEntryValue",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ids": {
                                        "description": "Ids property",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "format": "int64",
                                            "example": 1
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element-entry-value/list-search/export": {
            "post": {
                "tags": [
                    "Element Entry Value"
                ],
                "summary": "Export list of element entry value",
                "description": "Export list of element entry value",
                "operationId": "postElementEntryValueListSearchExport",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "export": {
                                        "description": "Export property",
                                        "type": "string",
                                        "default": "",
                                        "enum": [
                                            "excel",
                                            "pdf"
                                        ],
                                        "example": "excel"
                                    },
                                    "element_entry_id": {
                                        "$ref": "#/components/schemas/ElementEntryValueEloquent/properties/element_entry_id"
                                    },
                                    "element_value_id": {
                                        "$ref": "#/components/schemas/ElementEntryValueEloquent/properties/element_value_id"
                                    },
                                    "date": {
                                        "description": "Date property",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    },
                                    "start_value": {
                                        "description": "Start value property",
                                        "type": "float",
                                        "example": "0"
                                    },
                                    "end_value": {
                                        "description": "End value property",
                                        "type": "float",
                                        "example": "100"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element-value/list": {
            "get": {
                "tags": [
                    "Element Value"
                ],
                "summary": "Get list of element value",
                "description": "Get list of element value",
                "operationId": "getElementValueList",
                "parameters": [
                    {
                        "name": "element_id",
                        "in": "query",
                        "description": "Filter element_id of element value by element_id parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "start_value",
                        "in": "query",
                        "description": "Start value parameter",
                        "required": false,
                        "schema": {
                            "type": "float",
                            "example": "0"
                        }
                    },
                    {
                        "name": "end_value",
                        "in": "query",
                        "description": "End value parameter",
                        "required": false,
                        "schema": {
                            "type": "float",
                            "example": "100"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element-value/list-search": {
            "post": {
                "tags": [
                    "Element Value"
                ],
                "summary": "Get list of element value with query search",
                "description": "Get list of element value with query search",
                "operationId": "postElementValueListSearch",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "query": {
                                        "description": "Query property (Keyword would be filter code, name, slug and seq_no)",
                                        "type": "string",
                                        "example": "keyword"
                                    },
                                    "element_id": {
                                        "$ref": "#/components/schemas/ElementValueEloquent/properties/element_id"
                                    },
                                    "start_value": {
                                        "description": "Start value property",
                                        "type": "float",
                                        "example": "0"
                                    },
                                    "end_value": {
                                        "description": "End value property",
                                        "type": "float",
                                        "example": "100"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element-value/page-search": {
            "post": {
                "tags": [
                    "Element Value"
                ],
                "summary": "Get list of element value with query and page parameter search",
                "description": "Get list of element value with query and page parameter search",
                "operationId": "postElementValuePageSearch",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "query": {
                                                "description": "Query property (Keyword would be filter code, name, slug and seq_no)",
                                                "properties": {
                                                    "value": {
                                                        "type": "string",
                                                        "example": "keyword"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "element_id": {
                                                "$ref": "#/components/schemas/ElementValueEloquent/properties/element_id"
                                            },
                                            "start_value": {
                                                "description": "Start value property",
                                                "type": "float",
                                                "example": "0"
                                            },
                                            "end_value": {
                                                "description": "End value property",
                                                "type": "float",
                                                "example": "100"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/PagedSearchParameter"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element-value/detail/{id}": {
            "get": {
                "tags": [
                    "Element Value"
                ],
                "summary": "Get detail element value",
                "description": "Get detail element value",
                "operationId": "getElementValueDetail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element-value/create": {
            "post": {
                "tags": [
                    "Element Value"
                ],
                "summary": "Create element value",
                "description": "Create element value",
                "operationId": "postElementValueCreate",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateElementValueEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element-value/update": {
            "put": {
                "tags": [
                    "Element Value"
                ],
                "summary": "Update element value",
                "description": "Update element value",
                "operationId": "putElementValueUpdate",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateElementValueEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element-value/delete/{id}": {
            "delete": {
                "tags": [
                    "Element Value"
                ],
                "summary": "Delete element value",
                "description": "Delete element value",
                "operationId": "deleteElementValue",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element-value/deletes": {
            "delete": {
                "tags": [
                    "Element Value"
                ],
                "summary": "Delete bulk element value",
                "description": "Delete bulk element value",
                "operationId": "deleteBulkElementValue",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ids": {
                                        "description": "Ids property",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "format": "int64",
                                            "example": 1
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element-value/slug/{name}": {
            "get": {
                "tags": [
                    "Element Value"
                ],
                "summary": "Get slug of element value",
                "description": "Get slug of element value",
                "operationId": "getElementValueSlug",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name parameter",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/element-value/list-search/export": {
            "post": {
                "tags": [
                    "Element Value"
                ],
                "summary": "Export list of element value",
                "description": "Export list of element value",
                "operationId": "postElementValueListSearchExport",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "export": {
                                        "description": "Export property",
                                        "type": "string",
                                        "default": "",
                                        "enum": [
                                            "excel",
                                            "pdf"
                                        ],
                                        "example": "excel"
                                    },
                                    "element_id": {
                                        "$ref": "#/components/schemas/ElementValueEloquent/properties/element_id"
                                    },
                                    "start_value": {
                                        "description": "Start value property",
                                        "type": "float",
                                        "example": "0"
                                    },
                                    "end_value": {
                                        "description": "End value property",
                                        "type": "float",
                                        "example": "100"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/formula-category/list": {
            "get": {
                "tags": [
                    "Formula Category"
                ],
                "summary": "Get list of formula category",
                "description": "Get list of formula category",
                "operationId": "getFormulaCategoryList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/formula-category/list-search": {
            "post": {
                "tags": [
                    "Formula Category"
                ],
                "summary": "Get list of formula category with query search",
                "description": "Get list of formula category with query search",
                "operationId": "postFormulaCategoryListSearch",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "query": {
                                        "description": "Query property (Keyword would be filter name, slug and description)",
                                        "type": "string",
                                        "example": "keyword"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/formula-category/page-search": {
            "post": {
                "tags": [
                    "Formula Category"
                ],
                "summary": "Get list of formula category with query and page parameter search",
                "description": "Get list of formula category with query and page parameter search",
                "operationId": "postFormulaCategoryPageSearch",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "query": {
                                                "description": "Query property (Keyword would be filter name, slug and description)",
                                                "properties": {
                                                    "value": {
                                                        "type": "string",
                                                        "example": "keyword"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/PagedSearchParameter"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/formula-category/detail/{id}": {
            "get": {
                "tags": [
                    "Formula Category"
                ],
                "summary": "Get detail formula category",
                "description": "Get detail formula category",
                "operationId": "getFormulaCategoryDetail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/formula-category/create": {
            "post": {
                "tags": [
                    "Formula Category"
                ],
                "summary": "Create formula category",
                "description": "Create formula category",
                "operationId": "postFormulaCategoryCreate",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateFormulaCategoryEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/formula-category/update": {
            "put": {
                "tags": [
                    "Formula Category"
                ],
                "summary": "Update formula category",
                "description": "Update formula category",
                "operationId": "putFormulaCategoryUpdate",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateFormulaCategoryEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/formula-category/delete/{id}": {
            "delete": {
                "tags": [
                    "Formula Category"
                ],
                "summary": "Delete formula category",
                "description": "Delete formula category",
                "operationId": "deleteFormulaCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/formula-category/deletes": {
            "delete": {
                "tags": [
                    "Formula Category"
                ],
                "summary": "Delete bulk formula category",
                "description": "Delete bulk formula category",
                "operationId": "deleteBulkFormulaCategory",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ids": {
                                        "description": "Ids property",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "format": "int64",
                                            "example": 1
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/formula-category/slug/{name}": {
            "get": {
                "tags": [
                    "Formula Category"
                ],
                "summary": "Get slug of formula category",
                "description": "Get slug of formula category",
                "operationId": "getFormulaCategorySlug",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name of formula category",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/formula-category/list-search/export": {
            "post": {
                "tags": [
                    "Formula Category"
                ],
                "summary": "Export list of formula category",
                "description": "Export list of formula category",
                "operationId": "postFormulaCategoryListSearchExport",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "export": {
                                        "description": "Export property",
                                        "type": "string",
                                        "default": "",
                                        "enum": [
                                            "excel",
                                            "pdf"
                                        ],
                                        "example": "excel"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/formula/list": {
            "get": {
                "tags": [
                    "Formula"
                ],
                "summary": "Get list of formula",
                "description": "Get list of formula",
                "operationId": "getFormulaList",
                "parameters": [
                    {
                        "name": "formula_category_id",
                        "in": "query",
                        "description": "Formula category id parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/formula/list-search": {
            "post": {
                "tags": [
                    "Formula"
                ],
                "summary": "Get list of formula with query search",
                "description": "Get list of formula with query search",
                "operationId": "postFormulaListSearch",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "query": {
                                        "description": "Query property (Keyword would be filter name, slug and description)",
                                        "type": "string",
                                        "example": "keyword"
                                    },
                                    "formula_category_id": {
                                        "$ref": "#/components/schemas/FormulaEloquent/properties/formula_category_id"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/formula/page-search": {
            "post": {
                "tags": [
                    "Formula"
                ],
                "summary": "Get list of formula with query and page parameter search",
                "description": "Get list of formula with query and page parameter search",
                "operationId": "postFormulaPageSearch",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "query": {
                                                "description": "Query property (Keyword would be filter name, slug and description)",
                                                "properties": {
                                                    "value": {
                                                        "type": "string",
                                                        "example": "keyword"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "formula_category_id": {
                                                "$ref": "#/components/schemas/FormulaEloquent/properties/formula_category_id"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/PagedSearchParameter"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/formula/detail/{id}": {
            "get": {
                "tags": [
                    "Formula"
                ],
                "summary": "Get detail formula",
                "description": "Get detail formula",
                "operationId": "getFormulaDetail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/formula/create": {
            "post": {
                "tags": [
                    "Formula"
                ],
                "summary": "Create formula",
                "description": "Create formula",
                "operationId": "postFormulaCreate",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateFormulaEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/formula/update": {
            "put": {
                "tags": [
                    "Formula"
                ],
                "summary": "Update formula",
                "description": "Update formula",
                "operationId": "putFormulaUpdate",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateFormulaEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/formula/delete/{id}": {
            "delete": {
                "tags": [
                    "Formula"
                ],
                "summary": "Delete formula",
                "description": "Delete formula",
                "operationId": "deleteFormula",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/formula/deletes": {
            "delete": {
                "tags": [
                    "Formula"
                ],
                "summary": "Delete bulk formula",
                "description": "Delete bulk formula",
                "operationId": "deleteBulkFormula",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ids": {
                                        "description": "Ids property",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "format": "int64",
                                            "example": 1
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/formula/slug/{name}": {
            "get": {
                "tags": [
                    "Formula"
                ],
                "summary": "Get slug of formula",
                "description": "Get slug of formula",
                "operationId": "getFormulaSlug",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name of formula",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/formula/list-search/export": {
            "post": {
                "tags": [
                    "Formula"
                ],
                "summary": "Export list of formula",
                "description": "Export list of formula",
                "operationId": "postFormulaListSearchExport",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "export": {
                                        "description": "Export property",
                                        "type": "string",
                                        "default": "",
                                        "enum": [
                                            "excel",
                                            "pdf"
                                        ],
                                        "example": "excel"
                                    },
                                    "formula_category_id": {
                                        "$ref": "#/components/schemas/FormulaEloquent/properties/formula_category_id"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/additional-questions": {
            "get": {
                "tags": [
                    "Additional Question"
                ],
                "summary": "Get list of additional question",
                "description": "Get list of additional question",
                "operationId": "getAdditionalQuestionList",
                "parameters": [
                    {
                        "name": "company_id",
                        "in": "query",
                        "description": "Company id parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "is_required",
                        "in": "query",
                        "description": "Is required parameter (required = 1; not required = 0)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "example": 1
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Status parameter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "",
                            "enum": [
                                "DRAFT",
                                "PUBLISH",
                                "PENDING"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Additional Question"
                ],
                "summary": "Delete bulk additional question",
                "description": "Delete bulk additional question",
                "operationId": "deleteBulkAdditionalQuestion",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ids": {
                                        "description": "Ids property",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "format": "int64",
                                            "example": 1
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/additional-questions/list-search": {
            "post": {
                "tags": [
                    "Additional Question"
                ],
                "summary": "Get list of additional question with query search",
                "description": "Get list of additional question with query search",
                "operationId": "postAdditionalQuestionListSearch",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "query": {
                                        "description": "Query property (Keyword would be filter name, slug and description)",
                                        "type": "string",
                                        "example": "keyword"
                                    },
                                    "company_id": {
                                        "$ref": "#/components/schemas/AdditionalQuestionEloquent/properties/company_id"
                                    },
                                    "is_required": {
                                        "$ref": "#/components/schemas/AdditionalQuestionEloquent/properties/is_required"
                                    },
                                    "status": {
                                        "$ref": "#/components/schemas/AdditionalQuestionEloquent/properties/status"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/additional-questions/page-search": {
            "post": {
                "tags": [
                    "Additional Question"
                ],
                "summary": "Get list of additional question with query and page parameter search",
                "description": "Get list of additional question with query and page parameter search",
                "operationId": "postAdditionalQuestionPageSearch",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "query": {
                                                "description": "Query property (Keyword would be filter name, slug and description)",
                                                "properties": {
                                                    "value": {
                                                        "type": "string",
                                                        "example": "keyword"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "company_id": {
                                                "$ref": "#/components/schemas/AdditionalQuestionEloquent/properties/company_id"
                                            },
                                            "is_required": {
                                                "$ref": "#/components/schemas/AdditionalQuestionEloquent/properties/is_required"
                                            },
                                            "status": {
                                                "$ref": "#/components/schemas/AdditionalQuestionEloquent/properties/status"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/PagedSearchParameter"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/additional-question": {
            "put": {
                "tags": [
                    "Additional Question"
                ],
                "summary": "Update additional question",
                "description": "Update additional question",
                "operationId": "putAdditionalQuestionUpdate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateAdditionalQuestionEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "Additional Question"
                ],
                "summary": "Create additional question",
                "description": "Create additional question",
                "operationId": "postAdditionalQuestionCreate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateAdditionalQuestionEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/additional-question/{id}": {
            "delete": {
                "tags": [
                    "Additional Question"
                ],
                "summary": "Delete additional question",
                "description": "Delete additional question",
                "operationId": "deleteAdditionalQuestion",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/base-salary-custom-type/list": {
            "get": {
                "tags": [
                    "Base Salary Custom Type"
                ],
                "summary": "Get list of base salary custom type",
                "description": "Get list of base salary custom type",
                "operationId": "getBaseSalaryCustomTypeList",
                "parameters": [
                    {
                        "name": "company_id",
                        "in": "query",
                        "description": "Company id parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "is_active",
                        "in": "query",
                        "description": "Is active parameter (active = 1; not active = 0)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/base-salary-custom-type/list-search": {
            "post": {
                "tags": [
                    "Base Salary Custom Type"
                ],
                "summary": "Get list of base salary custom type with query search",
                "description": "Get list of base salary custom type with query search",
                "operationId": "postBaseSalaryCustomTypeListSearch",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "query": {
                                        "description": "Query property (Keyword would be filter name, slug and description)",
                                        "type": "string",
                                        "example": "keyword"
                                    },
                                    "company_id": {
                                        "$ref": "#/components/schemas/BaseSalaryCustomTypeEloquent/properties/company_id"
                                    },
                                    "is_active": {
                                        "$ref": "#/components/schemas/BaseSalaryCustomTypeEloquent/properties/is_active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/base-salary-custom-type/page-search": {
            "post": {
                "tags": [
                    "Base Salary Custom Type"
                ],
                "summary": "Get list of base salary custom type with query and page parameter search",
                "description": "Get list of base salary custom type with query and page parameter search",
                "operationId": "postBaseSalaryCustomTypePageSearch",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "query": {
                                                "description": "Query property (Keyword would be filter name, slug and description)",
                                                "properties": {
                                                    "value": {
                                                        "type": "string",
                                                        "example": "keyword"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "company_id": {
                                                "$ref": "#/components/schemas/BaseSalaryCustomTypeEloquent/properties/company_id"
                                            },
                                            "is_active": {
                                                "$ref": "#/components/schemas/BaseSalaryCustomTypeEloquent/properties/is_active"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/PagedSearchParameter"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/base-salary-custom-type/detail/{id}": {
            "get": {
                "tags": [
                    "Base Salary Custom Type"
                ],
                "summary": "Get detail base salary custom type",
                "description": "Get detail base salary custom type",
                "operationId": "getBaseSalaryCustomTypeDetail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/base-salary-custom-type/create": {
            "post": {
                "tags": [
                    "Base Salary Custom Type"
                ],
                "summary": "Create base salary custom type",
                "description": "Create base salary custom type",
                "operationId": "postBaseSalaryCustomTypeCreate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateBaseSalaryCustomTypeEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/base-salary-custom-type/update": {
            "put": {
                "tags": [
                    "Base Salary Custom Type"
                ],
                "summary": "Update base salary custom type",
                "description": "Update base salary custom type",
                "operationId": "putBaseSalaryCustomTypeUpdate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateBaseSalaryCustomTypeEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/base-salary-custom-type/delete/{id}": {
            "delete": {
                "tags": [
                    "Base Salary Custom Type"
                ],
                "summary": "Delete base salary custom type",
                "description": "Delete base salary custom type",
                "operationId": "deleteBaseSalaryCustomType",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/base-salary-custom-type/deletes": {
            "delete": {
                "tags": [
                    "Base Salary Custom Type"
                ],
                "summary": "Delete bulk base salary custom type",
                "description": "Delete bulk base salary custom type",
                "operationId": "deleteBulkBaseSalaryCustomType",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ids": {
                                        "description": "Ids property",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "format": "int64",
                                            "example": 1
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/base-salary-custom-type/active": {
            "put": {
                "tags": [
                    "Base Salary Custom Type"
                ],
                "summary": "Set active base salary custom type",
                "description": "Set active base salary custom type",
                "operationId": "putBaseSalaryCustomTypeActive",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "is_active"
                                ],
                                "properties": {
                                    "id": {
                                        "description": "Id property",
                                        "type": "integer",
                                        "format": "int64",
                                        "example": 1
                                    },
                                    "is_active": {
                                        "$ref": "#/components/schemas/BaseSalaryCustomTypeEloquent/properties/is_active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/base-salary-custom-type/slug/{company_id}/{name}": {
            "get": {
                "tags": [
                    "Base Salary Custom Type"
                ],
                "summary": "Get slug of base salary custom type",
                "description": "Get slug of base salary custom type",
                "operationId": "getBaseSalaryCustomTypeSlug",
                "parameters": [
                    {
                        "name": "company_id",
                        "in": "path",
                        "description": "Company id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name parameter",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/base-salary-custom-type/list-search/export": {
            "post": {
                "tags": [
                    "Base Salary Custom Type"
                ],
                "summary": "Export list of base salary custom type",
                "description": "Export list of base salary custom type",
                "operationId": "postBaseSalaryCustomTypeListSearchExport",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "export": {
                                        "description": "Export property",
                                        "type": "string",
                                        "default": "",
                                        "enum": [
                                            "excel",
                                            "pdf"
                                        ],
                                        "example": "excel"
                                    },
                                    "company_id": {
                                        "$ref": "#/components/schemas/BaseSalaryCustomTypeEloquent/properties/company_id"
                                    },
                                    "is_active": {
                                        "$ref": "#/components/schemas/BaseSalaryCustomTypeEloquent/properties/is_active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/competence/list": {
            "get": {
                "tags": [
                    "Competence"
                ],
                "summary": "Get list of competence",
                "description": "Get list of competence",
                "operationId": "getCompetenceList",
                "parameters": [
                    {
                        "name": "company_id",
                        "in": "query",
                        "description": "Company id parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "is_active",
                        "in": "query",
                        "description": "Is active parameter (active = 1; not active = 0)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/competence/list-search": {
            "post": {
                "tags": [
                    "Competence"
                ],
                "summary": "Get list of competence with query search",
                "description": "Get list of competence with query search",
                "operationId": "postCompetenceListSearch",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "query": {
                                        "description": "Query property (Keyword would be filter code, name, slug and description)",
                                        "type": "string",
                                        "example": "keyword"
                                    },
                                    "company_id": {
                                        "$ref": "#/components/schemas/CompetenceEloquent/properties/company_id"
                                    },
                                    "is_active": {
                                        "$ref": "#/components/schemas/CompetenceEloquent/properties/is_active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/competence/page-search": {
            "post": {
                "tags": [
                    "Competence"
                ],
                "summary": "Get list of competence with query and page parameter search",
                "description": "Get list of competence with query and page parameter search",
                "operationId": "postCompetencePageSearch",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "query": {
                                                "description": "Query property (Keyword would be filter code, name, slug and description)",
                                                "properties": {
                                                    "value": {
                                                        "type": "string",
                                                        "example": "keyword"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "company_id": {
                                                "$ref": "#/components/schemas/CompetenceEloquent/properties/company_id"
                                            },
                                            "is_active": {
                                                "$ref": "#/components/schemas/CompetenceEloquent/properties/is_active"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/PagedSearchParameter"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/competence/detail/{id}": {
            "get": {
                "tags": [
                    "Competence"
                ],
                "summary": "Get detail competence",
                "description": "Get detail competence",
                "operationId": "getCompetenceDetail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/competence/create": {
            "post": {
                "tags": [
                    "Competence"
                ],
                "summary": "Create competence",
                "description": "Create competence",
                "operationId": "postCompetenceCreate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateCompetenceEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/competence/update": {
            "put": {
                "tags": [
                    "Competence"
                ],
                "summary": "Update competence",
                "description": "Update competence",
                "operationId": "putCompetenceUpdate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCompetenceEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/competence/delete/{id}": {
            "delete": {
                "tags": [
                    "Competence"
                ],
                "summary": "Delete competence",
                "description": "Delete competence",
                "operationId": "deleteCompetence",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/competence/deletes": {
            "delete": {
                "tags": [
                    "Competence"
                ],
                "summary": "Delete bulk competence",
                "description": "Delete bulk competence",
                "operationId": "deleteBulkCompetence",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ids": {
                                        "description": "Ids property",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "format": "int64",
                                            "example": 1
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/competence/active": {
            "put": {
                "tags": [
                    "Competence"
                ],
                "summary": "Set active competence",
                "description": "Set active competence",
                "operationId": "putCompetenceActive",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "is_active"
                                ],
                                "properties": {
                                    "id": {
                                        "description": "Id property",
                                        "type": "integer",
                                        "format": "int64",
                                        "example": 1
                                    },
                                    "is_active": {
                                        "$ref": "#/components/schemas/CompetenceEloquent/properties/is_active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/competence/slug/{company_id}/{name}": {
            "get": {
                "tags": [
                    "Competence"
                ],
                "summary": "Get slug of competence",
                "description": "Get slug of competence",
                "operationId": "getCompetenceSlug",
                "parameters": [
                    {
                        "name": "company_id",
                        "in": "path",
                        "description": "Company id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name parameter",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/competence/list-search/export": {
            "post": {
                "tags": [
                    "Competence"
                ],
                "summary": "Export list of competence",
                "description": "Export list of competence",
                "operationId": "postCompetenceListSearchExport",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "export": {
                                        "description": "Export property",
                                        "type": "string",
                                        "default": "",
                                        "enum": [
                                            "excel",
                                            "pdf"
                                        ],
                                        "example": "excel"
                                    },
                                    "company_id": {
                                        "$ref": "#/components/schemas/CompetenceEloquent/properties/company_id"
                                    },
                                    "is_active": {
                                        "$ref": "#/components/schemas/CompetenceEloquent/properties/is_active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/grade/list": {
            "get": {
                "tags": [
                    "Grade"
                ],
                "summary": "Get list of grade",
                "description": "Get list of grade",
                "operationId": "getGradeList",
                "parameters": [
                    {
                        "name": "company_id",
                        "in": "query",
                        "description": "Company id parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "is_active",
                        "in": "query",
                        "description": "Is active parameter (active = 1; not active = 0)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/grade/list-search": {
            "post": {
                "tags": [
                    "Grade"
                ],
                "summary": "Get list of grade with query search",
                "description": "Get list of grade with query search",
                "operationId": "postGradeListSearch",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "query": {
                                        "description": "Query property (Keyword would be filter name, slug and description)",
                                        "type": "string",
                                        "example": "keyword"
                                    },
                                    "company_id": {
                                        "$ref": "#/components/schemas/GradeEloquent/properties/company_id"
                                    },
                                    "is_active": {
                                        "$ref": "#/components/schemas/GradeEloquent/properties/is_active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/grade/page-search": {
            "post": {
                "tags": [
                    "Grade"
                ],
                "summary": "Get list of grade with query and page parameter search",
                "description": "Get list of grade with query and page parameter search",
                "operationId": "postGradePageSearch",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "query": {
                                                "description": "Query property (Keyword would be filter name, slug and description)",
                                                "properties": {
                                                    "value": {
                                                        "type": "string",
                                                        "example": "keyword"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "company_id": {
                                                "$ref": "#/components/schemas/GradeEloquent/properties/company_id"
                                            },
                                            "is_active": {
                                                "$ref": "#/components/schemas/GradeEloquent/properties/is_active"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/PagedSearchParameter"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/grade/detail/{id}": {
            "get": {
                "tags": [
                    "Grade"
                ],
                "summary": "Get detail grade",
                "description": "Get detail grade",
                "operationId": "getGradeDetail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/grade/create": {
            "post": {
                "tags": [
                    "Grade"
                ],
                "summary": "Create grade",
                "description": "Create grade",
                "operationId": "postGradeCreate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateGradeEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/grade/update": {
            "put": {
                "tags": [
                    "Grade"
                ],
                "summary": "Update grade",
                "description": "Update grade",
                "operationId": "putGradeUpdate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateGradeEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/grade/delete/{id}": {
            "delete": {
                "tags": [
                    "Grade"
                ],
                "summary": "Delete grade",
                "description": "Delete grade",
                "operationId": "deleteGrade",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/grade/deletes": {
            "delete": {
                "tags": [
                    "Grade"
                ],
                "summary": "Delete bulk grade",
                "description": "Delete bulk grade",
                "operationId": "deleteBulkGrade",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ids": {
                                        "description": "Ids property",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "format": "int64",
                                            "example": 1
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/grade/active": {
            "put": {
                "tags": [
                    "Grade"
                ],
                "summary": "Set active grade",
                "description": "Set active grade",
                "operationId": "putGradeActive",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "is_active"
                                ],
                                "properties": {
                                    "id": {
                                        "description": "Id property",
                                        "type": "integer",
                                        "format": "int64",
                                        "example": 1
                                    },
                                    "is_active": {
                                        "$ref": "#/components/schemas/GradeEloquent/properties/is_active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/grade/slug/{company_id}/{name}": {
            "get": {
                "tags": [
                    "Grade"
                ],
                "summary": "Get slug of grade",
                "description": "Get slug of grade",
                "operationId": "getGradeSlug",
                "parameters": [
                    {
                        "name": "company_id",
                        "in": "path",
                        "description": "Company id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name parameter",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/grade/list-search/export": {
            "post": {
                "tags": [
                    "Grade"
                ],
                "summary": "Export list of grade",
                "description": "Export list of grade",
                "operationId": "postGradeListSearchExport",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "export": {
                                        "description": "Export property",
                                        "type": "string",
                                        "default": "",
                                        "enum": [
                                            "excel",
                                            "pdf"
                                        ],
                                        "example": "excel"
                                    },
                                    "company_id": {
                                        "$ref": "#/components/schemas/GradeEloquent/properties/company_id"
                                    },
                                    "is_active": {
                                        "$ref": "#/components/schemas/GradeEloquent/properties/is_active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/letter-type/list": {
            "get": {
                "tags": [
                    "Letter Type"
                ],
                "summary": "Get list of letter type",
                "description": "Get list of letter type",
                "operationId": "getLetterTypeList",
                "parameters": [
                    {
                        "name": "company_id",
                        "in": "query",
                        "description": "Company id parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "is_active",
                        "in": "query",
                        "description": "Is active parameter (active = 1; not active = 0)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/letter-type/list-search": {
            "post": {
                "tags": [
                    "Letter Type"
                ],
                "summary": "Get list of letter type with query search",
                "description": "Get list of letter type with query search",
                "operationId": "postLetterTypeListSearch",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "query": {
                                        "description": "Query property (Keyword would be filter code, name, slug and description)",
                                        "type": "string",
                                        "example": "keyword"
                                    },
                                    "company_id": {
                                        "$ref": "#/components/schemas/LetterTypeEloquent/properties/company_id"
                                    },
                                    "is_active": {
                                        "$ref": "#/components/schemas/LetterTypeEloquent/properties/is_active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/letter-type/page-search": {
            "post": {
                "tags": [
                    "Letter Type"
                ],
                "summary": "Get list of letter type with query and page parameter search",
                "description": "Get list of letter type with query and page parameter search",
                "operationId": "postLetterTypePageSearch",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "query": {
                                                "description": "Query property (Keyword would be filter code, name, slug and description)",
                                                "properties": {
                                                    "value": {
                                                        "type": "string",
                                                        "example": "keyword"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "company_id": {
                                                "$ref": "#/components/schemas/LetterTypeEloquent/properties/company_id"
                                            },
                                            "is_active": {
                                                "$ref": "#/components/schemas/LetterTypeEloquent/properties/is_active"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/PagedSearchParameter"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/letter-type/detail/{id}": {
            "get": {
                "tags": [
                    "Letter Type"
                ],
                "summary": "Get detail letter type",
                "description": "Get detail letter type",
                "operationId": "getLetterTypeDetail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/letter-type/create": {
            "post": {
                "tags": [
                    "Letter Type"
                ],
                "summary": "Create letter type",
                "description": "Return id of letter type created",
                "operationId": "postLetterTypeCreate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateLetterTypeEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/letter-type/update": {
            "put": {
                "tags": [
                    "Letter Type"
                ],
                "summary": "Update letter type",
                "description": "Update letter type",
                "operationId": "putLetterTypeUpdate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateLetterTypeEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/letter-type/delete/{id}": {
            "delete": {
                "tags": [
                    "Letter Type"
                ],
                "summary": "Delete letter type",
                "description": "Delete letter type",
                "operationId": "deleteLetterType",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/letter-type/deletes": {
            "delete": {
                "tags": [
                    "Letter Type"
                ],
                "summary": "Delete bulk letter type",
                "description": "Delete bulk letter type",
                "operationId": "deleteBulkLetterType",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ids": {
                                        "description": "Ids property",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "format": "int64",
                                            "example": 1
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/letter-type/active": {
            "put": {
                "tags": [
                    "Letter Type"
                ],
                "summary": "Set active letter type",
                "description": "Set active letter type",
                "operationId": "putLetterTypeActive",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "is_active"
                                ],
                                "properties": {
                                    "id": {
                                        "description": "Id property",
                                        "type": "integer",
                                        "format": "int64",
                                        "example": 1
                                    },
                                    "is_active": {
                                        "$ref": "#/components/schemas/LetterTypeEloquent/properties/is_active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/letter-type/slug/{company_id}/{name}": {
            "get": {
                "tags": [
                    "Letter Type"
                ],
                "summary": "Get slug of letter type",
                "description": "Get slug of letter type",
                "operationId": "getLetterTypeSlug",
                "parameters": [
                    {
                        "name": "company_id",
                        "in": "path",
                        "description": "Company id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name parameter",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/letter-type/list-search/export": {
            "post": {
                "tags": [
                    "Letter Type"
                ],
                "summary": "Export list of letter type",
                "description": "Export list of letter type",
                "operationId": "postLetterTypeListSearchExport",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "export": {
                                        "description": "Export property",
                                        "type": "string",
                                        "default": "",
                                        "enum": [
                                            "excel",
                                            "pdf"
                                        ],
                                        "example": "excel"
                                    },
                                    "company_id": {
                                        "$ref": "#/components/schemas/LetterTypeEloquent/properties/company_id"
                                    },
                                    "is_active": {
                                        "$ref": "#/components/schemas/LetterTypeEloquent/properties/is_active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/other-type/list": {
            "get": {
                "tags": [
                    "Other Type"
                ],
                "summary": "Get list of other type",
                "description": "Get list of other type",
                "operationId": "getOtherTypeList",
                "parameters": [
                    {
                        "name": "company_id",
                        "in": "query",
                        "description": "Company id parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "is_active",
                        "in": "query",
                        "description": "Is active parameter (active = 1; not active = 0)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/other-type/list-search": {
            "post": {
                "tags": [
                    "Other Type"
                ],
                "summary": "Get list of other type with query search",
                "description": "Get list of other type with query search",
                "operationId": "postOtherTypeListSearch",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "query": {
                                        "description": "Query property (Keyword would be filter name, slug and description)",
                                        "type": "string",
                                        "example": "keyword"
                                    },
                                    "company_id": {
                                        "$ref": "#/components/schemas/OtherTypeEloquent/properties/company_id"
                                    },
                                    "is_active": {
                                        "$ref": "#/components/schemas/OtherTypeEloquent/properties/is_active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/other-type/page-search": {
            "post": {
                "tags": [
                    "Other Type"
                ],
                "summary": "Get list of other type with query and page parameter search",
                "description": "Get list of other type with query and page parameter search",
                "operationId": "postOtherTypePageSearch",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "query": {
                                                "description": "Query property (Keyword would be filter name, slug and description)",
                                                "properties": {
                                                    "value": {
                                                        "type": "string",
                                                        "example": "keyword"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "company_id": {
                                                "$ref": "#/components/schemas/OtherTypeEloquent/properties/company_id"
                                            },
                                            "is_active": {
                                                "$ref": "#/components/schemas/OtherTypeEloquent/properties/is_active"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/PagedSearchParameter"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/other-type/detail/{id}": {
            "get": {
                "tags": [
                    "Other Type"
                ],
                "summary": "Get detail other type",
                "description": "Get detail other type",
                "operationId": "getOtherTypeDetail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/other-type/create": {
            "post": {
                "tags": [
                    "Other Type"
                ],
                "summary": "Create other type",
                "description": "Create other type",
                "operationId": "postOtherTypeCreate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateOtherTypeEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/other-type/update": {
            "put": {
                "tags": [
                    "Other Type"
                ],
                "summary": "Update other type",
                "description": "Update other type",
                "operationId": "putOtherTypeUpdate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateOtherTypeEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/other-type/delete/{id}": {
            "delete": {
                "tags": [
                    "Other Type"
                ],
                "summary": "Delete other type",
                "description": "Delete other type",
                "operationId": "deleteOtherType",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/other-type/deletes": {
            "delete": {
                "tags": [
                    "Other Type"
                ],
                "summary": "Delete bulk other type",
                "description": "Delete bulk other type",
                "operationId": "deleteBulkOtherType",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ids": {
                                        "description": "Ids property",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "format": "int64",
                                            "example": 1
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/other-type/active": {
            "put": {
                "tags": [
                    "Other Type"
                ],
                "summary": "Set active other type",
                "description": "Set active other type",
                "operationId": "putOtherTypeActive",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "is_active"
                                ],
                                "properties": {
                                    "id": {
                                        "description": "Id property",
                                        "type": "integer",
                                        "format": "int64",
                                        "example": 1
                                    },
                                    "is_active": {
                                        "$ref": "#/components/schemas/OtherTypeEloquent/properties/is_active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/other-type/slug/{company_id}/{name}": {
            "get": {
                "tags": [
                    "Other Type"
                ],
                "summary": "Get slug of other type",
                "description": "Get slug of other type",
                "operationId": "getOtherTypeSlug",
                "parameters": [
                    {
                        "name": "company_id",
                        "in": "path",
                        "description": "Company id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name parameter",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/other-type/list-search/export": {
            "post": {
                "tags": [
                    "Other Type"
                ],
                "summary": "Export list of other type",
                "description": "Export list of other type",
                "operationId": "postOtherTypeListSearchExport",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "export": {
                                        "description": "Export property",
                                        "type": "string",
                                        "default": "",
                                        "enum": [
                                            "excel",
                                            "pdf"
                                        ],
                                        "example": "excel"
                                    },
                                    "company_id": {
                                        "$ref": "#/components/schemas/OtherTypeEloquent/properties/company_id"
                                    },
                                    "is_active": {
                                        "$ref": "#/components/schemas/OtherTypeEloquent/properties/is_active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/position/list": {
            "get": {
                "tags": [
                    "Position"
                ],
                "summary": "Get list of position",
                "description": "Get list of position",
                "operationId": "getPositionList",
                "parameters": [
                    {
                        "name": "parent_id",
                        "in": "query",
                        "description": "Parent id parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "company_id",
                        "in": "query",
                        "description": "Company id parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "is_active",
                        "in": "query",
                        "description": "Is active parameter (active = 1; not active = 0)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/position/list-hierarchical": {
            "get": {
                "tags": [
                    "Position"
                ],
                "summary": "Get list hierarchical of position",
                "description": "Get list hierarchical of position",
                "operationId": "getPositionListHierarchical",
                "parameters": [
                    {
                        "name": "company_id",
                        "in": "query",
                        "description": "Company id parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "is_active",
                        "in": "query",
                        "description": "Is active parameter (active = 1; not active = 0)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/position/list-search": {
            "post": {
                "tags": [
                    "Position"
                ],
                "summary": "Get list of position with query search",
                "description": "Get list of position with query search",
                "operationId": "postPositionListSearch",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "query": {
                                        "description": "Query property (Keyword would be filter code, name, slug and description)",
                                        "type": "string",
                                        "example": "keyword"
                                    },
                                    "parent_id": {
                                        "$ref": "#/components/schemas/PositionEloquent/properties/parent_id"
                                    },
                                    "company_id": {
                                        "$ref": "#/components/schemas/PositionEloquent/properties/company_id"
                                    },
                                    "is_active": {
                                        "$ref": "#/components/schemas/PositionEloquent/properties/is_active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/position/page-search": {
            "post": {
                "tags": [
                    "Position"
                ],
                "summary": "Get list of position with query and page parameter search",
                "description": "Get list of position with query and page parameter search",
                "operationId": "postPositionPageSearch",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "query": {
                                                "description": "Query property (Keyword would be filter code, name, slug and description)",
                                                "properties": {
                                                    "value": {
                                                        "type": "string",
                                                        "example": "keyword"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "parent_id": {
                                                "$ref": "#/components/schemas/PositionEloquent/properties/parent_id"
                                            },
                                            "company_id": {
                                                "$ref": "#/components/schemas/PositionEloquent/properties/company_id"
                                            },
                                            "is_active": {
                                                "$ref": "#/components/schemas/PositionEloquent/properties/is_active"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/PagedSearchParameter"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/position/detail/{id}": {
            "get": {
                "tags": [
                    "Position"
                ],
                "summary": "Get detail position",
                "description": "Get detail position",
                "operationId": "getPositionDetail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/position/create": {
            "post": {
                "tags": [
                    "Position"
                ],
                "summary": "Create position",
                "description": "Create position",
                "operationId": "postPositionCreate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePositionEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/position/update": {
            "put": {
                "tags": [
                    "Position"
                ],
                "summary": "Update position",
                "description": "Update position",
                "operationId": "putPositionUpdate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdatePositionEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/position/delete/{id}": {
            "delete": {
                "tags": [
                    "Position"
                ],
                "summary": "Delete position",
                "description": "Delete position",
                "operationId": "deletePosition",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/position/deletes": {
            "delete": {
                "tags": [
                    "Position"
                ],
                "summary": "Delete bulk position",
                "description": "Delete bulk position",
                "operationId": "deleteBulkPosition",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ids": {
                                        "description": "Ids property",
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "id": {
                                                    "description": "ID of position",
                                                    "type": "integer",
                                                    "format": "int64"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/position/active": {
            "put": {
                "tags": [
                    "Position"
                ],
                "summary": "Set active position",
                "description": "Set active position",
                "operationId": "putPositionActive",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "is_active"
                                ],
                                "properties": {
                                    "id": {
                                        "description": "Id property",
                                        "type": "integer",
                                        "format": "int64",
                                        "example": 1
                                    },
                                    "is_active": {
                                        "$ref": "#/components/schemas/PositionEloquent/properties/is_active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/position/slug/{company_id}/{name}": {
            "get": {
                "tags": [
                    "Position"
                ],
                "summary": "Get slug of position",
                "description": "Get slug of position",
                "operationId": "getPositionSlug",
                "parameters": [
                    {
                        "name": "company_id",
                        "in": "path",
                        "description": "Company id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name parameter",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/position/list-search/export": {
            "post": {
                "tags": [
                    "Position"
                ],
                "summary": "Export list of position",
                "description": "Export list of position",
                "operationId": "postPositionListSearchExport",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "export": {
                                        "description": "Export property",
                                        "type": "string",
                                        "default": "",
                                        "enum": [
                                            "excel",
                                            "pdf"
                                        ],
                                        "example": "excel"
                                    },
                                    "parent_id": {
                                        "$ref": "#/components/schemas/PositionEloquent/properties/parent_id"
                                    },
                                    "company_id": {
                                        "$ref": "#/components/schemas/PositionEloquent/properties/company_id"
                                    },
                                    "is_active": {
                                        "$ref": "#/components/schemas/PositionEloquent/properties/is_active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/recruitment-stages": {
            "get": {
                "tags": [
                    "Recruitment Stage"
                ],
                "summary": "Get list of recruitment stage",
                "description": "Get list of recruitment stage",
                "operationId": "getRecruitmentStageList",
                "parameters": [
                    {
                        "name": "company_id",
                        "in": "query",
                        "description": "Company id parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Recruitment Stage"
                ],
                "summary": "Delete bulk recruitment stage",
                "description": "Delete bulk recruitment stage",
                "operationId": "deleteBulkRecruitmentStage",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ids": {
                                        "description": "Ids property",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "format": "int64",
                                            "example": 1
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/recruitment-stages/list-search": {
            "post": {
                "tags": [
                    "Recruitment Stage"
                ],
                "summary": "Get list of recruitment stage with query search",
                "description": "Get list of recruitment stage with query search",
                "operationId": "postRecruitmentStageListSearch",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "query": {
                                        "description": "Query property (Keyword would be filter name, slug and description)",
                                        "type": "string",
                                        "example": "keyword"
                                    },
                                    "company_id": {
                                        "$ref": "#/components/schemas/RecruitmentStageEloquent/properties/company_id"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/recruitment-stages/page-search": {
            "post": {
                "tags": [
                    "Recruitment Stage"
                ],
                "summary": "Get list of recruitment stage with query and page parameter search",
                "description": "Get list of recruitment stage with query and page parameter search",
                "operationId": "postRecruitmentStagePageSearch",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "query": {
                                                "description": "Query property (Keyword would be filter name, slug and description)",
                                                "properties": {
                                                    "value": {
                                                        "type": "string",
                                                        "example": "keyword"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "company_id": {
                                                "$ref": "#/components/schemas/RecruitmentStageEloquent/properties/company_id"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/PagedSearchParameter"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/recruitment-stage": {
            "put": {
                "tags": [
                    "Recruitment Stage"
                ],
                "summary": "Update recruitment stage",
                "description": "Update recruitment stage",
                "operationId": "putRecruitmentStageUpdate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateRecruitmentStageEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "Recruitment Stage"
                ],
                "summary": "Create recruitment stage",
                "description": "Create recruitment stage",
                "operationId": "postRecruitmentStageCreate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateRecruitmentStageEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/recruitment-stage/{id}": {
            "delete": {
                "tags": [
                    "Recruitment Stage"
                ],
                "summary": "Delete recruitment stage",
                "description": "Delete recruitment stage",
                "operationId": "deleteRecruitmentStage",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/recruitment-stage/slug/{company_id}/{name}": {
            "get": {
                "tags": [
                    "Recruitment Stage"
                ],
                "summary": "Get slug of recruitment stage",
                "description": "Return slug of recruitment stage",
                "operationId": "getRecruitmentStageSlug",
                "parameters": [
                    {
                        "name": "company_id",
                        "in": "path",
                        "description": "Company id of recruitment stage",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name of recruitment stage",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/salary-structure/list": {
            "get": {
                "tags": [
                    "Salary Structure"
                ],
                "summary": "Get list of salary structure",
                "description": "Get list of salary structure",
                "operationId": "getSalaryStructureList",
                "parameters": [
                    {
                        "name": "company_id",
                        "in": "query",
                        "description": "Company id parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "type parameter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "",
                            "enum": [
                                "SALARY",
                                "ALLOWANCE",
                                "LOAN"
                            ]
                        }
                    },
                    {
                        "name": "is_active",
                        "in": "query",
                        "description": "Is active parameter (active = 1; not active = 0)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/salary-structure/list-search": {
            "post": {
                "tags": [
                    "Salary Structure"
                ],
                "summary": "Get list of salary structure with query search",
                "description": "Get list of salary structure with query search",
                "operationId": "postSalaryStructureListSearch",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "query": {
                                        "description": "Query property (Keyword would be filter name, slug and description)",
                                        "type": "string",
                                        "example": "keyword"
                                    },
                                    "company_id": {
                                        "$ref": "#/components/schemas/SalaryStructureEloquent/properties/company_id"
                                    },
                                    "type": {
                                        "$ref": "#/components/schemas/SalaryStructureEloquent/properties/type"
                                    },
                                    "is_active": {
                                        "$ref": "#/components/schemas/SalaryStructureEloquent/properties/is_active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/salary-structure/page-search": {
            "post": {
                "tags": [
                    "Salary Structure"
                ],
                "summary": "Get list of salary structure with query and page parameter search",
                "description": "Get list of salary structure with query and page parameter search",
                "operationId": "postSalaryStructurePageSearch",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "query": {
                                                "description": "Query property (Keyword would be filter name, slug and description)",
                                                "properties": {
                                                    "value": {
                                                        "type": "string",
                                                        "example": "keyword"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "company_id": {
                                                "$ref": "#/components/schemas/SalaryStructureEloquent/properties/company_id"
                                            },
                                            "type": {
                                                "$ref": "#/components/schemas/SalaryStructureEloquent/properties/type"
                                            },
                                            "is_active": {
                                                "$ref": "#/components/schemas/SalaryStructureEloquent/properties/is_active"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/PagedSearchParameter"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/salary-structure/detail/{id}": {
            "get": {
                "tags": [
                    "Salary Structure"
                ],
                "summary": "Get detail salary structure",
                "description": "Get detail salary structure",
                "operationId": "getSalaryStructureDetail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/salary-structure/create": {
            "post": {
                "tags": [
                    "Salary Structure"
                ],
                "summary": "Create salary structure",
                "description": "Create salary structure",
                "operationId": "postSalaryStructureCreate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateSalaryStructureEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/salary-structure/update": {
            "put": {
                "tags": [
                    "Salary Structure"
                ],
                "summary": "Update salary structure",
                "description": "Update salary structure",
                "operationId": "putSalaryStructureUpdate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateSalaryStructureEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/salary-structure/delete/{id}": {
            "delete": {
                "tags": [
                    "Salary Structure"
                ],
                "summary": "Delete salary structure",
                "description": "Delete salary structure",
                "operationId": "deleteSalaryStructure",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/salary-structure/deletes": {
            "delete": {
                "tags": [
                    "Base Salary Structure"
                ],
                "summary": "Delete bulk salary structure",
                "description": "Delete bulk salary structure",
                "operationId": "deleteBulkSalaryStructure",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ids": {
                                        "description": "Ids property",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "format": "int64",
                                            "example": 1
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/salary-structure/active": {
            "put": {
                "tags": [
                    "Salary Structure"
                ],
                "summary": "Set active salary structure",
                "description": "Set active salary structure",
                "operationId": "putSalaryStructureActive",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "is_active"
                                ],
                                "properties": {
                                    "id": {
                                        "description": "Id property",
                                        "type": "integer",
                                        "format": "int64",
                                        "example": 1
                                    },
                                    "is_active": {
                                        "$ref": "#/components/schemas/SalaryStructureEloquent/properties/is_active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/salary-structure/slug/{company_id}/{name}": {
            "get": {
                "tags": [
                    "Salary Structure"
                ],
                "summary": "Get slug of salary structure",
                "description": "Return slug of salary structure",
                "operationId": "getSalaryStructureSlug",
                "parameters": [
                    {
                        "name": "company_id",
                        "in": "path",
                        "description": "Company id of salary structure",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name of salary structure",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/salary-structure/list-search/export": {
            "post": {
                "tags": [
                    "Salary Structure"
                ],
                "summary": "Export list of salary structure",
                "description": "Export list of salary structure",
                "operationId": "postSalaryStructureListSearchExport",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "export": {
                                        "description": "Export property",
                                        "type": "string",
                                        "default": "",
                                        "enum": [
                                            "excel",
                                            "pdf"
                                        ],
                                        "example": "excel"
                                    },
                                    "company_id": {
                                        "$ref": "#/components/schemas/SalaryStructureEloquent/properties/company_id"
                                    },
                                    "type": {
                                        "$ref": "#/components/schemas/SalaryStructureEloquent/properties/type"
                                    },
                                    "is_active": {
                                        "$ref": "#/components/schemas/SalaryStructureEloquent/properties/is_active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/work-area/list": {
            "get": {
                "tags": [
                    "Work Area"
                ],
                "summary": "Get list of work area",
                "description": "Get list of work area",
                "operationId": "getWorkAreaList",
                "parameters": [
                    {
                        "name": "company_id",
                        "in": "query",
                        "description": "Company id parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "country",
                        "in": "query",
                        "description": "Country parameter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "ID"
                        }
                    },
                    {
                        "name": "is_active",
                        "in": "query",
                        "description": "Is active parameter (active = 1; not active = 0)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/work-area/list-search": {
            "post": {
                "tags": [
                    "Work Area"
                ],
                "summary": "Get list of work area with query search",
                "description": "Get list of work area with query search",
                "operationId": "postWorkAreaListSearch",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "query": {
                                        "description": "Query property (Keyword would be filter code, title, slug, state/province, city, address, postcode, phone, fax, email and url)",
                                        "type": "string",
                                        "example": "keyword"
                                    },
                                    "company_id": {
                                        "$ref": "#/components/schemas/WorkAreaEloquent/properties/company_id"
                                    },
                                    "country": {
                                        "$ref": "#/components/schemas/WorkAreaEloquent/properties/country"
                                    },
                                    "is_active": {
                                        "$ref": "#/components/schemas/WorkAreaEloquent/properties/is_active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/work-area/page-search": {
            "post": {
                "tags": [
                    "Work Area"
                ],
                "summary": "Get list of work area with query and page parameter search",
                "description": "Get list of work area with query and page parameter search",
                "operationId": "postWorkAreaPageSearch",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "query": {
                                                "description": "Query property (Keyword would be filter code, title, slug, state/province, city, address, postcode, phone, fax, email and url)",
                                                "properties": {
                                                    "value": {
                                                        "type": "string",
                                                        "example": "keyword"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "company_id": {
                                                "$ref": "#/components/schemas/WorkAreaEloquent/properties/company_id"
                                            },
                                            "country": {
                                                "$ref": "#/components/schemas/WorkAreaEloquent/properties/country"
                                            },
                                            "is_active": {
                                                "$ref": "#/components/schemas/WorkAreaEloquent/properties/is_active"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/PagedSearchParameter"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/work-area/detail/{id}": {
            "get": {
                "tags": [
                    "Work Area"
                ],
                "summary": "Get detail work area",
                "description": "Get detail work area",
                "operationId": "getWorkAreaDetail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/work-area/create": {
            "post": {
                "tags": [
                    "Work Area"
                ],
                "summary": "Create work area",
                "description": "Create work area",
                "operationId": "postWorkAreaCreate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateWorkAreaEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/work-area/update": {
            "put": {
                "tags": [
                    "Work Area"
                ],
                "summary": "Update work area",
                "description": "Update work area",
                "operationId": "putWorkAreaUpdate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateWorkAreaEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/work-area/delete/{id}": {
            "delete": {
                "tags": [
                    "Work Area"
                ],
                "summary": "Delete work area",
                "description": "Delete work area",
                "operationId": "deleteWorkArea",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/work-area/deletes": {
            "delete": {
                "tags": [
                    "Work Area"
                ],
                "summary": "Delete bulk work area",
                "description": "Delete bulk work area",
                "operationId": "deleteBulkWorkArea",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ids": {
                                        "description": "Ids property",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "format": "int64",
                                            "example": 1
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/work-area/active": {
            "put": {
                "tags": [
                    "Work Area"
                ],
                "summary": "Set active work area",
                "description": "Set active work area",
                "operationId": "putWorkAreaActive",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "is_active"
                                ],
                                "properties": {
                                    "id": {
                                        "description": "Id property",
                                        "type": "integer",
                                        "format": "int64",
                                        "example": 1
                                    },
                                    "is_active": {
                                        "$ref": "#/components/schemas/WorkAreaEloquent/properties/is_active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/work-area/slug/{company_id}/{title}": {
            "get": {
                "tags": [
                    "Work Area"
                ],
                "summary": "Get slug of work area",
                "description": "Get slug of work area",
                "operationId": "getWorkAreaSlug",
                "parameters": [
                    {
                        "name": "company_id",
                        "in": "path",
                        "description": "Company id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name parameter",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/work-area/list-search/export": {
            "post": {
                "tags": [
                    "Work Area"
                ],
                "summary": "Export list of work area",
                "description": "Export list of work area",
                "operationId": "postWorkAreaListSearchExport",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "export": {
                                        "description": "Export property",
                                        "type": "string",
                                        "default": "",
                                        "enum": [
                                            "excel",
                                            "pdf"
                                        ],
                                        "example": "excel"
                                    },
                                    "company_id": {
                                        "$ref": "#/components/schemas/WorkAreaEloquent/properties/company_id"
                                    },
                                    "country": {
                                        "$ref": "#/components/schemas/WorkAreaEloquent/properties/country"
                                    },
                                    "is_active": {
                                        "$ref": "#/components/schemas/WorkAreaEloquent/properties/is_active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/work-unit/list": {
            "get": {
                "tags": [
                    "Work Unit"
                ],
                "summary": "Get list of work unit",
                "description": "Get list of work unit",
                "operationId": "getWorkUnitList",
                "parameters": [
                    {
                        "name": "parent_id",
                        "in": "query",
                        "description": "Parent id parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "company_id",
                        "in": "query",
                        "description": "Company id parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "country",
                        "in": "query",
                        "description": "Country parameter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "ID"
                        }
                    },
                    {
                        "name": "is_active",
                        "in": "query",
                        "description": "Is active parameter (active = 1; not active = 0)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/work-unit/list-hierarchical": {
            "get": {
                "tags": [
                    "Work Unit"
                ],
                "summary": "Get list hierarchical of work unit",
                "description": "Get list hierarchical of work unit",
                "operationId": "getWorkUnitListHierarchical",
                "parameters": [
                    {
                        "name": "company_id",
                        "in": "query",
                        "description": "Company id parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "country",
                        "in": "query",
                        "description": "Country parameter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "ID"
                        }
                    },
                    {
                        "name": "is_active",
                        "in": "query",
                        "description": "Is active parameter (active = 1; not active = 0)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/work-unit/list-search": {
            "post": {
                "tags": [
                    "Work Unit"
                ],
                "summary": "Get list of work unit with query search",
                "description": "Get list of work unit with query search",
                "operationId": "postWorkUnitListSearch",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "query": {
                                        "description": "Query property (Keyword would be filter code, title, slug, state/province, city, address, postcode, phone, fax, email and url)",
                                        "type": "string",
                                        "example": "keyword"
                                    },
                                    "parent_id": {
                                        "$ref": "#/components/schemas/WorkUnitEloquent/properties/parent_id"
                                    },
                                    "company_id": {
                                        "$ref": "#/components/schemas/WorkUnitEloquent/properties/company_id"
                                    },
                                    "country": {
                                        "$ref": "#/components/schemas/WorkUnitEloquent/properties/country"
                                    },
                                    "is_active": {
                                        "$ref": "#/components/schemas/WorkUnitEloquent/properties/is_active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/work-unit/page-search": {
            "post": {
                "tags": [
                    "Work Unit"
                ],
                "summary": "Get list of work unit with query and page parameter search",
                "description": "Get list of work unit with query and page parameter search",
                "operationId": "postWorkUnitPageSearch",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "query": {
                                                "description": "Query property (Keyword would be filter code, title, slug, state/province, city, address, postcode, phone, fax, email and url)",
                                                "properties": {
                                                    "value": {
                                                        "type": "string",
                                                        "example": "keyword"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "company_id": {
                                                "$ref": "#/components/schemas/WorkUnitEloquent/properties/company_id"
                                            },
                                            "country": {
                                                "$ref": "#/components/schemas/WorkUnitEloquent/properties/country"
                                            },
                                            "is_active": {
                                                "$ref": "#/components/schemas/WorkUnitEloquent/properties/is_active"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/PagedSearchParameter"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/work-unit/detail/{id}": {
            "get": {
                "tags": [
                    "Work Unit"
                ],
                "summary": "Get detail work unit",
                "description": "Get detail work unit",
                "operationId": "getWorkUnitDetail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/work-unit/create": {
            "post": {
                "tags": [
                    "Work Unit"
                ],
                "summary": "Create work unit",
                "description": "Create work unit",
                "operationId": "postWorkUnitCreate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateWorkUnitEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/work-unit/update": {
            "put": {
                "tags": [
                    "Work Unit"
                ],
                "summary": "Update work unit",
                "description": "Return object of work unit updated",
                "operationId": "putWorkUnitUpdate",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateWorkUnitEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/work-unit/delete/{id}": {
            "delete": {
                "tags": [
                    "Work Unit"
                ],
                "summary": "Delete work unit",
                "description": "Delete work unit",
                "operationId": "deleteWorkUnit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/work-unit/deletes": {
            "delete": {
                "tags": [
                    "Work Unit"
                ],
                "summary": "Delete bulk work unit",
                "description": "Delete bulk work unit",
                "operationId": "deleteBulkWorkUnit",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ids": {
                                        "description": "Ids property",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "format": "int64",
                                            "example": 1
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/work-unit/active": {
            "put": {
                "tags": [
                    "Work Unit"
                ],
                "summary": "Set active work unit",
                "description": "Set active work unit",
                "operationId": "putWorkUnitActive",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "is_active"
                                ],
                                "properties": {
                                    "id": {
                                        "description": "Id property",
                                        "type": "integer",
                                        "format": "int64",
                                        "example": 1
                                    },
                                    "is_active": {
                                        "$ref": "#/components/schemas/WorkUnitEloquent/properties/is_active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/work-unit/slug/{company_id}/{title}": {
            "get": {
                "tags": [
                    "Work Unit"
                ],
                "summary": "Get slug of work unit",
                "description": "Return slug of work unit",
                "operationId": "getWorkUnitSlug",
                "parameters": [
                    {
                        "name": "company_id",
                        "in": "path",
                        "description": "Company id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "title",
                        "in": "path",
                        "description": "Title parameter",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/work-unit/list-search/export": {
            "post": {
                "tags": [
                    "Work Unit"
                ],
                "summary": "Export list of work unit",
                "description": "Export list of work unit",
                "operationId": "postWorkUnitListSearchExport",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "export": {
                                        "description": "Export property",
                                        "type": "string",
                                        "default": "",
                                        "enum": [
                                            "excel",
                                            "pdf"
                                        ],
                                        "example": "excel"
                                    },
                                    "parent_id": {
                                        "$ref": "#/components/schemas/WorkUnitEloquent/properties/parent_id"
                                    },
                                    "company_id": {
                                        "$ref": "#/components/schemas/WorkUnitEloquent/properties/company_id"
                                    },
                                    "country": {
                                        "$ref": "#/components/schemas/WorkUnitEloquent/properties/country"
                                    },
                                    "is_active": {
                                        "$ref": "#/components/schemas/WorkUnitEloquent/properties/is_active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/employee/{employeeId}/position-mutations": {
            "get": {
                "tags": [
                    "Position Mutation"
                ],
                "summary": "Get list of position mutation",
                "description": "Get list of position mutation",
                "operationId": "getPositionMutationList",
                "parameters": [
                    {
                        "name": "employeeId",
                        "in": "path",
                        "description": "Employee id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "position_id",
                        "in": "query",
                        "description": "Position id parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "grade_id",
                        "in": "query",
                        "description": "Grade id parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "start_mutation_date",
                        "in": "query",
                        "description": "Start mutation date parameter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2020-01-01 00:00:00"
                        }
                    },
                    {
                        "name": "end_mutation_date",
                        "in": "query",
                        "description": "End mutation date parameter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2020-01-01 00:00:00"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Position Mutation"
                ],
                "summary": "Delete bulk position mutation",
                "description": "Delete bulk position mutation",
                "operationId": "deleteBulkPositionMutation",
                "parameters": [
                    {
                        "name": "employeeId",
                        "in": "path",
                        "description": "Employee id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ids": {
                                        "description": "Ids property",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "format": "int64",
                                            "example": 1
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/employee/{employeeId}/position-mutation/list-search": {
            "post": {
                "tags": [
                    "Position Mutation"
                ],
                "summary": "Get list of position mutation with query search",
                "description": "Get list of position mutation with query search",
                "operationId": "postPositionMutationListSearch",
                "parameters": [
                    {
                        "name": "employeeId",
                        "in": "path",
                        "description": "Employee id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "query": {
                                        "description": "Query property (Keyword would be filter note)",
                                        "type": "string",
                                        "example": "keyword"
                                    },
                                    "position_id": {
                                        "$ref": "#/components/schemas/PositionMutationEloquent/properties/position_id"
                                    },
                                    "grade_id": {
                                        "$ref": "#/components/schemas/PositionMutationEloquent/properties/grade_id"
                                    },
                                    "start_mutation_date": {
                                        "description": "Start mutation date parameter",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    },
                                    "end_mutation_date": {
                                        "description": "End mutation date parameter",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/employee/{employeeId}/position-mutation/page-search": {
            "post": {
                "tags": [
                    "Position Mutation"
                ],
                "summary": "Get list of position mutation with query and page parameter search",
                "description": "Get list of position mutation with query and page parameter search",
                "operationId": "postPositionMutationPageSearch",
                "parameters": [
                    {
                        "name": "employeeId",
                        "in": "path",
                        "description": "Employee id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "query": {
                                                "description": "Query property (Keyword would be filter note)",
                                                "properties": {
                                                    "value": {
                                                        "type": "string",
                                                        "example": "keyword"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "position_id": {
                                                "$ref": "#/components/schemas/PositionMutationEloquent/properties/position_id"
                                            },
                                            "grade_id": {
                                                "$ref": "#/components/schemas/PositionMutationEloquent/properties/grade_id"
                                            },
                                            "start_mutation_date": {
                                                "description": "Start mutation date property",
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2020-01-01 00:00:00"
                                            },
                                            "end_mutation_date": {
                                                "description": "End mutation date property",
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2020-01-01 00:00:00"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/PagedSearchParameter"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/employee/{employeeId}/position-mutation/{id}": {
            "get": {
                "tags": [
                    "Position Mutation"
                ],
                "summary": "Get detail position mutation",
                "description": "Get detail position mutation",
                "operationId": "getProjectMutationDetail",
                "parameters": [
                    {
                        "name": "employeeId",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Position mutation parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/employee/{employeeId}/position-mutation": {
            "put": {
                "tags": [
                    "Position Mutation"
                ],
                "summary": "Update position mutation",
                "description": "Update position mutation",
                "operationId": "putPositionMutationUpdate",
                "parameters": [
                    {
                        "name": "employeeId",
                        "in": "path",
                        "description": "Employee id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdatePositionMutationEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "Position Mutation"
                ],
                "summary": "Create position mutation",
                "description": "Create position mutation",
                "operationId": "postPositionMutationCreate",
                "parameters": [
                    {
                        "name": "employeeId",
                        "in": "path",
                        "description": "Employee id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePositionMutationEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/employee/{employeeId}/position-mutation/delete/{id}": {
            "delete": {
                "tags": [
                    "Position Mutation"
                ],
                "summary": "Delete position mutation",
                "description": "Delete position mutation",
                "operationId": "deletePositionMutation",
                "parameters": [
                    {
                        "name": "employeeId",
                        "in": "path",
                        "description": "Employee id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/employee/{employeeId}/position-mutations/export": {
            "post": {
                "tags": [
                    "Position Mutation"
                ],
                "summary": "Export list of position mutation",
                "description": "Export list of position mutation",
                "operationId": "postPositionMutationListSearchExport",
                "parameters": [
                    {
                        "name": "employeeId",
                        "in": "path",
                        "description": "Employee id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "export": {
                                        "description": "Export property",
                                        "type": "string",
                                        "default": "",
                                        "enum": [
                                            "excel",
                                            "pdf"
                                        ],
                                        "example": "excel"
                                    },
                                    "position_id": {
                                        "$ref": "#/components/schemas/PositionMutationEloquent/properties/position_id"
                                    },
                                    "start_mutation_date": {
                                        "description": "Start mutation date parameter",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    },
                                    "end_mutation_date": {
                                        "description": "End mutation date parameter",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad request"
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/employee/{employeeId}/project-mutations": {
            "get": {
                "tags": [
                    "Project Mutation"
                ],
                "summary": "Get list of project mutation",
                "description": "Get list of project mutation",
                "operationId": "getProjectMutationList",
                "parameters": [
                    {
                        "name": "employeeId",
                        "in": "path",
                        "description": "Employee id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "project_id",
                        "in": "query",
                        "description": "Project id parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "start_mutation_date",
                        "in": "query",
                        "description": "Start mutation date parameter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2020-01-01 00:00:00"
                        }
                    },
                    {
                        "name": "end_mutation_date",
                        "in": "query",
                        "description": "End mutation date parameter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2020-01-01 00:00:00"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Project Mutation"
                ],
                "summary": "Delete bulk project mutation",
                "description": "Delete bulk project mutation",
                "operationId": "deleteBulkProjectMutation",
                "parameters": [
                    {
                        "name": "employeeId",
                        "in": "path",
                        "description": "Employee id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ids": {
                                        "description": "Ids property",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "format": "int64",
                                            "example": 1
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/employee/{employeeId}/project-mutation/list-search": {
            "post": {
                "tags": [
                    "Project Mutation"
                ],
                "summary": "Get list of project mutation with query search",
                "description": "Get list of project mutation with query search",
                "operationId": "postProjectMutationListSearch",
                "parameters": [
                    {
                        "name": "employeeId",
                        "in": "path",
                        "description": "Employee id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "project_id": {
                                        "$ref": "#/components/schemas/ProjectMutationEloquent/properties/project_id"
                                    },
                                    "start_mutation_date": {
                                        "description": "Start mutation date parameter",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    },
                                    "end_mutation_date": {
                                        "description": "End mutation date parameter",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/employee/{employeeId}/project-mutation/page-search": {
            "post": {
                "tags": [
                    "Project Mutation"
                ],
                "summary": "Get list of project mutation with query and page parameter search",
                "description": "Get list of project mutation with query and page parameter search",
                "operationId": "postProjectMutationPageSearch",
                "parameters": [
                    {
                        "name": "employeeId",
                        "in": "path",
                        "description": "Employee id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "project_id": {
                                                "$ref": "#/components/schemas/ProjectMutationEloquent/properties/project_id"
                                            },
                                            "start_mutation_date": {
                                                "description": "Start mutation date property",
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2020-01-01 00:00:00"
                                            },
                                            "end_mutation_date": {
                                                "description": "End mutation date property",
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2020-01-01 00:00:00"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/PagedSearchParameter"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/employee/{employeeId}/project-mutation/{id}": {
            "get": {
                "tags": [
                    "Project Mutation"
                ],
                "summary": "Get detail project mutation",
                "description": "Get detail project mutation",
                "operationId": "getProjectMutationDetail",
                "parameters": [
                    {
                        "name": "employeeId",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Project mutation parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Project Mutation"
                ],
                "summary": "Delete project mutation",
                "description": "Delete project mutation",
                "operationId": "deleteProjectMutation",
                "parameters": [
                    {
                        "name": "employeeId",
                        "in": "path",
                        "description": "Employee id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/employee/{employeeId}/project-mutation": {
            "put": {
                "tags": [
                    "Project Mutation"
                ],
                "summary": "Update project mutation",
                "description": "Update project mutation",
                "operationId": "putProjectMutationUpdate",
                "parameters": [
                    {
                        "name": "employeeId",
                        "in": "path",
                        "description": "Employee id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateProjectMutationEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "Project Mutation"
                ],
                "summary": "Create project mutation",
                "description": "Create project mutation",
                "operationId": "postProjectMutationCreate",
                "parameters": [
                    {
                        "name": "employeeId",
                        "in": "path",
                        "description": "Employee id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateProjectMutationEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/employee/{employeeId}/project-mutations/export": {
            "post": {
                "tags": [
                    "Project Mutation"
                ],
                "summary": "Get list export of project mutation",
                "description": "Return project mutation exported",
                "operationId": "postProjectMutationListSearchExport",
                "parameters": [
                    {
                        "name": "employeeId",
                        "in": "path",
                        "description": "Employee id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "export": {
                                        "description": "Export property",
                                        "type": "string",
                                        "default": "",
                                        "enum": [
                                            "excel",
                                            "pdf"
                                        ],
                                        "example": "excel"
                                    },
                                    "project_id": {
                                        "$ref": "#/components/schemas/ProjectMutationEloquent/properties/project_id"
                                    },
                                    "start_mutation_date": {
                                        "description": "Start mutation date parameter",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    },
                                    "end_mutation_date": {
                                        "description": "End mutation date parameter",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/employee/{employeeId}/work-unit-mutations": {
            "get": {
                "tags": [
                    "Work Unit Mutation"
                ],
                "summary": "Get list of work unit mutation",
                "description": "Get list of work unit mutation",
                "operationId": "getWorkUnitMutationList",
                "parameters": [
                    {
                        "name": "employeeId",
                        "in": "path",
                        "description": "Employee id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "work_unit_id",
                        "in": "query",
                        "description": "Work unit id parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "start_mutation_date",
                        "in": "query",
                        "description": "Start mutation date parameter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2020-01-01 00:00:00"
                        }
                    },
                    {
                        "name": "end_mutation_date",
                        "in": "query",
                        "description": "End mutation date parameter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2020-01-01 00:00:00"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/employee/{employeeId}/work-unit-mutation/list-search": {
            "post": {
                "tags": [
                    "Work Unit Mutation"
                ],
                "summary": "Get list of work unit mutation with query search",
                "description": "Get list of work unit mutation with query search",
                "operationId": "postWorkUnitMutationListSearch",
                "parameters": [
                    {
                        "name": "employeeId",
                        "in": "path",
                        "description": "Employee id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "query": {
                                        "description": "Query property (Keyword would be filter note)",
                                        "type": "string",
                                        "example": "keyword"
                                    },
                                    "work_unit_id": {
                                        "$ref": "#/components/schemas/WorkUnitMutationEloquent/properties/work_unit_id"
                                    },
                                    "start_mutation_date": {
                                        "description": "Start mutation date parameter",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    },
                                    "end_mutation_date": {
                                        "description": "End mutation date parameter",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/employee/{employeeId}/work-unit-mutation/page-search": {
            "post": {
                "tags": [
                    "Work Unit Mutation"
                ],
                "summary": "Get list of work unit mutation with query and page parameter search",
                "description": "Get list of work unit mutation with query and page parameter search",
                "operationId": "postWorkUnitMutationPageSearch",
                "parameters": [
                    {
                        "name": "employeeId",
                        "in": "path",
                        "description": "Employee id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "query": {
                                                "description": "Query property (Keyword would be filter note)",
                                                "properties": {
                                                    "value": {
                                                        "type": "string",
                                                        "example": "keyword"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "work_unit_id": {
                                                "$ref": "#/components/schemas/WorkUnitMutationEloquent/properties/work_unit_id"
                                            },
                                            "start_mutation_date": {
                                                "description": "Start mutation date property",
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2020-01-01 00:00:00"
                                            },
                                            "end_mutation_date": {
                                                "description": "End mutation date property",
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2020-01-01 00:00:00"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/PagedSearchParameter"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/employee/{employeeId}/work-unit-mutation/{id}": {
            "get": {
                "tags": [
                    "Work Unit Mutation"
                ],
                "summary": "Get detail work unit mutation",
                "description": "Get detail work unit mutation",
                "operationId": "getWorkUnitMutationDetail",
                "parameters": [
                    {
                        "name": "employeeId",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Work unit mutation parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/employee/{id}/work-unit-mutation": {
            "put": {
                "tags": [
                    "Work Unit Mutation"
                ],
                "summary": "Update work unit mutation",
                "description": "Update work unit mutation",
                "operationId": "putWorkUnitMutationUpdate",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Employee id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateWorkUnitMutationEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "Work Unit Mutation"
                ],
                "summary": "Create work unit mutation",
                "description": "Create work unit mutation",
                "operationId": "postWorkUnitMutationCreate",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Employee id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateWorkUnitMutationEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/employee/{id}/work-unit-mutation/delete/{workUnitMutationId}": {
            "delete": {
                "tags": [
                    "Work Unit Mutation"
                ],
                "summary": "Delete work unit mutation",
                "description": "Delete work unit mutation",
                "operationId": "deleteWorkUnitMutation",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Employee id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "workUnitMutationId",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/employee/{id}/work-unit-mutations": {
            "delete": {
                "tags": [
                    "Work Unit Mutation"
                ],
                "summary": "Delete bulk work unit mutation",
                "description": "Delete bulk work unit mutation",
                "operationId": "deleteBulkWorkUnitMutation",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Employee id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ids": {
                                        "description": "Ids property",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "format": "int64",
                                            "example": 1
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/employee/{id}/work-unit-mutations/export": {
            "post": {
                "tags": [
                    "Work Unit Mutation"
                ],
                "summary": "Export list of work unit mutation",
                "description": "Export list of work unit mutation",
                "operationId": "postWorkUnitMutationListSearchExport",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Employee id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "export": {
                                        "description": "Export property",
                                        "type": "string",
                                        "default": "",
                                        "enum": [
                                            "excel",
                                            "pdf"
                                        ],
                                        "example": "excel"
                                    },
                                    "query": {
                                        "description": "Query property (Keyword would be filter note)",
                                        "type": "string",
                                        "example": "keyword"
                                    },
                                    "work_unit_id": {
                                        "$ref": "#/components/schemas/WorkUnitMutationEloquent/properties/work_unit_id"
                                    },
                                    "start_mutation_date": {
                                        "description": "Start mutation date parameter",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    },
                                    "end_mutation_date": {
                                        "description": "End mutation date parameter",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/payroll-balance/list": {
            "get": {
                "tags": [
                    "Payroll Balance"
                ],
                "summary": "Get list of payroll balance",
                "description": "Return payroll balances",
                "operationId": "getPayrollBalanceList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/payroll-balance/list-search": {
            "post": {
                "tags": [
                    "Payroll Balance"
                ],
                "summary": "Get list of payroll balance by query parameter",
                "description": "Return payroll balances",
                "operationId": "postPayrollBalanceListSearch",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "query": {
                                        "description": "Filter (name, slug, description) of payroll balance by query parameter",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/payroll-balance/page-search": {
            "post": {
                "tags": [
                    "Payroll Balance"
                ],
                "summary": "Get list of payroll balance by search parameter",
                "description": "Return payroll balances",
                "operationId": "postPayrollBalancePageSearch",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "pagination[page]",
                                    "pagination[perpage]",
                                    "sort[sort]",
                                    "sort[field]"
                                ],
                                "properties": {
                                    "search": {
                                        "description": "Filter (name, slug, description) of payroll balance by search parameter",
                                        "type": "string"
                                    },
                                    "pagination[page]": {
                                        "description": "Position of page",
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "pagination[perpage]": {
                                        "description": "Total of row per page",
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "sort[sort]": {
                                        "description": "Type of sort. ASC or DESC",
                                        "type": "string"
                                    },
                                    "sort[field]": {
                                        "description": "Field name to be filter",
                                        "type": "string"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "pagination[page]": 10,
                                    "pagination[perpage]": 10,
                                    "sort[sort]": "DESC",
                                    "sort[field]": "name"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/payroll-balance/detail/{id}": {
            "get": {
                "tags": [
                    "Payroll Balance"
                ],
                "summary": "Get detail payroll balance by id",
                "description": "Return payroll balance",
                "operationId": "getPayrollBalanceDetail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Filter id of payroll balance by id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/payroll-balance/create": {
            "post": {
                "tags": [
                    "Payroll Balance"
                ],
                "summary": "Create payroll balance",
                "description": "Return id of payroll balance created",
                "operationId": "postPayrollBalanceCreate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "name",
                                    "slug"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Name of payroll balance",
                                        "type": "string"
                                    },
                                    "slug": {
                                        "description": "Slug of payroll balance",
                                        "type": "string"
                                    },
                                    "description": {
                                        "description": "Description of payroll balance",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/payroll-balance/update": {
            "put": {
                "tags": [
                    "Payroll Balance"
                ],
                "summary": "Update payroll balance",
                "description": "Return object of payroll balance updated",
                "operationId": "putPayrollBalanceUpdate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "id",
                                    "name",
                                    "slug"
                                ],
                                "properties": {
                                    "id": {
                                        "description": "ID of payroll balance",
                                        "type": "integer",
                                        "format": "int64"
                                    },
                                    "name": {
                                        "description": "Name of payroll balance",
                                        "type": "string"
                                    },
                                    "slug": {
                                        "description": "Slug of payroll balance",
                                        "type": "string"
                                    },
                                    "description": {
                                        "description": "Description of payroll balance",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/payroll-balance/delete/{id}": {
            "delete": {
                "tags": [
                    "Payroll Balance"
                ],
                "summary": "Delete payroll balance",
                "description": "Return object of payroll balance deleted",
                "operationId": "deletePayrollBalance",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of payroll balance",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/payroll-balance/slug/{name}": {
            "get": {
                "tags": [
                    "Payroll Balance"
                ],
                "summary": "Get slug of payroll balance",
                "description": "Return slug of payroll balance",
                "operationId": "getPayrollBalanceSlug",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name of payroll balance",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/payroll-balance-feed/list": {
            "get": {
                "tags": [
                    "Payroll Balance Feed"
                ],
                "summary": "Get list of payroll balance feed",
                "description": "Return payroll balance feeds",
                "operationId": "getPayrollBalanceFeedList",
                "parameters": [
                    {
                        "name": "formula_category_id",
                        "in": "query",
                        "description": "Filter formula_category_id of payroll balance feed category by formula_category_id parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/payroll-balance-feed/list-search": {
            "post": {
                "tags": [
                    "Payroll Balance Feed"
                ],
                "summary": "Get list of payroll balance feed by query parameter",
                "description": "Return payroll balance feeds",
                "operationId": "postPayrollBalanceFeedListSearch",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "query": {
                                        "description": "Filter (name, slug, description) of payroll balance feed by query parameter",
                                        "type": "string"
                                    },
                                    "formula_category_id": {
                                        "description": "Filter formula_category_id of payroll balance feed category by formula_category_id parameter",
                                        "type": "integer",
                                        "format": "int32"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/payroll-balance-feed/page-search": {
            "post": {
                "tags": [
                    "Payroll Balance Feed"
                ],
                "summary": "Get list of payroll balance feed by search parameter",
                "description": "Return payroll balance feeds",
                "operationId": "postPayrollBalanceFeedPageSearch",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "pagination[page]",
                                    "pagination[perpage]",
                                    "sort[sort]",
                                    "sort[field]"
                                ],
                                "properties": {
                                    "search": {
                                        "description": "Filter (name, slug, description) of payroll balance feed by search parameter",
                                        "type": "string"
                                    },
                                    "formula_category_id": {
                                        "description": "Filter formula_category_id of payroll balance feed category by formula_category_id parameter",
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "pagination[page]": {
                                        "description": "Position of page",
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "pagination[perpage]": {
                                        "description": "Total of row per page",
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "sort[sort]": {
                                        "description": "Type of sort. ASC or DESC",
                                        "type": "string"
                                    },
                                    "sort[field]": {
                                        "description": "Field name to be filter",
                                        "type": "string"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "pagination[page]": 10,
                                    "pagination[perpage]": 10,
                                    "sort[sort]": "DESC",
                                    "sort[field]": "name"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/payroll-balance-feed/detail/{id}": {
            "get": {
                "tags": [
                    "Payroll Balance Feed"
                ],
                "summary": "Get detail formula by id",
                "description": "Return formula",
                "operationId": "getPayrollBalanceFeedDetail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Filter id of payroll balance feed by id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/payroll-balance-feed/create": {
            "post": {
                "tags": [
                    "Payroll Balance Feed"
                ],
                "summary": "Create formula",
                "description": "Return id of payroll balance feed created",
                "operationId": "postPayrollBalanceFeedCreate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "formula_category_id",
                                    "name",
                                    "type",
                                    "definition"
                                ],
                                "properties": {
                                    "formula_category_id": {
                                        "description": "Formula category id of payroll balance feed",
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "name": {
                                        "description": "Name of payroll balance feed",
                                        "type": "string"
                                    },
                                    "type": {
                                        "description": "Type of payroll balance feed",
                                        "type": "string"
                                    },
                                    "definition": {
                                        "description": "Definition of payroll balance feed",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/payroll-balance-feed/update": {
            "put": {
                "tags": [
                    "Payroll Balance Feed"
                ],
                "summary": "Update formula",
                "description": "Return object of payroll balance feed updated",
                "operationId": "putPayrollBalanceFeedUpdate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "id",
                                    "formula_category_id",
                                    "name",
                                    "type",
                                    "definition"
                                ],
                                "properties": {
                                    "id": {
                                        "description": "ID of payroll balance feed",
                                        "type": "integer",
                                        "format": "int64"
                                    },
                                    "formula_category_id": {
                                        "description": "Formula category id of payroll balance feed",
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "name": {
                                        "description": "Name of payroll balance feed",
                                        "type": "string"
                                    },
                                    "type": {
                                        "description": "Type of payroll balance feed",
                                        "type": "string"
                                    },
                                    "definition": {
                                        "description": "Definition of payroll balance feed",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/payroll-balance-feed/delete/{id}": {
            "delete": {
                "tags": [
                    "Payroll Balance Feed"
                ],
                "summary": "Delete formula",
                "description": "Return object of payroll balance feed deleted",
                "operationId": "deletePayrollBalanceFeed",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of payroll balance feed",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/payroll-batch/list": {
            "get": {
                "tags": [
                    "Payroll Batch"
                ],
                "summary": "Get list of payroll batch",
                "description": "Return payroll batches",
                "operationId": "getPayrollBatchList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/payroll-batch/list-search": {
            "post": {
                "tags": [
                    "Payroll Batch"
                ],
                "summary": "Get list of payroll batch by query parameter",
                "description": "Return payroll batches",
                "operationId": "postPayrollBatchListSearch",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "query": {
                                        "description": "Filter (name, slug, description) of payroll batch by query parameter",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/payroll-batch/page-search": {
            "post": {
                "tags": [
                    "Payroll Batch"
                ],
                "summary": "Get list of payroll batch by search parameter",
                "description": "Return payroll batches",
                "operationId": "postPayrollBatchPageSearch",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "pagination[page]",
                                    "pagination[perpage]",
                                    "sort[sort]",
                                    "sort[field]"
                                ],
                                "properties": {
                                    "search": {
                                        "description": "Filter (name, slug, description) of payroll batch by search parameter",
                                        "type": "string"
                                    },
                                    "pagination[page]": {
                                        "description": "Position of page",
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "pagination[perpage]": {
                                        "description": "Total of row per page",
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "sort[sort]": {
                                        "description": "Type of sort. ASC or DESC",
                                        "type": "string"
                                    },
                                    "sort[field]": {
                                        "description": "Field name to be filter",
                                        "type": "string"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "pagination[page]": 10,
                                    "pagination[perpage]": 10,
                                    "sort[sort]": "DESC",
                                    "sort[field]": "name"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/payroll-batch/detail/{id}": {
            "get": {
                "tags": [
                    "Payroll Batch"
                ],
                "summary": "Get detail payroll batch by id",
                "description": "Return payroll batch",
                "operationId": "getPayrollBatchDetail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Filter id of payroll batch by id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/payroll-batch/create": {
            "post": {
                "tags": [
                    "Payroll Batch"
                ],
                "summary": "Create payroll batch",
                "description": "Return id of payroll batch created",
                "operationId": "postPayrollBatchCreate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "name",
                                    "slug"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Name of payroll batch",
                                        "type": "string"
                                    },
                                    "slug": {
                                        "description": "Slug of payroll batch",
                                        "type": "string"
                                    },
                                    "description": {
                                        "description": "Description of payroll batch",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/payroll-batch/update": {
            "put": {
                "tags": [
                    "Payroll Batch"
                ],
                "summary": "Update payroll batch",
                "description": "Return object of payroll batch updated",
                "operationId": "putPayrollBatchUpdate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "id",
                                    "name",
                                    "slug"
                                ],
                                "properties": {
                                    "id": {
                                        "description": "ID of payroll batch",
                                        "type": "integer",
                                        "format": "int64"
                                    },
                                    "name": {
                                        "description": "Name of payroll batch",
                                        "type": "string"
                                    },
                                    "slug": {
                                        "description": "Slug of payroll batch",
                                        "type": "string"
                                    },
                                    "description": {
                                        "description": "Description of payroll batch",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/payroll-batch/delete/{id}": {
            "delete": {
                "tags": [
                    "Payroll Batch"
                ],
                "summary": "Delete payroll batch",
                "description": "Return object of payroll batch deleted",
                "operationId": "deletePayrollBatch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of payroll batch",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/payroll-batch/slug/{name}": {
            "get": {
                "tags": [
                    "Payroll Batch"
                ],
                "summary": "Get slug of payroll batch",
                "description": "Return slug of payroll batch",
                "operationId": "getPayrollBatchSlug",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name of payroll batch",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/payroll-process-type/list": {
            "get": {
                "tags": [
                    "Payroll Process Type"
                ],
                "summary": "Get list of payroll process type",
                "description": "Return payroll process types",
                "operationId": "getPayrollProcessTypeList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/payroll-process-type/list-search": {
            "post": {
                "tags": [
                    "Payroll Process Type"
                ],
                "summary": "Get list of payroll process type by query parameter",
                "description": "Return payroll process types",
                "operationId": "postPayrollProcessTypeListSearch",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "query": {
                                        "description": "Filter (name, slug, description) of payroll process type by query parameter",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/payroll-process-type/page-search": {
            "post": {
                "tags": [
                    "Payroll Process Type"
                ],
                "summary": "Get list of payroll process type by search parameter",
                "description": "Return payroll process types",
                "operationId": "postPayrollProcessTypePageSearch",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "pagination[page]",
                                    "pagination[perpage]",
                                    "sort[sort]",
                                    "sort[field]"
                                ],
                                "properties": {
                                    "search": {
                                        "description": "Filter (name, slug, description) of payroll process type by search parameter",
                                        "type": "string"
                                    },
                                    "pagination[page]": {
                                        "description": "Position of page",
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "pagination[perpage]": {
                                        "description": "Total of row per page",
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "sort[sort]": {
                                        "description": "Type of sort. ASC or DESC",
                                        "type": "string"
                                    },
                                    "sort[field]": {
                                        "description": "Field name to be filter",
                                        "type": "string"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "pagination[page]": 10,
                                    "pagination[perpage]": 10,
                                    "sort[sort]": "DESC",
                                    "sort[field]": "name"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/payroll-process-type/detail/{id}": {
            "get": {
                "tags": [
                    "Payroll Process Type"
                ],
                "summary": "Get detail payroll process type by id",
                "description": "Return payroll process type",
                "operationId": "getPayrollProcessTypeDetail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Filter id of payroll process type by id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/payroll-process-type/create": {
            "post": {
                "tags": [
                    "Payroll Process Type"
                ],
                "summary": "Create payroll process type",
                "description": "Return id of payroll process type created",
                "operationId": "postPayrollProcessTypeCreate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "name",
                                    "slug"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Name of payroll process type",
                                        "type": "string"
                                    },
                                    "slug": {
                                        "description": "Slug of payroll process type",
                                        "type": "string"
                                    },
                                    "description": {
                                        "description": "Description of payroll process type",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/payroll-process-type/update": {
            "put": {
                "tags": [
                    "Payroll Process Type"
                ],
                "summary": "Update payroll process type",
                "description": "Return object of payroll process type updated",
                "operationId": "putPayrollProcessTypeUpdate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "id",
                                    "name",
                                    "slug"
                                ],
                                "properties": {
                                    "id": {
                                        "description": "ID of payroll process type",
                                        "type": "integer",
                                        "format": "int64"
                                    },
                                    "name": {
                                        "description": "Name of payroll process type",
                                        "type": "string"
                                    },
                                    "slug": {
                                        "description": "Slug of payroll process type",
                                        "type": "string"
                                    },
                                    "description": {
                                        "description": "Description of payroll process type",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/payroll-process-type/delete/{id}": {
            "delete": {
                "tags": [
                    "Payroll Process Type"
                ],
                "summary": "Delete payroll process type",
                "description": "Return object of payroll process type deleted",
                "operationId": "deletePayrollProcessType",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of payroll process type",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/payroll-process-type/slug/{name}": {
            "get": {
                "tags": [
                    "Payroll Process Type"
                ],
                "summary": "Get slug of payroll process type",
                "description": "Return slug of payroll process type",
                "operationId": "getPayrollProcessTypeSlug",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name of payroll process type",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/child/list": {
            "get": {
                "tags": [
                    "Child"
                ],
                "summary": "Get list of child",
                "description": "Get list of child",
                "operationId": "getChildList",
                "parameters": [
                    {
                        "name": "company_id",
                        "in": "query",
                        "description": "Company id parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "employee_id",
                        "in": "query",
                        "description": "Employee id parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "gender_id",
                        "in": "query",
                        "description": "Gender id parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "start_birth_date",
                        "in": "query",
                        "description": "Start birth date parameter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2020-01-01 00:00:00"
                        }
                    },
                    {
                        "name": "end_birth_date",
                        "in": "query",
                        "description": "End birth date parameter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2020-01-01 00:00:00"
                        }
                    },
                    {
                        "name": "start_bpjs_kesehatan_date",
                        "in": "query",
                        "description": "Start bpjs kesehatan date parameter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2020-01-01 00:00:00"
                        }
                    },
                    {
                        "name": "end_bpjs_kesehatan_date",
                        "in": "query",
                        "description": "End bpjs kesehatan date parameter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2020-01-01 00:00:00"
                        }
                    },
                    {
                        "name": "bpjs_kesehatan_class",
                        "in": "query",
                        "description": "BPJS kesehatan class parameter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "",
                            "enum": [
                                "I",
                                "II",
                                "III"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/child/list-search": {
            "post": {
                "tags": [
                    "Child"
                ],
                "summary": "Get list of child with query search",
                "description": "Get list of child with query search",
                "operationId": "postChildListSearch",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "query": {
                                        "description": "Query property (Keyword would be filter full_name, nick_name, birth_place and bpjs_kesehatan_number)",
                                        "type": "string",
                                        "example": "keyword"
                                    },
                                    "company_id": {
                                        "description": "Company id property",
                                        "type": "integer",
                                        "format": "int64",
                                        "example": 1
                                    },
                                    "employee_id": {
                                        "$ref": "#/components/schemas/ChildEloquent/properties/employee_id"
                                    },
                                    "gender_id": {
                                        "$ref": "#/components/schemas/ChildEloquent/properties/gender_id"
                                    },
                                    "start_birth_date": {
                                        "description": "Start birth date property",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    },
                                    "end_birth_date": {
                                        "description": "End birth date property",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    },
                                    "start_bpjs_kesehatan_date": {
                                        "description": "Start bpjs kesehatan date property",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    },
                                    "end_bpjs_kesehatan_date": {
                                        "description": "End bpjs kesehatan date property",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    },
                                    "bpjs_kesehatan_class": {
                                        "$ref": "#/components/schemas/ChildEloquent/properties/bpjs_kesehatan_class"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/child/page-search": {
            "post": {
                "tags": [
                    "Child"
                ],
                "summary": "Get list of child with query and page parameter search",
                "description": "Get list of child with query and page parameter search",
                "operationId": "postChildPageSearch",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "query": {
                                                "description": "Query property (Keyword would be filter full_name, nick_name, birth_place and bpjs_kesehatan_number)",
                                                "properties": {
                                                    "value": {
                                                        "type": "string",
                                                        "example": "keyword"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "company_id": {
                                                "description": "Company id property",
                                                "type": "integer",
                                                "format": "int64",
                                                "example": 1
                                            },
                                            "employee_id": {
                                                "$ref": "#/components/schemas/ChildEloquent/properties/employee_id"
                                            },
                                            "gender_id": {
                                                "$ref": "#/components/schemas/ChildEloquent/properties/gender_id"
                                            },
                                            "start_birth_date": {
                                                "description": "Start birth date property",
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2020-01-01 00:00:00"
                                            },
                                            "end_birth_date": {
                                                "description": "End birth date property",
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2020-01-01 00:00:00"
                                            },
                                            "start_bpjs_kesehatan_date": {
                                                "description": "Start bpjs kesehatan date property",
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2020-01-01 00:00:00"
                                            },
                                            "end_bpjs_kesehatan_date": {
                                                "description": "End bpjs kesehatan date property",
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2020-01-01 00:00:00"
                                            },
                                            "bpjs_kesehatan_class": {
                                                "$ref": "#/components/schemas/ChildEloquent/properties/bpjs_kesehatan_class"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/PagedSearchParameter"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/child/detail/{id}": {
            "get": {
                "tags": [
                    "Child"
                ],
                "summary": "Get detail child",
                "description": "Get detail child",
                "operationId": "getChildDetail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/child/create": {
            "post": {
                "tags": [
                    "Child"
                ],
                "summary": "Create child",
                "description": "Create child",
                "operationId": "postChildCreate",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateChildEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/child/update": {
            "put": {
                "tags": [
                    "Child"
                ],
                "summary": "Update child",
                "description": "Update child",
                "operationId": "putChildUpdate",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateChildEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/child/delete/{id}": {
            "delete": {
                "tags": [
                    "Child"
                ],
                "summary": "Delete child",
                "description": "Delete child",
                "operationId": "deleteChild",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/child/deletes": {
            "delete": {
                "tags": [
                    "Child"
                ],
                "summary": "Delete bulk child",
                "description": "Delete bulk child",
                "operationId": "deleteBulkChild",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ids": {
                                        "description": "Ids property",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "format": "int64",
                                            "example": 1
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/child/list-search/export": {
            "post": {
                "tags": [
                    "Child"
                ],
                "summary": "Export list of child",
                "description": "Export list of child",
                "operationId": "postChildListSearchExport",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "export": {
                                        "description": "Export property",
                                        "type": "string",
                                        "default": "",
                                        "enum": [
                                            "excel",
                                            "pdf"
                                        ],
                                        "example": "excel"
                                    },
                                    "company_id": {
                                        "description": "Company id property",
                                        "type": "integer",
                                        "format": "int64",
                                        "example": 1
                                    },
                                    "employee_id": {
                                        "$ref": "#/components/schemas/ChildEloquent/properties/employee_id"
                                    },
                                    "gender_id": {
                                        "$ref": "#/components/schemas/ChildEloquent/properties/gender_id"
                                    },
                                    "start_birth_date": {
                                        "description": "Start birth date property",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    },
                                    "end_birth_date": {
                                        "description": "End birth date property",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    },
                                    "start_bpjs_kesehatan_date": {
                                        "description": "Start bpjs kesehatan date property",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    },
                                    "end_bpjs_kesehatan_date": {
                                        "description": "End bpjs kesehatan date property",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    },
                                    "bpjs_kesehatan_class": {
                                        "$ref": "#/components/schemas/ChildEloquent/properties/bpjs_kesehatan_class"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/employee/list": {
            "get": {
                "tags": [
                    "Employee"
                ],
                "summary": "Get list of employee",
                "description": "Get list of employee",
                "operationId": "getEmployeeList",
                "parameters": [
                    {
                        "name": "company_id",
                        "in": "query",
                        "description": "Company id parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "gender_id",
                        "in": "query",
                        "description": "Gender id parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "religion_id",
                        "in": "query",
                        "description": "Religion id parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "start_birth_date",
                        "in": "query",
                        "description": "Start birth date parameter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2020-01-01 00:00:00"
                        }
                    },
                    {
                        "name": "end_birth_date",
                        "in": "query",
                        "description": "End birth date parameter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2020-01-01 00:00:00"
                        }
                    },
                    {
                        "name": "start_identity_expired_date",
                        "in": "query",
                        "description": "Start identity expired date parameter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2020-01-01 00:00:00"
                        }
                    },
                    {
                        "name": "end_identity_expired_date",
                        "in": "query",
                        "description": "End identity expired date parameter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2020-01-01 00:00:00"
                        }
                    },
                    {
                        "name": "start_drive_license_a_date",
                        "in": "query",
                        "description": "Start drive license a date parameter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2020-01-01 00:00:00"
                        }
                    },
                    {
                        "name": "end_drive_license_a_date",
                        "in": "query",
                        "description": "End drive license a date parameter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2020-01-01 00:00:00"
                        }
                    },
                    {
                        "name": "start_drive_license_b_date",
                        "in": "query",
                        "description": "Start drive license b date parameter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2020-01-01 00:00:00"
                        }
                    },
                    {
                        "name": "end_drive_license_b_date",
                        "in": "query",
                        "description": "End drive license b date parameter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2020-01-01 00:00:00"
                        }
                    },
                    {
                        "name": "start_drive_license_c_date",
                        "in": "query",
                        "description": "Start drive license c date parameter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2020-01-01 00:00:00"
                        }
                    },
                    {
                        "name": "end_drive_license_c_date",
                        "in": "query",
                        "description": "End drive license c date parameter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2020-01-01 00:00:00"
                        }
                    },
                    {
                        "name": "marital_status_id",
                        "in": "query",
                        "description": "Marital status id parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "mate_as",
                        "in": "query",
                        "description": "Mate as parameter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "",
                            "enum": [
                                "HUSBAND",
                                "WIFE"
                            ]
                        }
                    },
                    {
                        "name": "start_mate_birth_date",
                        "in": "query",
                        "description": "Start mate birth date parameter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2020-01-01 00:00:00"
                        }
                    },
                    {
                        "name": "end_mate_birth_date",
                        "in": "query",
                        "description": "End mate birth date parameter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2020-01-01 00:00:00"
                        }
                    },
                    {
                        "name": "office_id",
                        "in": "query",
                        "description": "Office id parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "work_area_id",
                        "in": "query",
                        "description": "Work area id parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "start_npwp_date",
                        "in": "query",
                        "description": "Start npwp date parameter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2020-01-01 00:00:00"
                        }
                    },
                    {
                        "name": "end_npwp_date",
                        "in": "query",
                        "description": "End npwp date parameter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2020-01-01 00:00:00"
                        }
                    },
                    {
                        "name": "npwp_status",
                        "in": "query",
                        "description": "NPWP status parameter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "",
                            "enum": [
                                "TK/0",
                                "TK/1",
                                "TK/2",
                                "TK/3",
                                "K/0",
                                "K/1",
                                "K/2",
                                "K/3",
                                "KI/0",
                                "KI/1",
                                "KI/2",
                                "KI/3"
                            ]
                        }
                    },
                    {
                        "name": "start_bpjs_tenaga_kerja_date",
                        "in": "query",
                        "description": "Start bpjs tenaga kerja date parameter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2020-01-01 00:00:00"
                        }
                    },
                    {
                        "name": "end_bpjs_tenaga_kerja_date",
                        "in": "query",
                        "description": "End bpjs tenaga kerja date parameter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2020-01-01 00:00:00"
                        }
                    },
                    {
                        "name": "bpjs_tenaga_kerja_class",
                        "in": "query",
                        "description": "BPJS tenaga kerja class parameter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "",
                            "enum": [
                                "I",
                                "II",
                                "III"
                            ]
                        }
                    },
                    {
                        "name": "start_bpjs_kesehatan_date",
                        "in": "query",
                        "description": "Start bpjs kesehatan date parameter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2020-01-01 00:00:00"
                        }
                    },
                    {
                        "name": "end_bpjs_kesehatan_date",
                        "in": "query",
                        "description": "End bpjs kesehatan date parameter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2020-01-01 00:00:00"
                        }
                    },
                    {
                        "name": "bpjs_kesehatan_class",
                        "in": "query",
                        "description": "BPJS kesehatan class parameter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "",
                            "enum": [
                                "I",
                                "II",
                                "III"
                            ]
                        }
                    },
                    {
                        "name": "start_mate_bpjs_kesehatan_date",
                        "in": "query",
                        "description": "Start mate bpjs kesehatan date parameter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2020-01-01 00:00:00"
                        }
                    },
                    {
                        "name": "end_mate_bpjs_kesehatan_date",
                        "in": "query",
                        "description": "End mate bpjs kesehatan date parameter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2020-01-01 00:00:00"
                        }
                    },
                    {
                        "name": "mate_bpjs_kesehatan_class",
                        "in": "query",
                        "description": "Mate bpjs kesehatan class parameter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "",
                            "enum": [
                                "I",
                                "II",
                                "III"
                            ]
                        }
                    },
                    {
                        "name": "bank_id",
                        "in": "query",
                        "description": "Bank id parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "start_join_date",
                        "in": "query",
                        "description": "Start birth date parameter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2020-01-01 00:00:00"
                        }
                    },
                    {
                        "name": "end_join_date",
                        "in": "query",
                        "description": "End birth date parameter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2020-01-01 00:00:00"
                        }
                    },
                    {
                        "name": "work_status",
                        "in": "query",
                        "description": "Work status parameter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "",
                            "enum": [
                                "FULL_TIME",
                                "PART_TIME"
                            ]
                        }
                    },
                    {
                        "name": "work_type",
                        "in": "query",
                        "description": "Work type parameter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "",
                            "enum": [
                                "PERMANENT",
                                "CONTRACT"
                            ]
                        }
                    },
                    {
                        "name": "degree_id",
                        "in": "query",
                        "description": "Degree id parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "major_id",
                        "in": "query",
                        "description": "Major id parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "competence_id",
                        "in": "query",
                        "description": "Competence id parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "position_id",
                        "in": "query",
                        "description": "Position id parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "project_id",
                        "in": "query",
                        "description": "Project id parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "work_unit_id",
                        "in": "query",
                        "description": "Work unit id parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/employee/terminated/list/": {
            "get": {
                "tags": [
                    "Employee"
                ],
                "summary": "Get list of terminated employee",
                "description": "Get list of terminated employee",
                "operationId": "getEmployeeTerminatedList",
                "parameters": [
                    {
                        "name": "company_id",
                        "in": "query",
                        "description": "Company id parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "office_id",
                        "in": "query",
                        "description": "Office id parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "start_termination_date",
                        "in": "query",
                        "description": "Start termination date parameter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2020-01-01 00:00:00"
                        }
                    },
                    {
                        "name": "end_termination_date",
                        "in": "query",
                        "description": "End termination date parameter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2020-01-01 00:00:00"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/employee/birth-day/list": {
            "get": {
                "tags": [
                    "Employee"
                ],
                "summary": "Get list of birth day employee",
                "description": "Get list of birth day employee",
                "operationId": "getEmployeeBirthDayList",
                "parameters": [
                    {
                        "name": "company_id",
                        "in": "query",
                        "description": "Company id parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "office_id",
                        "in": "query",
                        "description": "Office id parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "month",
                        "in": "query",
                        "description": "Month parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/employee/list-search": {
            "post": {
                "tags": [
                    "Employee"
                ],
                "summary": "Get list of employee with query search",
                "description": "Get list of employee with query search",
                "operationId": "postEmployeeListSearch",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "query": {
                                        "description": "Query property (Keyword would be filter nik, full name, nick name, birth place, address, phone, mobile, email, identity number, identity address, drive license a number, drive license b number, drive license c number, npwp number, bpjs tenaga kerja number, bpjs kesehatan number, mate bpjs kesehatan number, dplk number, collective number, account number)",
                                        "type": "string"
                                    },
                                    "company_id": {
                                        "$ref": "#/components/schemas/EmployeeEloquent/properties/company_id"
                                    },
                                    "gender_id": {
                                        "$ref": "#/components/schemas/EmployeeEloquent/properties/gender_id"
                                    },
                                    "religion_id": {
                                        "$ref": "#/components/schemas/EmployeeEloquent/properties/religion_id"
                                    },
                                    "start_birth_date": {
                                        "description": "Start birth date property",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    },
                                    "end_birth_date": {
                                        "description": "End birth date property",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    },
                                    "start_identity_expired_date": {
                                        "description": "Start identity expired date property",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    },
                                    "end_identity_expired_date": {
                                        "description": "End identity expired date property",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    },
                                    "start_drive_license_a_date": {
                                        "description": "Start drive license a date property",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    },
                                    "end_drive_license_a_date": {
                                        "description": "End drive license a date property",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    },
                                    "start_drive_license_b_date": {
                                        "description": "Start drive license b date property",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    },
                                    "end_drive_license_b_date": {
                                        "description": "End drive license b date property",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    },
                                    "start_drive_license_c_date": {
                                        "description": "Start drive license c date property",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    },
                                    "end_drive_license_c_date": {
                                        "description": "End drive license c date property",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    },
                                    "marital_status_id": {
                                        "$ref": "#/components/schemas/EmployeeEloquent/properties/marital_status_id"
                                    },
                                    "mate_as": {
                                        "$ref": "#/components/schemas/EmployeeEloquent/properties/mate_as"
                                    },
                                    "start_mate_birth_date": {
                                        "description": "Start mate birth date property",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    },
                                    "end_mate_birth_date": {
                                        "description": "End mate birth date property",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    },
                                    "office_id": {
                                        "$ref": "#/components/schemas/EmployeeEloquent/properties/office_id"
                                    },
                                    "work_area_id": {
                                        "$ref": "#/components/schemas/EmployeeEloquent/properties/work_area_id"
                                    },
                                    "start_npwp_date": {
                                        "description": "Start npwp date property",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    },
                                    "end_npwp_date": {
                                        "description": "End npwp date property",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    },
                                    "npwp_status": {
                                        "$ref": "#/components/schemas/EmployeeEloquent/properties/npwp_status"
                                    },
                                    "start_bpjs_tenaga_kerja_date": {
                                        "description": "Start bpjs tenaga kerja date property",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    },
                                    "end_bpjs_tenaga_kerja_date": {
                                        "description": "End bpjs tenaga kerja date property",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    },
                                    "bpjs_tenaga_kerja_class": {
                                        "$ref": "#/components/schemas/EmployeeEloquent/properties/bpjs_tenaga_kerja_class"
                                    },
                                    "start_bpjs_kesehatan_date": {
                                        "description": "Start bpjs kesehatan date property",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    },
                                    "end_bpjs_kesehatan_date": {
                                        "description": "End bpjs kesehatan date property",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    },
                                    "bpjs_kesehatan_class": {
                                        "$ref": "#/components/schemas/EmployeeEloquent/properties/bpjs_kesehatan_class"
                                    },
                                    "start_mate_bpjs_kesehatan_date": {
                                        "description": "Start mate bpjs kesehatan date property",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    },
                                    "end_mate_bpjs_kesehatan_date": {
                                        "description": "End mate bpjs kesehatan date property",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    },
                                    "mate_bpjs_kesehatan_class": {
                                        "$ref": "#/components/schemas/EmployeeEloquent/properties/mate_bpjs_kesehatan_class"
                                    },
                                    "bank_id": {
                                        "$ref": "#/components/schemas/EmployeeEloquent/properties/bank_id"
                                    },
                                    "start_join_date": {
                                        "description": "Start join date property",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    },
                                    "end_join_date": {
                                        "description": "End join date property",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    },
                                    "work_status": {
                                        "$ref": "#/components/schemas/EmployeeEloquent/properties/work_status"
                                    },
                                    "work_type": {
                                        "$ref": "#/components/schemas/EmployeeEloquent/properties/work_type"
                                    },
                                    "degree_id": {
                                        "$ref": "#/components/schemas/FormalEducationHistoryEloquent/properties/degree_id"
                                    },
                                    "major_id": {
                                        "$ref": "#/components/schemas/FormalEducationHistoryEloquent/properties/major_id"
                                    },
                                    "competence_id": {
                                        "$ref": "#/components/schemas/WorkCompetenceEloquent/properties/competence_id"
                                    },
                                    "position_id": {
                                        "$ref": "#/components/schemas/PositionMutationEloquent/properties/position_id"
                                    },
                                    "project_id": {
                                        "$ref": "#/components/schemas/ProjectMutationEloquent/properties/project_id"
                                    },
                                    "work_unit_id": {
                                        "$ref": "#/components/schemas/WorkUnitMutationEloquent/properties/work_unit_id"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/employee/terminated/list-search": {
            "post": {
                "tags": [
                    "Employee"
                ],
                "summary": "Get list of terminated employee with query search",
                "description": "Get list of terminated employee with query search",
                "operationId": "postEmployeeTerminatedListSearch",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "query": {
                                        "description": "Query property (Keyword would be filter nik, full name, nick name, birth place, address, phone, mobile, email, identity number, identity address, drive license a number, drive license b number, drive license c number, npwp number, bpjs tenaga kerja number, bpjs kesehatan number, mate bpjs kesehatan number, dplk number, collective number, account number)",
                                        "type": "string"
                                    },
                                    "company_id": {
                                        "$ref": "#/components/schemas/EmployeeEloquent/properties/company_id"
                                    },
                                    "office_id": {
                                        "$ref": "#/components/schemas/EmployeeEloquent/properties/office_id"
                                    },
                                    "start_termination_date": {
                                        "description": "Start termination date parameter",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    },
                                    "end_termination_date": {
                                        "description": "End termination date parameter",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/employee/birth-day/list-search": {
            "post": {
                "tags": [
                    "Employee"
                ],
                "summary": "Get list of birth day employee with query search",
                "description": "Get list of birth day employee with query search",
                "operationId": "postEmployeeBirthDayListSearch",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "query": {
                                        "description": "Query property (Keyword would be filter nik, full name, nick name, birth place, address, phone, mobile, email, identity number, identity address, drive license a number, drive license b number, drive license c number, npwp number, bpjs tenaga kerja number, bpjs kesehatan number, mate bpjs kesehatan number, dplk number, collective number, account number)",
                                        "type": "string"
                                    },
                                    "company_id": {
                                        "$ref": "#/components/schemas/EmployeeEloquent/properties/company_id"
                                    },
                                    "office_id": {
                                        "$ref": "#/components/schemas/EmployeeEloquent/properties/office_id"
                                    },
                                    "month": {
                                        "description": "Month parameter",
                                        "type": "integer",
                                        "format": "int32",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/employee/page-search": {
            "post": {
                "tags": [
                    "Employee"
                ],
                "summary": "Get list of employee with query and page parameter search",
                "description": "Get list of employee with query and page parameter search",
                "operationId": "postEmployeePageSearch",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "query": {
                                                "description": "Query property (Keyword would be filter nik, full name, nick name, birth place, address, phone, mobile, email, identity number, identity address, drive license a number, drive license b number, drive license c number, npwp number, bpjs tenaga kerja number, bpjs kesehatan number, mate bpjs kesehatan number, dplk number, collective number, account number)",
                                                "properties": {
                                                    "value": {
                                                        "type": "string",
                                                        "example": "keyword"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "company_id": {
                                                "$ref": "#/components/schemas/EmployeeEloquent/properties/company_id"
                                            },
                                            "gender_id": {
                                                "$ref": "#/components/schemas/EmployeeEloquent/properties/gender_id"
                                            },
                                            "religion_id": {
                                                "$ref": "#/components/schemas/EmployeeEloquent/properties/religion_id"
                                            },
                                            "start_birth_date": {
                                                "description": "Start birth date property",
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2020-01-01 00:00:00"
                                            },
                                            "end_birth_date": {
                                                "description": "End birth date property",
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2020-01-01 00:00:00"
                                            },
                                            "start_identity_expired_date": {
                                                "description": "Start identity expired date property",
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2020-01-01 00:00:00"
                                            },
                                            "end_identity_expired_date": {
                                                "description": "End identity expired date property",
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2020-01-01 00:00:00"
                                            },
                                            "start_drive_license_a_date": {
                                                "description": "Start drive license a date property",
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2020-01-01 00:00:00"
                                            },
                                            "end_drive_license_a_date": {
                                                "description": "End drive license a date property",
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2020-01-01 00:00:00"
                                            },
                                            "start_drive_license_b_date": {
                                                "description": "Start drive license b date property",
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2020-01-01 00:00:00"
                                            },
                                            "end_drive_license_b_date": {
                                                "description": "End drive license b date property",
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2020-01-01 00:00:00"
                                            },
                                            "start_drive_license_c_date": {
                                                "description": "Start drive license c date property",
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2020-01-01 00:00:00"
                                            },
                                            "end_drive_license_c_date": {
                                                "description": "End drive license c date property",
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2020-01-01 00:00:00"
                                            },
                                            "marital_status_id": {
                                                "$ref": "#/components/schemas/EmployeeEloquent/properties/marital_status_id"
                                            },
                                            "mate_as": {
                                                "$ref": "#/components/schemas/EmployeeEloquent/properties/mate_as"
                                            },
                                            "start_mate_birth_date": {
                                                "description": "Start mate birth date property",
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2020-01-01 00:00:00"
                                            },
                                            "end_mate_birth_date": {
                                                "description": "End mate birth date property",
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2020-01-01 00:00:00"
                                            },
                                            "office_id": {
                                                "$ref": "#/components/schemas/EmployeeEloquent/properties/office_id"
                                            },
                                            "work_area_id": {
                                                "$ref": "#/components/schemas/EmployeeEloquent/properties/work_area_id"
                                            },
                                            "start_npwp_date": {
                                                "description": "Start npwp date property",
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2020-01-01 00:00:00"
                                            },
                                            "end_npwp_date": {
                                                "description": "End npwp date property",
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2020-01-01 00:00:00"
                                            },
                                            "npwp_status": {
                                                "$ref": "#/components/schemas/EmployeeEloquent/properties/npwp_status"
                                            },
                                            "start_bpjs_tenaga_kerja_date": {
                                                "description": "Start bpjs tenaga kerja date property",
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2020-01-01 00:00:00"
                                            },
                                            "end_bpjs_tenaga_kerja_date": {
                                                "description": "End bpjs tenaga kerja date property",
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2020-01-01 00:00:00"
                                            },
                                            "bpjs_tenaga_kerja_class": {
                                                "$ref": "#/components/schemas/EmployeeEloquent/properties/bpjs_tenaga_kerja_class"
                                            },
                                            "start_bpjs_kesehatan_date": {
                                                "description": "Start bpjs kesehatan date property",
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2020-01-01 00:00:00"
                                            },
                                            "end_bpjs_kesehatan_date": {
                                                "description": "End bpjs kesehatan date property",
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2020-01-01 00:00:00"
                                            },
                                            "bpjs_kesehatan_class": {
                                                "$ref": "#/components/schemas/EmployeeEloquent/properties/bpjs_kesehatan_class"
                                            },
                                            "start_mate_bpjs_kesehatan_date": {
                                                "description": "Start mate bpjs kesehatan date property",
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2020-01-01 00:00:00"
                                            },
                                            "end_mate_bpjs_kesehatan_date": {
                                                "description": "End mate bpjs kesehatan date property",
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2020-01-01 00:00:00"
                                            },
                                            "mate_bpjs_kesehatan_class": {
                                                "$ref": "#/components/schemas/EmployeeEloquent/properties/mate_bpjs_kesehatan_class"
                                            },
                                            "bank_id": {
                                                "$ref": "#/components/schemas/EmployeeEloquent/properties/bank_id"
                                            },
                                            "start_join_date": {
                                                "description": "Start join date property",
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2020-01-01 00:00:00"
                                            },
                                            "end_join_date": {
                                                "description": "End join date property",
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2020-01-01 00:00:00"
                                            },
                                            "work_status": {
                                                "$ref": "#/components/schemas/EmployeeEloquent/properties/work_status"
                                            },
                                            "work_type": {
                                                "$ref": "#/components/schemas/EmployeeEloquent/properties/work_type"
                                            },
                                            "degree_id": {
                                                "$ref": "#/components/schemas/FormalEducationHistoryEloquent/properties/degree_id"
                                            },
                                            "major_id": {
                                                "$ref": "#/components/schemas/FormalEducationHistoryEloquent/properties/major_id"
                                            },
                                            "competence_id": {
                                                "$ref": "#/components/schemas/WorkCompetenceEloquent/properties/competence_id"
                                            },
                                            "position_id": {
                                                "$ref": "#/components/schemas/PositionMutationEloquent/properties/position_id"
                                            },
                                            "project_id": {
                                                "$ref": "#/components/schemas/ProjectMutationEloquent/properties/project_id"
                                            },
                                            "work_unit_id": {
                                                "$ref": "#/components/schemas/WorkUnitMutationEloquent/properties/work_unit_id"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/PagedSearchParameter"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/employee/terminated/page-search": {
            "post": {
                "tags": [
                    "Employee"
                ],
                "summary": "Get list of terminated employee with query and page parameter search",
                "description": "Get list of terminated employee with query and page parameter search",
                "operationId": "postEmployeeTerminatedPageSearch",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "query": {
                                                "description": "Query property (Keyword would be filter nik, full name, nick name, birth place, address, phone, mobile, email, identity number, identity address, drive license a number, drive license b number, drive license c number, npwp number, bpjs tenaga kerja number, bpjs kesehatan number, mate bpjs kesehatan number, dplk number, collective number, account number)",
                                                "properties": {
                                                    "value": {
                                                        "type": "string",
                                                        "example": "keyword"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "company_id": {
                                                "$ref": "#/components/schemas/EmployeeEloquent/properties/company_id"
                                            },
                                            "office_id": {
                                                "$ref": "#/components/schemas/EmployeeEloquent/properties/office_id"
                                            },
                                            "start_termination_date": {
                                                "description": "Start termination date parameter",
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2020-01-01 00:00:00"
                                            },
                                            "end_termination_date": {
                                                "description": "End termination date parameter",
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2020-01-01 00:00:00"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/PagedSearchParameter"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/employee/birth-day/page-search": {
            "post": {
                "tags": [
                    "Employee"
                ],
                "summary": "Get list of birth day employee with query and page parameter search",
                "description": "Get list of birth day employee with query and page parameter search",
                "operationId": "postEmployeeBirthDayPageSearch",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "query": {
                                                "description": "Query property (Keyword would be filter nik, full name, nick name, birth place, address, phone, mobile, email, identity number, identity address, drive license a number, drive license b number, drive license c number, npwp number, bpjs tenaga kerja number, bpjs kesehatan number, mate bpjs kesehatan number, dplk number, collective number, account number)",
                                                "properties": {
                                                    "value": {
                                                        "type": "string",
                                                        "example": "keyword"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "company_id": {
                                                "$ref": "#/components/schemas/EmployeeEloquent/properties/company_id"
                                            },
                                            "office_id": {
                                                "$ref": "#/components/schemas/EmployeeEloquent/properties/office_id"
                                            },
                                            "month": {
                                                "description": "Filter month of employee by month parameter",
                                                "type": "integer",
                                                "format": "int32"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/PagedSearchParameter"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/employee/office/list-search": {
            "post": {
                "tags": [
                    "Employee"
                ],
                "summary": "Get list of employee by office",
                "description": "Get list of employee by office",
                "operationId": "postEmployeeGroupByOffice",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "company_id": {
                                                "$ref": "#/components/schemas/EmployeeEloquent/properties/company_id"
                                            }
                                        },
                                        "type": "object"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/employee/workArea/list-search": {
            "post": {
                "tags": [
                    "Employee"
                ],
                "summary": "Get list of employee by work area",
                "description": "Get list of employee by work area",
                "operationId": "postEmployeeGroupByWorkArea",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "company_id": {
                                                "$ref": "#/components/schemas/EmployeeEloquent/properties/company_id"
                                            }
                                        },
                                        "type": "object"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/employee/position/list-search": {
            "post": {
                "tags": [
                    "Employee"
                ],
                "summary": "Get list of employee by position",
                "description": "Get list of employee by position",
                "operationId": "postEmployeeGroupByPosition",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "company_id": {
                                                "$ref": "#/components/schemas/EmployeeEloquent/properties/company_id"
                                            }
                                        },
                                        "type": "object"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/employee/workUnit/list-search": {
            "post": {
                "tags": [
                    "Employee"
                ],
                "summary": "Get list of employee by work unit",
                "description": "Get list of employee by work unit",
                "operationId": "postEmployeeGroupByWorkUnit",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "company_id": {
                                                "$ref": "#/components/schemas/EmployeeEloquent/properties/company_id"
                                            }
                                        },
                                        "type": "object"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/employee/detail/{id}": {
            "get": {
                "tags": [
                    "Employee"
                ],
                "summary": "Get detail employee",
                "description": "Get detail employee",
                "operationId": "getEmployeeDetail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/employee/create": {
            "post": {
                "tags": [
                    "Employee"
                ],
                "summary": "Create employee",
                "description": "Create employee",
                "operationId": "postEmployeeCreate",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/CreateEmployeeEloquent"
                                    },
                                    {
                                        "properties": {
                                            "media_libraries": {
                                                "description": "Media library property",
                                                "type": "array",
                                                "items": {
                                                    "properties": {
                                                        "media_library_id": {
                                                            "description": "Media library id property",
                                                            "type": "string",
                                                            "example": "152cc099-56a2-46b6-b2a8-ebc080477e3a"
                                                        },
                                                        "pivot": {
                                                            "description": "Pivot property",
                                                            "properties": {
                                                                "attribute": {
                                                                    "type": "string",
                                                                    "example": "photo"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "properties": {
                                            "childs": {
                                                "description": "Childs of employee",
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#/components/schemas/CreateChildEloquent"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "properties": {
                                            "formal_education_histories": {
                                                "description": "Formal education histories of employee",
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#/components/schemas/CreateFormalEducationHistoryEloquent"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "properties": {
                                            "non_formal_education_histories": {
                                                "description": "Non formal education histories of employee",
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#/components/schemas/CreateNonFormalEducationHistoryEloquent"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "properties": {
                                            "organization_histories": {
                                                "description": "Organization histories of employee",
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#/components/schemas/CreateOrganizationHistoryEloquent"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "properties": {
                                            "work_competences": {
                                                "description": "Work competences of employee",
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#/components/schemas/CreateWorkCompetenceEloquent"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "properties": {
                                            "work_experiences": {
                                                "description": "Work experiences of employee",
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#/components/schemas/CreateWorkExperienceEloquent"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "properties": {
                                            "other_equipments": {
                                                "description": "Other equipments of employee",
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#/components/schemas/CreateOtherEquipmentEloquent"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/employee/update": {
            "put": {
                "tags": [
                    "Employee"
                ],
                "summary": "Update employee",
                "description": "Update employee",
                "operationId": "putEmployeeUpdate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/UpdateEmployeeEloquent"
                                    },
                                    {
                                        "properties": {
                                            "media_libraries": {
                                                "description": "Media library property",
                                                "type": "array",
                                                "items": {
                                                    "properties": {
                                                        "media_library_id": {
                                                            "description": "Media library id property",
                                                            "type": "string",
                                                            "example": "152cc099-56a2-46b6-b2a8-ebc080477e3a"
                                                        },
                                                        "pivot": {
                                                            "description": "Pivot property",
                                                            "properties": {
                                                                "attribute": {
                                                                    "type": "string",
                                                                    "example": "photo"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "properties": {
                                            "childs": {
                                                "description": "Childs of employee",
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#/components/schemas/UpdateChildEloquent"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "properties": {
                                            "formal_education_histories": {
                                                "description": "Formal education histories of employee",
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#/components/schemas/UpdateFormalEducationHistoryEloquent"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "properties": {
                                            "non_formal_education_histories": {
                                                "description": "Non formal education histories of employee",
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#/components/schemas/UpdateNonFormalEducationHistoryEloquent"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "properties": {
                                            "organization_histories": {
                                                "description": "Organization histories of employee",
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#/components/schemas/UpdateOrganizationHistoryEloquent"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "properties": {
                                            "work_competences": {
                                                "description": "Work competences of employee",
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#/components/schemas/UpdateWorkCompetenceEloquent"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "properties": {
                                            "work_experiences": {
                                                "description": "Work experiences of employee",
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#/components/schemas/UpdateWorkExperienceEloquent"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "properties": {
                                            "other_equipments": {
                                                "description": "Other equipments of employee",
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#/components/schemas/UpdateOtherEquipmentEloquent"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/employee/delete/{id}": {
            "delete": {
                "tags": [
                    "Employee"
                ],
                "summary": "Delete employee",
                "description": "Delete employee",
                "operationId": "deleteEmployee",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Is parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/employee/deletes": {
            "delete": {
                "tags": [
                    "Employee"
                ],
                "summary": "Delete bulk employee",
                "description": "Delete bulk employee",
                "operationId": "deleteBulkEmployee",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ids": {
                                        "description": "Ids property",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "format": "int64",
                                            "example": 1
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/employee/list-search/export": {
            "post": {
                "tags": [
                    "Employee"
                ],
                "summary": "Export list of employee",
                "description": "Export list of employee",
                "operationId": "postEmployeeListSearchExport",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "export": {
                                        "description": "Export property",
                                        "type": "string",
                                        "default": "",
                                        "enum": [
                                            "excel",
                                            "pdf"
                                        ],
                                        "example": "excel"
                                    },
                                    "company_id": {
                                        "$ref": "#/components/schemas/EmployeeEloquent/properties/company_id"
                                    },
                                    "gender_id": {
                                        "$ref": "#/components/schemas/EmployeeEloquent/properties/gender_id"
                                    },
                                    "religion_id": {
                                        "$ref": "#/components/schemas/EmployeeEloquent/properties/religion_id"
                                    },
                                    "start_birth_date": {
                                        "description": "Start birth date property",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    },
                                    "end_birth_date": {
                                        "description": "End birth date property",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    },
                                    "start_identity_expired_date": {
                                        "description": "Start identity expired date property",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    },
                                    "end_identity_expired_date": {
                                        "description": "End identity expired date property",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    },
                                    "start_drive_license_a_date": {
                                        "description": "Start drive license a date property",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    },
                                    "end_drive_license_a_date": {
                                        "description": "End drive license a date property",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    },
                                    "start_drive_license_b_date": {
                                        "description": "Start drive license b date property",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    },
                                    "end_drive_license_b_date": {
                                        "description": "End drive license b date property",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    },
                                    "start_drive_license_c_date": {
                                        "description": "Start drive license c date property",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    },
                                    "end_drive_license_c_date": {
                                        "description": "End drive license c date property",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    },
                                    "marital_status_id": {
                                        "$ref": "#/components/schemas/EmployeeEloquent/properties/marital_status_id"
                                    },
                                    "mate_as": {
                                        "$ref": "#/components/schemas/EmployeeEloquent/properties/mate_as"
                                    },
                                    "start_mate_birth_date": {
                                        "description": "Start mate birth date property",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    },
                                    "end_mate_birth_date": {
                                        "description": "End mate birth date property",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    },
                                    "office_id": {
                                        "$ref": "#/components/schemas/EmployeeEloquent/properties/office_id"
                                    },
                                    "work_area_id": {
                                        "$ref": "#/components/schemas/EmployeeEloquent/properties/work_area_id"
                                    },
                                    "start_npwp_date": {
                                        "description": "Start npwp date property",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    },
                                    "end_npwp_date": {
                                        "description": "End npwp date property",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    },
                                    "npwp_status": {
                                        "$ref": "#/components/schemas/EmployeeEloquent/properties/npwp_status"
                                    },
                                    "start_bpjs_tenaga_kerja_date": {
                                        "description": "Start bpjs tenaga kerja date property",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    },
                                    "end_bpjs_tenaga_kerja_date": {
                                        "description": "End bpjs tenaga kerja date property",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    },
                                    "bpjs_tenaga_kerja_class": {
                                        "$ref": "#/components/schemas/EmployeeEloquent/properties/bpjs_tenaga_kerja_class"
                                    },
                                    "start_bpjs_kesehatan_date": {
                                        "description": "Start bpjs kesehatan date property",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    },
                                    "end_bpjs_kesehatan_date": {
                                        "description": "End bpjs kesehatan date property",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    },
                                    "bpjs_kesehatan_class": {
                                        "$ref": "#/components/schemas/EmployeeEloquent/properties/bpjs_kesehatan_class"
                                    },
                                    "start_mate_bpjs_kesehatan_date": {
                                        "description": "Start mate bpjs kesehatan date property",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    },
                                    "end_mate_bpjs_kesehatan_date": {
                                        "description": "End mate bpjs kesehatan date property",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    },
                                    "mate_bpjs_kesehatan_class": {
                                        "$ref": "#/components/schemas/EmployeeEloquent/properties/mate_bpjs_kesehatan_class"
                                    },
                                    "bank_id": {
                                        "$ref": "#/components/schemas/EmployeeEloquent/properties/bank_id"
                                    },
                                    "start_join_date": {
                                        "description": "Start join date property",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    },
                                    "end_join_date": {
                                        "description": "End join date property",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    },
                                    "work_status": {
                                        "$ref": "#/components/schemas/EmployeeEloquent/properties/work_status"
                                    },
                                    "work_type": {
                                        "$ref": "#/components/schemas/EmployeeEloquent/properties/work_type"
                                    },
                                    "degree_id": {
                                        "$ref": "#/components/schemas/FormalEducationHistoryEloquent/properties/degree_id"
                                    },
                                    "major_id": {
                                        "$ref": "#/components/schemas/FormalEducationHistoryEloquent/properties/major_id"
                                    },
                                    "competence_id": {
                                        "$ref": "#/components/schemas/WorkCompetenceEloquent/properties/competence_id"
                                    },
                                    "position_id": {
                                        "$ref": "#/components/schemas/PositionMutationEloquent/properties/position_id"
                                    },
                                    "project_id": {
                                        "$ref": "#/components/schemas/ProjectMutationEloquent/properties/project_id"
                                    },
                                    "work_unit_id": {
                                        "$ref": "#/components/schemas/WorkUnitMutationEloquent/properties/work_unit_id"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/formal-education-history/list": {
            "get": {
                "tags": [
                    "Formal Education History"
                ],
                "summary": "Get list of formal education history",
                "description": "Get list of formal education history",
                "operationId": "getFormalEducationHistoryList",
                "parameters": [
                    {
                        "name": "company_id",
                        "in": "query",
                        "description": "Company id parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "employee_id",
                        "in": "query",
                        "description": "Employee id parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "degree_id",
                        "in": "query",
                        "description": "Degree id parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "major_id",
                        "in": "query",
                        "description": "Major id parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "description": "Date parameter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2020-01-01 00:00:00"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/formal-education-history/list-search": {
            "post": {
                "tags": [
                    "Formal Education History"
                ],
                "summary": "Get list of formal education history with query search",
                "description": "Get list of formal education history with query search",
                "operationId": "postFormalEducationHistoryListSearch",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "query": {
                                        "description": "Query property (Keyword would be filter name)",
                                        "type": "string",
                                        "example": "keyword"
                                    },
                                    "company_id": {
                                        "description": "Company id property",
                                        "type": "integer",
                                        "format": "int64",
                                        "example": 1
                                    },
                                    "employee_id": {
                                        "$ref": "#/components/schemas/FormalEducationHistoryEloquent/properties/employee_id"
                                    },
                                    "major_id": {
                                        "$ref": "#/components/schemas/FormalEducationHistoryEloquent/properties/major_id"
                                    },
                                    "degree_id": {
                                        "$ref": "#/components/schemas/FormalEducationHistoryEloquent/properties/degree_id"
                                    },
                                    "date": {
                                        "description": "Date parameter",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/formal-education-history/page-search": {
            "post": {
                "tags": [
                    "Formal Education History"
                ],
                "summary": "Get list of formal education history with query and page parameter search",
                "description": "Get list of formal education history with query and page parameter search",
                "operationId": "postFormalEducationHistoryPageSearch",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "query": {
                                                "description": "Query property (Keyword would be filter name)",
                                                "properties": {
                                                    "value": {
                                                        "type": "string",
                                                        "example": "keyword"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "company_id": {
                                                "description": "Company id property",
                                                "type": "integer",
                                                "format": "int64",
                                                "example": 1
                                            },
                                            "employee_id": {
                                                "$ref": "#/components/schemas/FormalEducationHistoryEloquent/properties/employee_id"
                                            },
                                            "major_id": {
                                                "$ref": "#/components/schemas/FormalEducationHistoryEloquent/properties/major_id"
                                            },
                                            "degree_id": {
                                                "$ref": "#/components/schemas/FormalEducationHistoryEloquent/properties/degree_id"
                                            },
                                            "date": {
                                                "description": "Date parameter",
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2020-01-01 00:00:00"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/PagedSearchParameter"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/formal-education-history/detail/{id}": {
            "get": {
                "tags": [
                    "Formal Education History"
                ],
                "summary": "Get detail formal education history",
                "description": "Get detail formal education history",
                "operationId": "getFormalEducationHistoryDetail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/formal-education-history/create": {
            "post": {
                "tags": [
                    "Formal Education History"
                ],
                "summary": "Create formal education history",
                "description": "Create formal education history",
                "operationId": "postFormalEducationHistoryCreate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateFormalEducationHistoryEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/formal-education-history/update": {
            "put": {
                "tags": [
                    "Formal Education History"
                ],
                "summary": "Update formal education history",
                "description": "Update formal education history",
                "operationId": "putFormalEducationHistoryUpdate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateFormalEducationHistoryEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/formal-education-history/delete/{id}": {
            "delete": {
                "tags": [
                    "Formal Education History"
                ],
                "summary": "Delete formal education history",
                "description": "Delete formal education history",
                "operationId": "deleteFormalEducationHistory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/formal-education-history/deletes": {
            "delete": {
                "tags": [
                    "Formal Education History"
                ],
                "summary": "Delete bulk formal education history",
                "description": "Delete bulk formal education history",
                "operationId": "deleteBulkFormalEducationHistory",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ids": {
                                        "description": "Ids property",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "format": "int64",
                                            "example": 1
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/formal-education-history/list-search/export": {
            "post": {
                "tags": [
                    "Formal Education History"
                ],
                "summary": "Export list of formal education history",
                "description": "Export list of formal education history",
                "operationId": "postFormalEducationHistoryListSearchExport",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "type": {
                                        "description": "Type of formal education history export format",
                                        "type": "string",
                                        "default": "",
                                        "enum": [
                                            "excel",
                                            "pdf"
                                        ]
                                    },
                                    "company_id": {
                                        "description": "Company id property",
                                        "type": "integer",
                                        "format": "int64",
                                        "example": 1
                                    },
                                    "employee_id": {
                                        "$ref": "#/components/schemas/FormalEducationHistoryEloquent/properties/employee_id"
                                    },
                                    "major_id": {
                                        "$ref": "#/components/schemas/FormalEducationHistoryEloquent/properties/major_id"
                                    },
                                    "degree_id": {
                                        "$ref": "#/components/schemas/FormalEducationHistoryEloquent/properties/degree_id"
                                    },
                                    "date": {
                                        "description": "Date parameter",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/non-formal-education-history/list": {
            "get": {
                "tags": [
                    "Non Formal Education History"
                ],
                "summary": "Get list of non formal education history",
                "description": "Get list of non formal education history",
                "operationId": "getNonFormalEducationHistoryList",
                "parameters": [
                    {
                        "name": "company_id",
                        "in": "query",
                        "description": "Company id parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "employee_id",
                        "in": "query",
                        "description": "Employee id parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "description": "Date parameter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2020-01-01 00:00:00"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/non-formal-education-history/list-search": {
            "post": {
                "tags": [
                    "Non Formal Education History"
                ],
                "summary": "Get list of non formal education history with query search",
                "description": "Get list of non formal education history with query search",
                "operationId": "postNonFormalEducationHistoryListSearch",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "query": {
                                        "description": "Query property (Keyword would be filter type, name)",
                                        "type": "string",
                                        "example": "keyword"
                                    },
                                    "company_id": {
                                        "description": "Company id property",
                                        "type": "integer",
                                        "format": "int64",
                                        "example": 1
                                    },
                                    "employee_id": {
                                        "$ref": "#/components/schemas/NonFormalEducationHistoryEloquent/properties/employee_id"
                                    },
                                    "date": {
                                        "description": "Date parameter",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/non-formal-education-history/page-search": {
            "post": {
                "tags": [
                    "Non Formal Education History"
                ],
                "summary": "Get list of non formal education history with query and page parameter search",
                "description": "Get list of non formal education history with query and page parameter search",
                "operationId": "postNonFormalEducationHistoryPageSearch",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "query": {
                                                "description": "Query property (Keyword would be filter type, name)",
                                                "properties": {
                                                    "value": {
                                                        "type": "string",
                                                        "example": "keyword"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "company_id": {
                                                "description": "Company id property",
                                                "type": "integer",
                                                "format": "int64",
                                                "example": 1
                                            },
                                            "employee_id": {
                                                "$ref": "#/components/schemas/NonFormalEducationHistoryEloquent/properties/employee_id"
                                            },
                                            "date": {
                                                "description": "Date parameter",
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2020-01-01 00:00:00"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/PagedSearchParameter"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/non-formal-education-history/detail/{id}": {
            "get": {
                "tags": [
                    "Non Formal Education History"
                ],
                "summary": "Get detail non formal education history",
                "description": "Get detail non formal education history",
                "operationId": "getNonFormalEducationHistoryDetail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/non-formal-education-history/create": {
            "post": {
                "tags": [
                    "Non Formal Education History"
                ],
                "summary": "Create non formal education history",
                "description": "Create non formal education history",
                "operationId": "postNonFormalEducationHistoryCreate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateNonFormalEducationHistoryEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/non-formal-education-history/update": {
            "put": {
                "tags": [
                    "Non Formal Education History"
                ],
                "summary": "Update non formal education history",
                "description": "Update non formal education history",
                "operationId": "putNonFormalEducationHistoryUpdate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateNonFormalEducationHistoryEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/non-formal-education-history/delete/{id}": {
            "delete": {
                "tags": [
                    "Non Formal Education History"
                ],
                "summary": "Delete non formal education history",
                "description": "Delete non formal education history",
                "operationId": "deleteNonFormalEducationHistory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/non-formal-education-history/deletes": {
            "delete": {
                "tags": [
                    "Non Formal Education History"
                ],
                "summary": "Delete bulk non formal education history",
                "description": "Delete bulk non formal education history",
                "operationId": "deleteBulkNonFormalEducationHistory",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ids": {
                                        "description": "Ids property",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "format": "int64",
                                            "example": 1
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/non-formal-education-history/list-search/export": {
            "post": {
                "tags": [
                    "Non Formal Education History"
                ],
                "summary": "Export list of non formal education history",
                "description": "Export list of non formal education history",
                "operationId": "postNonFormalEducationHistoryListSearchExport",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "type": {
                                        "description": "Type of non formal education history export format",
                                        "type": "string",
                                        "default": "",
                                        "enum": [
                                            "excel",
                                            "pdf"
                                        ]
                                    },
                                    "company_id": {
                                        "description": "Company id property",
                                        "type": "integer",
                                        "format": "int64",
                                        "example": 1
                                    },
                                    "employee_id": {
                                        "$ref": "#/components/schemas/FormalEducationHistoryEloquent/properties/employee_id"
                                    },
                                    "date": {
                                        "description": "Date parameter",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/organization-history/list": {
            "get": {
                "tags": [
                    "Organization History"
                ],
                "summary": "Get list of organization history",
                "description": "Get list of organization history",
                "operationId": "getOrganizationHistoryList",
                "parameters": [
                    {
                        "name": "company_id",
                        "in": "query",
                        "description": "Company id parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "employee_id",
                        "in": "query",
                        "description": "Employee id parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "description": "Date parameter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2020-01-01 00:00:00"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/organization-history/list-search": {
            "post": {
                "tags": [
                    "Organization History"
                ],
                "summary": "Get list of organization history with query search",
                "description": "Get list of organization history with query search",
                "operationId": "postOrganizationHistoryListSearch",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "query": {
                                        "description": "Query property (Keyword would be filter name)",
                                        "type": "string",
                                        "example": "keyword"
                                    },
                                    "company_id": {
                                        "description": "Company id property",
                                        "type": "integer",
                                        "format": "int64",
                                        "example": 1
                                    },
                                    "employee_id": {
                                        "$ref": "#/components/schemas/OrganizationHistoryEloquent/properties/employee_id"
                                    },
                                    "date": {
                                        "description": "Date parameter",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/organization-history/page-search": {
            "post": {
                "tags": [
                    "Organization History"
                ],
                "summary": "Get list of organization history with query and page parameter search",
                "description": "Get list of organization history with query and page parameter search",
                "operationId": "postOrganizationHistoryPageSearch",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "query": {
                                                "description": "Query property (Keyword would be filter name)",
                                                "properties": {
                                                    "value": {
                                                        "type": "string",
                                                        "example": "keyword"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "company_id": {
                                                "description": "Company id property",
                                                "type": "integer",
                                                "format": "int64",
                                                "example": 1
                                            },
                                            "employee_id": {
                                                "$ref": "#/components/schemas/NonFormalEducationHistoryEloquent/properties/employee_id"
                                            },
                                            "date": {
                                                "description": "Date parameter",
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2020-01-01 00:00:00"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/PagedSearchParameter"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/organization-history/detail/{id}": {
            "get": {
                "tags": [
                    "Organization History"
                ],
                "summary": "Get detail organization history",
                "description": "Get detail organization history",
                "operationId": "getOrganizationHistoryDetail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/organization-history/create": {
            "post": {
                "tags": [
                    "Organization History"
                ],
                "summary": "Create organization history",
                "description": "Create organization history",
                "operationId": "postOrganizationHistoryCreate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateOrganizationHistoryEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/organization-history/update": {
            "put": {
                "tags": [
                    "Organization History"
                ],
                "summary": "Update organization history",
                "description": "Update organization history",
                "operationId": "putOrganizationHistoryUpdate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateOrganizationHistoryEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/organization-history/delete/{id}": {
            "delete": {
                "tags": [
                    "Organization History"
                ],
                "summary": "Delete organization history",
                "description": "Delete organization history",
                "operationId": "deleteOrganizationHistory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/organization-history/deletes": {
            "delete": {
                "tags": [
                    "Organization History"
                ],
                "summary": "Delete bulk organization history",
                "description": "Delete bulk organization history",
                "operationId": "deleteBulkOrganizationHistory",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ids": {
                                        "description": "Ids property",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "format": "int64",
                                            "example": 1
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/organization-history/list-search/export": {
            "post": {
                "tags": [
                    "Organization History"
                ],
                "summary": "Export list of organization history",
                "description": "Export list of organization history",
                "operationId": "postOrganizationHistoryListSearchExport",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "export": {
                                        "description": "Export property",
                                        "type": "string",
                                        "default": "",
                                        "enum": [
                                            "excel",
                                            "pdf"
                                        ],
                                        "example": "excel"
                                    },
                                    "company_id": {
                                        "description": "Company id property",
                                        "type": "integer",
                                        "format": "int64",
                                        "example": 1
                                    },
                                    "employee_id": {
                                        "$ref": "#/components/schemas/OrganizationHistoryEloquent/properties/employee_id"
                                    },
                                    "date": {
                                        "description": "Date parameter",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/other-equipment/list": {
            "get": {
                "tags": [
                    "Other Equipment"
                ],
                "summary": "Get list of other equipment",
                "description": "Get list of other equipment",
                "operationId": "getOtherEquipmentList",
                "parameters": [
                    {
                        "name": "company_id",
                        "in": "query",
                        "description": "Company id parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "employee_id",
                        "in": "query",
                        "description": "Employee id parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/other-equipment/list-search": {
            "post": {
                "tags": [
                    "Other Equipment"
                ],
                "summary": "Get list of other equipment with query search",
                "description": "Get list of other equipment with query search",
                "operationId": "postOtherEquipmentListSearch",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "query": {
                                        "description": "Query property (Keyword would be filter name and description)",
                                        "type": "string",
                                        "example": "keyword"
                                    },
                                    "company_id": {
                                        "description": "Company id property",
                                        "type": "integer",
                                        "format": "int64",
                                        "example": 1
                                    },
                                    "employee_id": {
                                        "$ref": "#/components/schemas/OtherEquipmentEloquent/properties/employee_id"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/other-equipment/page-search": {
            "post": {
                "tags": [
                    "Other Equipment"
                ],
                "summary": "Get list of other equipment with query and page parameter search",
                "description": "Get list of other equipment with query and page parameter search",
                "operationId": "postOtherEquipmentPageSearch",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "query": {
                                                "description": "Query property (Keyword would be filter name and description)",
                                                "properties": {
                                                    "value": {
                                                        "type": "string",
                                                        "example": "keyword"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "company_id": {
                                                "description": "Company id property",
                                                "type": "integer",
                                                "format": "int64",
                                                "example": 1
                                            },
                                            "employee_id": {
                                                "$ref": "#/components/schemas/OtherEquipmentEloquent/properties/employee_id"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/PagedSearchParameter"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/other-equipment/detail/{id}": {
            "get": {
                "tags": [
                    "Other Equipment"
                ],
                "summary": "Get detail other equipment",
                "description": "Get detail other equipment",
                "operationId": "getOtherEquipmentDetail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/other-equipment/create": {
            "post": {
                "tags": [
                    "Other Equipment"
                ],
                "summary": "Create other equipment",
                "description": "Create other equipment",
                "operationId": "postOtherEquipmentCreate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateOtherEquipmentEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/other-equipment/update": {
            "put": {
                "tags": [
                    "Other Equipment"
                ],
                "summary": "Update other equipment",
                "description": "Return object of other equipment updated",
                "operationId": "putOtherEquipmentUpdate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateOtherEquipmentEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/other-equipment/delete/{id}": {
            "delete": {
                "tags": [
                    "Other Equipment"
                ],
                "summary": "Delete other equipment",
                "description": "Delete other equipment",
                "operationId": "deleteOtherEquipment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/other-equipment/deletes": {
            "delete": {
                "tags": [
                    "Other Equipment"
                ],
                "summary": "Delete bulk other equipment",
                "description": "Delete bulk other equipment",
                "operationId": "deleteBulkOtherEquipment",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ids": {
                                        "description": "Ids property",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "format": "int64",
                                            "example": 1
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/other-equipment/list-search/export": {
            "post": {
                "tags": [
                    "Other Equipment"
                ],
                "summary": "Export list of other equipment",
                "description": "Export list of other equipment",
                "operationId": "postOtherEquipmentListSearchExport",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "export": {
                                        "description": "Export property",
                                        "type": "string",
                                        "default": "",
                                        "enum": [
                                            "excel",
                                            "pdf"
                                        ],
                                        "example": "excel"
                                    },
                                    "company_id": {
                                        "description": "Company id property",
                                        "type": "integer",
                                        "format": "int64",
                                        "example": 1
                                    },
                                    "employee_id": {
                                        "$ref": "#/components/schemas/OtherEquipmentEloquent/properties/employee_id"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/work-competence/list": {
            "get": {
                "tags": [
                    "Work Competence"
                ],
                "summary": "Get list of work competence",
                "description": "Get list of work competence",
                "operationId": "getWorkCompetenceList",
                "parameters": [
                    {
                        "name": "company_id",
                        "in": "query",
                        "description": "Company id parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "employee_id",
                        "in": "query",
                        "description": "Employee id parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "competence_id",
                        "in": "query",
                        "description": "Competence id parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "start_issue_date",
                        "in": "query",
                        "description": "Start issue date parameter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2020-01-01 00:00:00"
                        }
                    },
                    {
                        "name": "end_issue_date",
                        "in": "query",
                        "description": "End issue date parameter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2020-01-01 00:00:00"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/work-competence/list-search": {
            "post": {
                "tags": [
                    "Work Competence"
                ],
                "summary": "Get list of work competence with query search",
                "description": "Get list of work competence with query search",
                "operationId": "postWorkCompetenceListSearch",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "query": {
                                        "description": "Query property (Keyword would be filter reference number and validity)",
                                        "type": "string",
                                        "example": "keyword"
                                    },
                                    "company_id": {
                                        "description": "Company id property",
                                        "type": "integer",
                                        "format": "int64",
                                        "example": 1
                                    },
                                    "employee_id": {
                                        "$ref": "#/components/schemas/WorkCompetenceEloquent/properties/employee_id"
                                    },
                                    "competence_id": {
                                        "$ref": "#/components/schemas/WorkCompetenceEloquent/properties/competence_id"
                                    },
                                    "start_issue_date": {
                                        "description": "Start issue date property",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    },
                                    "end_issue_date": {
                                        "description": "End issue date property",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/work-competence/page-search": {
            "post": {
                "tags": [
                    "Work Competence"
                ],
                "summary": "Get list of work competence with query and page parameter search",
                "description": "Get list of work competence with query and page parameter search",
                "operationId": "postWorkCompetencePageSearch",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "query": {
                                                "description": "Query property (Keyword would be filter reference number and validity)",
                                                "properties": {
                                                    "value": {
                                                        "type": "string",
                                                        "example": "keyword"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "company_id": {
                                                "description": "Company id property",
                                                "type": "integer",
                                                "format": "int64",
                                                "example": 1
                                            },
                                            "employee_id": {
                                                "$ref": "#/components/schemas/WorkCompetenceEloquent/properties/employee_id"
                                            },
                                            "competence_id": {
                                                "$ref": "#/components/schemas/WorkCompetenceEloquent/properties/competence_id"
                                            },
                                            "start_issue_date": {
                                                "description": "Start issue date property",
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2020-01-01 00:00:00"
                                            },
                                            "end_issue_date": {
                                                "description": "End issue date property",
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2020-01-01 00:00:00"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/PagedSearchParameter"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/work-competence/detail/{id}": {
            "get": {
                "tags": [
                    "Work Competence"
                ],
                "summary": "Get detail work competence",
                "description": "Get detail work competence",
                "operationId": "getWorkCompetenceDetail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/work-competence/create": {
            "post": {
                "tags": [
                    "Work Competence"
                ],
                "summary": "Create work competence",
                "description": "Create work competence",
                "operationId": "postWorkCompetenceCreate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateWorkCompetenceEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/work-competence/update": {
            "put": {
                "tags": [
                    "Work Competence"
                ],
                "summary": "Update work competence",
                "description": "Update work competence",
                "operationId": "putWorkCompetenceUpdate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateWorkCompetenceEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/work-competence/delete/{id}": {
            "delete": {
                "tags": [
                    "Work Competence"
                ],
                "summary": "Delete work competence",
                "description": "Delete work competence",
                "operationId": "deleteWorkCompetence",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/work-competence/deletes": {
            "delete": {
                "tags": [
                    "Work Competence"
                ],
                "summary": "Delete bulk work competence",
                "description": "Delete bulk work competence",
                "operationId": "deleteBulkWorkCompetence",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ids": {
                                        "description": "Ids property",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "format": "int64",
                                            "example": 1
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/work-competence/list-search/export": {
            "post": {
                "tags": [
                    "Work Competence"
                ],
                "summary": "Export list of work competence",
                "description": "Export list of work competence",
                "operationId": "postWorkCompetenceListSearchExport",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "export": {
                                        "description": "Export property",
                                        "type": "string",
                                        "default": "",
                                        "enum": [
                                            "excel",
                                            "pdf"
                                        ],
                                        "example": "excel"
                                    },
                                    "company_id": {
                                        "description": "Company id property",
                                        "type": "integer",
                                        "format": "int64",
                                        "example": 1
                                    },
                                    "employee_id": {
                                        "$ref": "#/components/schemas/WorkCompetenceEloquent/properties/employee_id"
                                    },
                                    "competence_id": {
                                        "$ref": "#/components/schemas/WorkCompetenceEloquent/properties/competence_id"
                                    },
                                    "start_issue_date": {
                                        "description": "Start issue date property",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    },
                                    "end_issue_date": {
                                        "description": "End issue date property",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/work-experience/list": {
            "get": {
                "tags": [
                    "Work Experience"
                ],
                "summary": "Get list of work experience",
                "description": "Get list of work experience",
                "operationId": "getWorkExperienceList",
                "parameters": [
                    {
                        "name": "company_id",
                        "in": "query",
                        "description": "Company id parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "employee_id",
                        "in": "query",
                        "description": "Employee id parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "description": "Date parameter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2020-01-01 00:00:00"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/work-experience/list-search": {
            "post": {
                "tags": [
                    "Work Experience"
                ],
                "summary": "Get list of work experience with query search",
                "description": "Get list of work experience with query search",
                "operationId": "postWorkExperienceListSearch",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "query": {
                                        "description": "Query property (Keyword would be filter reference number and validity)",
                                        "type": "string",
                                        "example": "keyword"
                                    },
                                    "company_id": {
                                        "description": "Company id property",
                                        "type": "integer",
                                        "format": "int64",
                                        "example": 1
                                    },
                                    "employee_id": {
                                        "$ref": "#/components/schemas/WorkExperienceEloquent/properties/employee_id"
                                    },
                                    "date": {
                                        "description": "Date property",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/work-experience/page-search": {
            "post": {
                "tags": [
                    "Work Experience"
                ],
                "summary": "Get list of work experience with query and page parameter search",
                "description": "Get list of work experience with query and page parameter search",
                "operationId": "postWorkExperiencePageSearch",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "query": {
                                                "description": "Query property (Keyword would be filter company, business_type and position)",
                                                "properties": {
                                                    "value": {
                                                        "type": "string",
                                                        "example": "keyword"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "company_id": {
                                                "description": "Company id property",
                                                "type": "integer",
                                                "format": "int64",
                                                "example": 1
                                            },
                                            "employee_id": {
                                                "$ref": "#/components/schemas/WorkCompetenceEloquent/properties/employee_id"
                                            },
                                            "date": {
                                                "description": "Date property",
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2020-01-01 00:00:00"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/PagedSearchParameter"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/work-experience/detail/{id}": {
            "get": {
                "tags": [
                    "Work Experience"
                ],
                "summary": "Get detail work experience",
                "description": "Get detail work experience",
                "operationId": "getWorkExperienceDetail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/work-experience/create": {
            "post": {
                "tags": [
                    "Work Experience"
                ],
                "summary": "Create work experience",
                "description": "Create work experience",
                "operationId": "postWorkExperienceCreate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateWorkExperienceEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/work-experience/update": {
            "put": {
                "tags": [
                    "Work Experience"
                ],
                "summary": "Update work experience",
                "description": "Update work experience",
                "operationId": "putWorkExperienceUpdate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateWorkExperienceEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/work-experience/delete/{id}": {
            "delete": {
                "tags": [
                    "Work Experience"
                ],
                "summary": "Delete work experience",
                "description": "Delete work experience",
                "operationId": "deleteWorkExperience",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/work-experience/deletes": {
            "delete": {
                "tags": [
                    "Work Experience"
                ],
                "summary": "Delete bulk work experience",
                "description": "Delete bulk work experience",
                "operationId": "deleteBulkWorkExperience",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ids": {
                                        "description": "Ids property",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "format": "int64",
                                            "example": 1
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/work-experience/list-search/export": {
            "post": {
                "tags": [
                    "Work Experience"
                ],
                "summary": "Export list of work experience",
                "description": "Export list of work experience",
                "operationId": "postWorkExperienceListSearchExport",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "export": {
                                        "description": "Export property",
                                        "type": "string",
                                        "default": "",
                                        "enum": [
                                            "excel",
                                            "pdf"
                                        ],
                                        "example": "excel"
                                    },
                                    "company_id": {
                                        "description": "Company id property",
                                        "type": "integer",
                                        "format": "int64",
                                        "example": 1
                                    },
                                    "employee_id": {
                                        "$ref": "#/components/schemas/WorkExperienceEloquent/properties/employee_id"
                                    },
                                    "date": {
                                        "description": "Date property",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/registration-letter/list": {
            "get": {
                "tags": [
                    "Registration Letter"
                ],
                "summary": "Get list of registration letter",
                "description": "Get list of registration letter",
                "operationId": "getRegistrationLetterList",
                "parameters": [
                    {
                        "name": "company_id",
                        "in": "query",
                        "description": "Company id parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "employee_id",
                        "in": "query",
                        "description": "Employee id parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "letter_type_id",
                        "in": "query",
                        "description": "Letter type id parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "description": "Date parameter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2020-01-01 00:00:00"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/registration-letter/list-search": {
            "post": {
                "tags": [
                    "Registration Letter"
                ],
                "summary": "Get list of registration letter with query search",
                "description": "Get list of registration letter with query search",
                "operationId": "postRegistrationLetterListSearch",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "query": {
                                        "description": "Query property (Keyword would be filter reference_number and description)",
                                        "type": "string",
                                        "example": "keyword"
                                    },
                                    "company_id": {
                                        "description": "Company id property",
                                        "type": "integer",
                                        "format": "int64",
                                        "example": 1
                                    },
                                    "employee_id": {
                                        "$ref": "#/components/schemas/RegistrationLetterEloquent/properties/employee_id"
                                    },
                                    "letter_type_id": {
                                        "$ref": "#/components/schemas/RegistrationLetterEloquent/properties/letter_type_id"
                                    },
                                    "date": {
                                        "description": "Date parameter",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/registration-letter/page-search": {
            "post": {
                "tags": [
                    "Registration Letter"
                ],
                "summary": "Get list of registration letter with query and page parameter search",
                "description": "Get list of registration letter with query and page parameter search",
                "operationId": "postRegistrationLetterPageSearch",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "query": {
                                                "description": "Query property (Keyword would be filter reference_number and description)",
                                                "properties": {
                                                    "value": {
                                                        "type": "string",
                                                        "example": "keyword"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "company_id": {
                                                "description": "Company id property",
                                                "type": "integer",
                                                "format": "int64",
                                                "example": 1
                                            },
                                            "employee_id": {
                                                "$ref": "#/components/schemas/RegistrationLetterEloquent/properties/employee_id"
                                            },
                                            "letter_type_id": {
                                                "$ref": "#/components/schemas/RegistrationLetterEloquent/properties/letter_type_id"
                                            },
                                            "date": {
                                                "description": "Date property",
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2020-01-01 00:00:00"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/PagedSearchParameter"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/registration-letter/detail/{id}": {
            "get": {
                "tags": [
                    "Registration Letter"
                ],
                "summary": "Get detail registration letter",
                "description": "Get detail registration letter",
                "operationId": "getRegistrationLetterDetail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/registration-letter/create": {
            "post": {
                "tags": [
                    "Registration Letter"
                ],
                "summary": "Create registration letter",
                "description": "Create registration letter",
                "operationId": "postRegistrationLetterCreate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/CreateRegistrationLetterEloquent"
                                    },
                                    {
                                        "properties": {
                                            "media_libraries": {
                                                "description": "Media library property",
                                                "type": "array",
                                                "items": {
                                                    "properties": {
                                                        "media_library_id": {
                                                            "description": "Media library id property",
                                                            "type": "string",
                                                            "example": "152cc099-56a2-46b6-b2a8-ebc080477e3a"
                                                        },
                                                        "pivot": {
                                                            "description": "Pivot property",
                                                            "properties": {
                                                                "attribute": {
                                                                    "type": "string",
                                                                    "example": "document"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/registration-letter/update": {
            "put": {
                "tags": [
                    "Registration Letter"
                ],
                "summary": "Update registration letter",
                "description": "Update registration letter",
                "operationId": "putRegistrationLetterUpdate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/UpdateRegistrationLetterEloquent"
                                    },
                                    {
                                        "properties": {
                                            "media_libraries": {
                                                "description": "Media library property",
                                                "type": "array",
                                                "items": {
                                                    "properties": {
                                                        "media_library_id": {
                                                            "description": "Media library id property",
                                                            "type": "string",
                                                            "example": "152cc099-56a2-46b6-b2a8-ebc080477e3a"
                                                        },
                                                        "pivot": {
                                                            "description": "Pivot property",
                                                            "properties": {
                                                                "attribute": {
                                                                    "type": "string",
                                                                    "example": "document"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/registration-letter/delete/{id}": {
            "delete": {
                "tags": [
                    "Registration Letter"
                ],
                "summary": "Delete registration letter",
                "description": "Delete registration letter",
                "operationId": "deleteRegistrationLetter",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/registration-letter/deletes": {
            "delete": {
                "tags": [
                    "Registration Letter"
                ],
                "summary": "Delete bulk registration letter",
                "description": "Delete bulk registration letter",
                "operationId": "deleteBulkRegistrationLetter",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ids": {
                                        "description": "Ids property",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "format": "int64",
                                            "example": 1
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/registration-letter/list-search/export": {
            "post": {
                "tags": [
                    "Registration Letter"
                ],
                "summary": "Export list of registration letter",
                "description": "Export list of registration letter",
                "operationId": "postRegistrationLetterListSearchExport",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "export": {
                                        "description": "Export property",
                                        "type": "string",
                                        "default": "",
                                        "enum": [
                                            "excel",
                                            "pdf"
                                        ],
                                        "example": "excel"
                                    },
                                    "company_id": {
                                        "description": "Company id property",
                                        "type": "integer",
                                        "format": "int64",
                                        "example": 1
                                    },
                                    "employee_id": {
                                        "$ref": "#/components/schemas/RegistrationLetterEloquent/properties/employee_id"
                                    },
                                    "letter_type_id": {
                                        "$ref": "#/components/schemas/RegistrationLetterEloquent/properties/letter_type_id"
                                    },
                                    "date": {
                                        "description": "Date parameter",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/work-agreement-letter/list": {
            "get": {
                "tags": [
                    "Work Agreement Letter"
                ],
                "summary": "Get list of work agreement letter",
                "description": "Get list of work agreement letter",
                "operationId": "getWorkAgreementLetterList",
                "parameters": [
                    {
                        "name": "company_id",
                        "in": "query",
                        "description": "Company id parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "employee_id",
                        "in": "query",
                        "description": "Employee id parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "letter_type_id",
                        "in": "query",
                        "description": "Letter type id parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "description": "Date parameter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2020-01-01 00:00:00"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/work-agreement-letter/list-search": {
            "post": {
                "tags": [
                    "Work Agreement Letter"
                ],
                "summary": "Get list of work agreement letter with query search",
                "description": "Get list of work agreement letter with query search",
                "operationId": "postWorkAgreementLetterListSearch",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "query": {
                                        "description": "Query property (Keyword would be filter reference_number and description)",
                                        "type": "string",
                                        "example": "keyword"
                                    },
                                    "company_id": {
                                        "description": "Company id property",
                                        "type": "integer",
                                        "format": "int64",
                                        "example": 1
                                    },
                                    "employee_id": {
                                        "$ref": "#/components/schemas/WorkAgreementLetterEloquent/properties/employee_id"
                                    },
                                    "letter_type_id": {
                                        "$ref": "#/components/schemas/WorkAgreementLetterEloquent/properties/letter_type_id"
                                    },
                                    "date": {
                                        "description": "Date parameter",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/work-agreement-letter/page-search": {
            "post": {
                "tags": [
                    "Work Agreement Letter"
                ],
                "summary": "Get list of work agreement letter with query and page parameter search",
                "description": "Get list of work agreement letter with query and page parameter search",
                "operationId": "postWorkAgreementLetterPageSearch",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "query": {
                                                "description": "Query property (Keyword would be filter reference_number and description)",
                                                "properties": {
                                                    "value": {
                                                        "type": "string",
                                                        "example": "keyword"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "company_id": {
                                                "description": "Company id property",
                                                "type": "integer",
                                                "format": "int64",
                                                "example": 1
                                            },
                                            "employee_id": {
                                                "$ref": "#/components/schemas/WorkAgreementLetterEloquent/properties/employee_id"
                                            },
                                            "letter_type_id": {
                                                "$ref": "#/components/schemas/WorkAgreementLetterEloquent/properties/letter_type_id"
                                            },
                                            "date": {
                                                "description": "Date property",
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2020-01-01 00:00:00"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/PagedSearchParameter"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/work-agreement-letter/detail/{id}": {
            "get": {
                "tags": [
                    "Work Agreement Letter"
                ],
                "summary": "Get detail work agreement letter",
                "description": "Get detail work agreement letter",
                "operationId": "getWorkAgreementLetterDetail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/work-agreement-letter/create": {
            "post": {
                "tags": [
                    "Work Agreement Letter"
                ],
                "summary": "Create work agreement letter",
                "description": "Create work agreement letter",
                "operationId": "postWorkAgreementLetterCreate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/CreateWorkAgreementLetterEloquent"
                                    },
                                    {
                                        "properties": {
                                            "media_libraries": {
                                                "description": "Media library property",
                                                "type": "array",
                                                "items": {
                                                    "properties": {
                                                        "media_library_id": {
                                                            "description": "Media library id property",
                                                            "type": "string",
                                                            "example": "152cc099-56a2-46b6-b2a8-ebc080477e3a"
                                                        },
                                                        "pivot": {
                                                            "description": "Pivot property",
                                                            "properties": {
                                                                "attribute": {
                                                                    "type": "string",
                                                                    "example": "document"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/work-agreement-letter/update": {
            "put": {
                "tags": [
                    "Work Agreement Letter"
                ],
                "summary": "Update work agreement letter",
                "description": "Update work agreement letter",
                "operationId": "putWorkAgreementLetterUpdate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/UpdateWorkAgreementLetterEloquent"
                                    },
                                    {
                                        "properties": {
                                            "media_libraries": {
                                                "description": "Media library property",
                                                "type": "array",
                                                "items": {
                                                    "properties": {
                                                        "media_library_id": {
                                                            "description": "Media library id property",
                                                            "type": "string",
                                                            "example": "152cc099-56a2-46b6-b2a8-ebc080477e3a"
                                                        },
                                                        "pivot": {
                                                            "description": "Pivot property",
                                                            "properties": {
                                                                "attribute": {
                                                                    "type": "string",
                                                                    "example": "document"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/work-agreement-letter/delete/{id}": {
            "delete": {
                "tags": [
                    "Work Agreement Letter"
                ],
                "summary": "Delete work agreement letter",
                "description": "Delete work agreement letter",
                "operationId": "deleteWorkAgreementLetter",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/work-agreement-letter/deletes": {
            "delete": {
                "tags": [
                    "Work Agreement Letter"
                ],
                "summary": "Delete bulk work agreement letter",
                "description": "Delete bulk work agreement letter",
                "operationId": "deleteBulkWorkAgreementLetter",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ids": {
                                        "description": "Ids property",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "format": "int64",
                                            "example": 1
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/work-agreement-letter/list-search/export": {
            "post": {
                "tags": [
                    "Work Agreement Letter"
                ],
                "summary": "Export list of work agreement letter",
                "description": "Export list of work agreement letter",
                "operationId": "postWorkAgreementLetterListSearchExport",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "export": {
                                        "description": "Export property",
                                        "type": "string",
                                        "default": "",
                                        "enum": [
                                            "excel",
                                            "pdf"
                                        ],
                                        "example": "excel"
                                    },
                                    "query": {
                                        "description": "Query property (Keyword would be filter reference_number and description)",
                                        "type": "string",
                                        "example": "keyword"
                                    },
                                    "company_id": {
                                        "description": "Company id property",
                                        "type": "integer",
                                        "format": "int64",
                                        "example": 1
                                    },
                                    "employee_id": {
                                        "$ref": "#/components/schemas/WorkAgreementLetterEloquent/properties/employee_id"
                                    },
                                    "letter_type_id": {
                                        "$ref": "#/components/schemas/WorkAgreementLetterEloquent/properties/letter_type_id"
                                    },
                                    "date": {
                                        "description": "Date parameter",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/project/list": {
            "get": {
                "tags": [
                    "Project"
                ],
                "summary": "Get list of project",
                "description": "Get list of project",
                "operationId": "getProjectList",
                "parameters": [
                    {
                        "name": "parent_id",
                        "in": "query",
                        "description": "Parent id parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "company_id",
                        "in": "query",
                        "description": "Company id parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "contract_type_id",
                        "in": "query",
                        "description": "Contract type id parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "start_issue_date",
                        "in": "query",
                        "description": "Start issue date parameter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2020-01-01 00:00:00"
                        }
                    },
                    {
                        "name": "end_issue_date",
                        "in": "query",
                        "description": "End issue date parameter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2020-01-01 00:00:00"
                        }
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "description": "Date parameter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2020-01-01 00:00:00"
                        }
                    },
                    {
                        "name": "start_value",
                        "in": "query",
                        "description": "Start value parameter",
                        "required": false,
                        "schema": {
                            "type": "float",
                            "example": "0"
                        }
                    },
                    {
                        "name": "end_value",
                        "in": "query",
                        "description": "End value parameter",
                        "required": false,
                        "schema": {
                            "type": "float",
                            "example": "100"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/project/list-hierarchical": {
            "get": {
                "tags": [
                    "Project"
                ],
                "summary": "Get list hierarchical of project",
                "description": "Get list hierarchical of project",
                "operationId": "getProjectListHierarchical",
                "parameters": [
                    {
                        "name": "company_id",
                        "in": "query",
                        "description": "Company id parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "contract_type_id",
                        "in": "query",
                        "description": "Contract type id parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "start_issue_date",
                        "in": "query",
                        "description": "Start issue date parameter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2020-01-01 00:00:00"
                        }
                    },
                    {
                        "name": "end_issue_date",
                        "in": "query",
                        "description": "End issue date parameter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2020-01-01 00:00:00"
                        }
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "description": "Date parameter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2020-01-01 00:00:00"
                        }
                    },
                    {
                        "name": "start_value",
                        "in": "query",
                        "description": "Start value parameter",
                        "required": false,
                        "schema": {
                            "type": "float",
                            "example": "0"
                        }
                    },
                    {
                        "name": "end_value",
                        "in": "query",
                        "description": "End value parameter",
                        "required": false,
                        "schema": {
                            "type": "float",
                            "example": "100"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/project/list-search": {
            "post": {
                "tags": [
                    "Project"
                ],
                "summary": "Get list of project with query search",
                "description": "Get list of project with query search",
                "operationId": "postProjectListSearch",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "query": {
                                        "description": "Query property (Keyword would be filter reference number, name, first_party_number, second_party_number, activity and description)",
                                        "type": "string",
                                        "example": "keyword"
                                    },
                                    "parent_id": {
                                        "$ref": "#/components/schemas/ProjectEloquent/properties/parent_id"
                                    },
                                    "company_id": {
                                        "$ref": "#/components/schemas/ProjectEloquent/properties/company_id"
                                    },
                                    "contract_type_id": {
                                        "$ref": "#/components/schemas/ProjectEloquent/properties/contract_type_id"
                                    },
                                    "start_issue_date": {
                                        "description": "Start issue date parameter",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    },
                                    "end_issue_date": {
                                        "description": "End issue date parameter",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    },
                                    "date": {
                                        "description": "Date parameter",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    },
                                    "start_value": {
                                        "description": "Start value parameter",
                                        "type": "float",
                                        "example": "0"
                                    },
                                    "end_value": {
                                        "description": "End value parameter",
                                        "type": "float",
                                        "example": "100"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/project/page-search": {
            "post": {
                "tags": [
                    "Project"
                ],
                "summary": "Get list of project with query and page parameter search",
                "description": "Get list of project with query and page parameter search",
                "operationId": "postProjectPageSearch",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "query": {
                                                "description": "Query property (Keyword would be filter reference number, name, first_party_number, second_party_number, activity and description)",
                                                "properties": {
                                                    "value": {
                                                        "type": "string",
                                                        "example": "keyword"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "parent_id": {
                                                "$ref": "#/components/schemas/ProjectEloquent/properties/parent_id"
                                            },
                                            "company_id": {
                                                "$ref": "#/components/schemas/ProjectEloquent/properties/company_id"
                                            },
                                            "contract_type_id": {
                                                "$ref": "#/components/schemas/ProjectEloquent/properties/contract_type_id"
                                            },
                                            "start_issue_date": {
                                                "description": "Start issue date parameter",
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2020-01-01 00:00:00"
                                            },
                                            "end_issue_date": {
                                                "description": "End issue date parameter",
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2020-01-01 00:00:00"
                                            },
                                            "date": {
                                                "description": "Date parameter",
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2020-01-01 00:00:00"
                                            },
                                            "start_value": {
                                                "description": "Start value parameter",
                                                "type": "float",
                                                "example": "0"
                                            },
                                            "end_value": {
                                                "description": "End value parameter",
                                                "type": "float",
                                                "example": "100"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/PagedSearchParameter"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/project/detail/{id}": {
            "get": {
                "tags": [
                    "Project"
                ],
                "summary": "Get detail project",
                "description": "Get detail project",
                "operationId": "getProjectDetail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/project/create": {
            "post": {
                "tags": [
                    "Project"
                ],
                "summary": "Create project",
                "description": "Create project",
                "operationId": "postProjectCreate",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/CreateProjectEloquent"
                                    },
                                    {
                                        "properties": {
                                            "media_libraries": {
                                                "description": "Media library property",
                                                "type": "array",
                                                "items": {
                                                    "properties": {
                                                        "media_library_id": {
                                                            "description": "Media library id property",
                                                            "type": "string",
                                                            "example": "152cc099-56a2-46b6-b2a8-ebc080477e3a"
                                                        },
                                                        "pivot": {
                                                            "description": "Pivot property",
                                                            "properties": {
                                                                "attribute": {
                                                                    "type": "string",
                                                                    "example": "document"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "properties": {
                                            "work_units": {
                                                "description": "Work Units",
                                                "type": "array",
                                                "items": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "example": 1
                                                }
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "properties": {
                                            "project_addendums": {
                                                "description": "Project addendums",
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#/components/schemas/CreateProjectAddendumEloquent"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "properties": {
                                            "project_terms": {
                                                "description": "Project terms",
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#/components/schemas/CreateProjectTermsEloquent"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/project/update": {
            "put": {
                "tags": [
                    "Project"
                ],
                "summary": "Update project",
                "description": "Update project",
                "operationId": "putProjectUpdate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/UpdateProjectEloquent"
                                    },
                                    {
                                        "properties": {
                                            "media_libraries": {
                                                "description": "Media library property",
                                                "type": "array",
                                                "items": {
                                                    "properties": {
                                                        "media_library_id": {
                                                            "description": "Media library id property",
                                                            "type": "string",
                                                            "example": "152cc099-56a2-46b6-b2a8-ebc080477e3a"
                                                        },
                                                        "pivot": {
                                                            "description": "Pivot property",
                                                            "properties": {
                                                                "attribute": {
                                                                    "type": "string",
                                                                    "example": "document"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "properties": {
                                            "work_units": {
                                                "description": "Work Units",
                                                "type": "array",
                                                "items": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "example": 1
                                                }
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "properties": {
                                            "project_addendums": {
                                                "description": "Project addendums",
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#/components/schemas/UpdateProjectAddendumEloquent"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "properties": {
                                            "project_terms": {
                                                "description": "Project terms",
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#/components/schemas/UpdateProjectTermsEloquent"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/project/delete/{id}": {
            "delete": {
                "tags": [
                    "Project"
                ],
                "summary": "Delete project",
                "description": "Delete project",
                "operationId": "deleteProject",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/project/deletes": {
            "delete": {
                "tags": [
                    "Project"
                ],
                "summary": "Delete bulk project",
                "description": "Delete bulk project",
                "operationId": "deleteBulkProject",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ids": {
                                        "description": "Ids property",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "format": "int64",
                                            "example": 1
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/project/list-search/export": {
            "post": {
                "tags": [
                    "Project"
                ],
                "summary": "Export list of project",
                "description": "Export list of project",
                "operationId": "postProjectListSearchExport",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "export": {
                                        "description": "Export property",
                                        "type": "string",
                                        "default": "",
                                        "enum": [
                                            "excel",
                                            "pdf"
                                        ],
                                        "example": "excel"
                                    },
                                    "parent_id": {
                                        "$ref": "#/components/schemas/ProjectEloquent/properties/parent_id"
                                    },
                                    "company_id": {
                                        "$ref": "#/components/schemas/ProjectEloquent/properties/company_id"
                                    },
                                    "contract_type_id": {
                                        "$ref": "#/components/schemas/ProjectEloquent/properties/contract_type_id"
                                    },
                                    "start_issue_date": {
                                        "description": "Start issue date parameter",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    },
                                    "end_issue_date": {
                                        "description": "End issue date parameter",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    },
                                    "date": {
                                        "description": "Date parameter",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    },
                                    "start_value": {
                                        "description": "Start value parameter",
                                        "type": "float",
                                        "example": "0"
                                    },
                                    "end_value": {
                                        "description": "End value parameter",
                                        "type": "float",
                                        "example": "100"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/applicant": {
            "get": {
                "tags": [
                    "Applicant"
                ],
                "summary": "Get list of applicant",
                "description": "Get list of applicant",
                "operationId": "getApplicantList",
                "parameters": [
                    {
                        "name": "profile_id",
                        "in": "query",
                        "description": "Profile id parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "gender_id",
                        "in": "query",
                        "description": "Gender id parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "religion_id",
                        "in": "query",
                        "description": "Religion id parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "marital_status_id",
                        "in": "query",
                        "description": "Marital status id parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "start_birth_date",
                        "in": "query",
                        "description": "Start birth date parameter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2020-01-01 00:00:00"
                        }
                    },
                    {
                        "name": "end_birth_date",
                        "in": "query",
                        "description": "End birth date parameter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2020-01-01 00:00:00"
                        }
                    },
                    {
                        "name": "start_passport_expired_date",
                        "in": "query",
                        "description": "Start passport expired date parameter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2020-01-01 00:00:00"
                        }
                    },
                    {
                        "name": "end_passport_expired_date",
                        "in": "query",
                        "description": "End passport expired date parameter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2020-01-01 00:00:00"
                        }
                    },
                    {
                        "name": "start_visa_expired_date",
                        "in": "query",
                        "description": "Start visa expired date parameter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2020-01-01 00:00:00"
                        }
                    },
                    {
                        "name": "end_visa_expired_date",
                        "in": "query",
                        "description": "End visa expired date parameter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2020-01-01 00:00:00"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/applicant/list-search": {
            "post": {
                "tags": [
                    "Applicant"
                ],
                "summary": "Get list of applicant with query search",
                "description": "Get list of applicant with query search",
                "operationId": "postApplicantListSearch",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "query": {
                                        "description": "Query property (Keyword would be filter identity_number, identity_address, passport_number, visa_number, and birth_place)",
                                        "type": "string",
                                        "example": "keyword"
                                    },
                                    "profile_id": {
                                        "$ref": "#/components/schemas/ApplicantEloquent/properties/profile_id"
                                    },
                                    "gender_id": {
                                        "$ref": "#/components/schemas/ApplicantEloquent/properties/gender_id"
                                    },
                                    "religion_id": {
                                        "$ref": "#/components/schemas/ApplicantEloquent/properties/religion_id"
                                    },
                                    "marital_status_id": {
                                        "$ref": "#/components/schemas/ApplicantEloquent/properties/marital_status_id"
                                    },
                                    "start_birth_date": {
                                        "description": "Start birth date property",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    },
                                    "end_birth_date": {
                                        "description": "End birth date property",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    },
                                    "start_passport_expired_date": {
                                        "description": "Start passport expired date property",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    },
                                    "end_passport_expired_date": {
                                        "description": "End passport expired date property",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    },
                                    "start_visa_expired_date": {
                                        "description": "Start visa expired date property",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    },
                                    "end_visa_expired_date": {
                                        "description": "End visa expired date property",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/applicant/page-search": {
            "post": {
                "tags": [
                    "Applicant"
                ],
                "summary": "Get list of applicant with query and page parameter search",
                "description": "Get list of applicant with query and page parameter search",
                "operationId": "postApplicantPageSearch",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "query": {
                                                "description": "Query property (Keyword would be filter identity_number, identity_address, passport_number, visa_number, and birth_place)",
                                                "type": "string",
                                                "example": "keyword"
                                            },
                                            "profile_id": {
                                                "$ref": "#/components/schemas/ApplicantEloquent/properties/profile_id"
                                            },
                                            "gender_id": {
                                                "$ref": "#/components/schemas/ApplicantEloquent/properties/gender_id"
                                            },
                                            "religion_id": {
                                                "$ref": "#/components/schemas/ApplicantEloquent/properties/religion_id"
                                            },
                                            "marital_status_id": {
                                                "$ref": "#/components/schemas/ApplicantEloquent/properties/marital_status_id"
                                            },
                                            "start_birth_date": {
                                                "description": "Start birth date property",
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2020-01-01 00:00:00"
                                            },
                                            "end_birth_date": {
                                                "description": "End birth date property",
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2020-01-01 00:00:00"
                                            },
                                            "start_passport_expired_date": {
                                                "description": "Start passport expired date property",
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2020-01-01 00:00:00"
                                            },
                                            "end_passport_expired_date": {
                                                "description": "End passport expired date property",
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2020-01-01 00:00:00"
                                            },
                                            "start_visa_expired_date": {
                                                "description": "Start visa expired date property",
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2020-01-01 00:00:00"
                                            },
                                            "end_visa_expired_date": {
                                                "description": "End visa expired date property",
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2020-01-01 00:00:00"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/PagedSearchParameter"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/applicant/{id}": {
            "get": {
                "tags": [
                    "Applicant"
                ],
                "summary": "Get detail applicant",
                "description": "Get detail applicant",
                "operationId": "getApplicantDetail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Applicant"
                ],
                "summary": "Delete applicant",
                "description": "Delete applicant",
                "operationId": "postApplicantDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/applicant/create": {
            "post": {
                "tags": [
                    "Applicant"
                ],
                "summary": "Create applicant",
                "description": "Create applicant",
                "operationId": "postApplicantCreate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateApplicantEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/applicant/update": {
            "put": {
                "tags": [
                    "Applicant"
                ],
                "summary": "Update applicant",
                "description": "Update applicant",
                "operationId": "putApplicantUpdate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateApplicantEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/user/applicant": {
            "get": {
                "tags": [
                    "Applicant"
                ],
                "summary": "Get user applicant",
                "description": "Get user applicant",
                "operationId": "getApplicantUser",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/recruitment/apply": {
            "post": {
                "tags": [
                    "Recruitment"
                ],
                "summary": "Create vacancy applicant",
                "description": "Create vacancy applicant",
                "operationId": "postVacancyApplicantCreate",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/CreateVacancyApplicantEloquent"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/recruitment-schedules": {
            "get": {
                "tags": [
                    "Recruitment Schedule"
                ],
                "summary": "Get list of recruitment schedule",
                "description": "Get list of recruitment schedule",
                "operationId": "getRecruitmentScheduleList",
                "parameters": [
                    {
                        "name": "vacancy_application_id",
                        "in": "query",
                        "description": "Vacancy applicant id parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "start_schedule_date",
                        "in": "query",
                        "description": "Start schedule date parameter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2020-01-01 00:00:00"
                        }
                    },
                    {
                        "name": "end_schedule_date",
                        "in": "query",
                        "description": "End schedule date parameter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2020-01-01 00:00:00"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/recruitment-schedules/list-search": {
            "post": {
                "tags": [
                    "Recruitment Schedule"
                ],
                "summary": "Get list of recruitment schedule with query search",
                "description": "Get list of recruitment schedule with query search",
                "operationId": "postRecruitmentScheduleListSearch",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "query": {
                                        "description": "Query property (Keyword would be filter note)",
                                        "type": "string",
                                        "example": "keyword"
                                    },
                                    "vacancy_application_id": {
                                        "$ref": "#/components/schemas/RecruitmentScheduleEloquent/properties/vacancy_application_id"
                                    },
                                    "start_schedule_date": {
                                        "description": "Start schedule date parameter",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    },
                                    "end_schedule_date date_date": {
                                        "description": "End schedule date parameter",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/recruitment-schedules/page-search": {
            "post": {
                "tags": [
                    "Recruitment Schedule"
                ],
                "summary": "Get list of recruitment schedule with query and page parameter search",
                "description": "Get list of recruitment schedule with query and page parameter search",
                "operationId": "postRecruitmentSchedulePageSearch",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "query": {
                                                "description": "Query property (Keyword would be filter note)",
                                                "properties": {
                                                    "value": {
                                                        "type": "string",
                                                        "example": "keyword"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "vacancy_application_id": {
                                                "$ref": "#/components/schemas/RecruitmentScheduleEloquent/properties/vacancy_application_id"
                                            },
                                            "start_schedule_date": {
                                                "description": "Start schedule date parameter",
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2020-01-01 00:00:00"
                                            },
                                            "end_schedule_date": {
                                                "description": "End schedule date parameter",
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2020-01-01 00:00:00"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/PagedSearchParameter"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/recruitment-schedule": {
            "put": {
                "tags": [
                    "Recruitment Schedule"
                ],
                "summary": "Update recruitment schedule",
                "description": "Update recruitment schedule",
                "operationId": "putRecruitmentScheduleUpdate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateRecruitmentScheduleEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "Recruitment Schedule"
                ],
                "summary": "Create recruitment schedule",
                "description": "Create recruitment schedule",
                "operationId": "postTerminatpostRecruitmentScheduleCreateionCreate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateRecruitmentScheduleEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/recruitment-schedule/{id}": {
            "delete": {
                "tags": [
                    "Recruitment Schedule"
                ],
                "summary": "Delete recuitment schedule",
                "description": "Delete recuitment schedule",
                "operationId": "deleteRecruitmentSchedule",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/vacancy-applicants": {
            "get": {
                "tags": [
                    "Vacancy Applicant"
                ],
                "summary": "Get list of vacancy applicant",
                "description": "Get list of vacancy applicant",
                "operationId": "getVacancyApplicantList",
                "parameters": [
                    {
                        "name": "applicant_id",
                        "in": "query",
                        "description": "Applicant id parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "vacancy_id",
                        "in": "query",
                        "description": "Vacancy id parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "recruitment_stage_id",
                        "in": "query",
                        "description": "Recruitment stage id parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "rating",
                        "in": "query",
                        "description": "Rating parameter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "1",
                            "enum": [
                                "1",
                                "2",
                                "3",
                                "4",
                                "5"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/vacancy-applicants/list-search": {
            "post": {
                "tags": [
                    "Vacancy Applicant"
                ],
                "summary": "Get list of vacancy applicant with query search",
                "description": "Get list of vacancy applicant with query search",
                "operationId": "postVacancyApplicantListSearch",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "query": {
                                        "description": "Query property (Keyword would be filter cover letter)",
                                        "type": "string",
                                        "example": "keyword"
                                    },
                                    "applicant_id": {
                                        "$ref": "#/components/schemas/VacancyApplicantEloquent/properties/applicant_id"
                                    },
                                    "vacancy_id": {
                                        "$ref": "#/components/schemas/VacancyApplicantEloquent/properties/vacancy_id"
                                    },
                                    "recruitment_stage_id": {
                                        "$ref": "#/components/schemas/VacancyApplicantEloquent/properties/recruitment_stage_id"
                                    },
                                    "rating": {
                                        "$ref": "#/components/schemas/VacancyApplicantEloquent/properties/rating"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/vacancy-applicants/page-search": {
            "post": {
                "tags": [
                    "Vacancy Applicant"
                ],
                "summary": "Get list of vacancy applicant with query and page parameter search",
                "description": "Get list of vacancy applicant with query and page parameter search",
                "operationId": "postVacancyApplicantPageSearch",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "query": {
                                                "description": "Query property (Keyword would be filter cover letter)",
                                                "properties": {
                                                    "value": {
                                                        "type": "string",
                                                        "example": "keyword"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "applicant_id": {
                                                "$ref": "#/components/schemas/VacancyApplicantEloquent/properties/applicant_id"
                                            },
                                            "vacancy_id": {
                                                "$ref": "#/components/schemas/VacancyApplicantEloquent/properties/vacancy_id"
                                            },
                                            "recruitment_stage_id": {
                                                "$ref": "#/components/schemas/VacancyApplicantEloquent/properties/recruitment_stage_id"
                                            },
                                            "rating": {
                                                "$ref": "#/components/schemas/VacancyApplicantEloquent/properties/rating"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/PagedSearchParameter"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/vacancy-applicant": {
            "post": {
                "tags": [
                    "Vacancy Applicant"
                ],
                "summary": "Create vacancy applicant",
                "description": "Create vacancy applicant",
                "operationId": "postVacancyApplicantCreate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateVacancyApplicantEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/vacancy-applicant/{id}/status": {
            "put": {
                "tags": [
                    "Vacancy Applicant"
                ],
                "summary": "Update status vacancy applicant",
                "description": "Update status vacancy applicant",
                "operationId": "putVacancyApplicantUpdateStatus",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "recruitment_stage_id": {
                                        "description": "Recruitment stage id property",
                                        "type": "integer",
                                        "format": "int64",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/vacancy-applicant/{id}/on-board": {
            "put": {
                "tags": [
                    "Vacancy Applicant"
                ],
                "summary": "Update job on board vacancy applicant",
                "description": "Update job on board vacancy applicant",
                "operationId": "jobOnBoardVacancyApplicant",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "nip": {
                                                "$ref": "#/components/schemas/EmployeeEloquent/properties/nip"
                                            },
                                            "has_drive_license_a": {
                                                "$ref": "#/components/schemas/EmployeeEloquent/properties/has_drive_license_a"
                                            },
                                            "drive_license_a_number": {
                                                "$ref": "#/components/schemas/EmployeeEloquent/properties/drive_license_a_number"
                                            },
                                            "drive_license_a_date": {
                                                "$ref": "#/components/schemas/EmployeeEloquent/properties/drive_license_a_date"
                                            },
                                            "has_drive_license_b": {
                                                "$ref": "#/components/schemas/EmployeeEloquent/properties/has_drive_license_b"
                                            },
                                            "drive_license_b_number": {
                                                "$ref": "#/components/schemas/EmployeeEloquent/properties/drive_license_b_number"
                                            },
                                            "drive_license_b_date": {
                                                "$ref": "#/components/schemas/EmployeeEloquent/properties/drive_license_b_date"
                                            },
                                            "has_drive_license_c": {
                                                "$ref": "#/components/schemas/EmployeeEloquent/properties/has_drive_license_c"
                                            },
                                            "drive_license_c_number": {
                                                "$ref": "#/components/schemas/EmployeeEloquent/properties/drive_license_c_number"
                                            },
                                            "drive_license_c_date": {
                                                "$ref": "#/components/schemas/EmployeeEloquent/properties/drive_license_c_date"
                                            },
                                            "marital_status_id": {
                                                "$ref": "#/components/schemas/EmployeeEloquent/properties/marital_status_id"
                                            },
                                            "mate_full_name": {
                                                "$ref": "#/components/schemas/EmployeeEloquent/properties/mate_full_name"
                                            },
                                            "mate_nick_name": {
                                                "$ref": "#/components/schemas/EmployeeEloquent/properties/mate_nick_name"
                                            },
                                            "mate_birth_place": {
                                                "$ref": "#/components/schemas/EmployeeEloquent/properties/mate_birth_place"
                                            },
                                            "mate_birth_date": {
                                                "$ref": "#/components/schemas/EmployeeEloquent/properties/mate_birth_date"
                                            },
                                            "mate_occupation": {
                                                "$ref": "#/components/schemas/EmployeeEloquent/properties/mate_occupation"
                                            },
                                            "office_id": {
                                                "$ref": "#/components/schemas/EmployeeEloquent/properties/office_id"
                                            },
                                            "work_area_id": {
                                                "$ref": "#/components/schemas/EmployeeEloquent/properties/work_area_id"
                                            },
                                            "has_npwp": {
                                                "$ref": "#/components/schemas/EmployeeEloquent/properties/has_npwp"
                                            },
                                            "npwp_number": {
                                                "$ref": "#/components/schemas/EmployeeEloquent/properties/npwp_number"
                                            },
                                            "npwp_date": {
                                                "$ref": "#/components/schemas/EmployeeEloquent/properties/npwp_date"
                                            },
                                            "npwp_status": {
                                                "$ref": "#/components/schemas/EmployeeEloquent/properties/npwp_status"
                                            },
                                            "has_bpjs_tenaga_kerja": {
                                                "$ref": "#/components/schemas/EmployeeEloquent/properties/has_bpjs_tenaga_kerja"
                                            },
                                            "bpjs_tenaga_kerja_number": {
                                                "$ref": "#/components/schemas/EmployeeEloquent/properties/bpjs_tenaga_kerja_number"
                                            },
                                            "bpjs_tenaga_kerja_date": {
                                                "$ref": "#/components/schemas/EmployeeEloquent/properties/bpjs_tenaga_kerja_date"
                                            },
                                            "bpjs_tenaga_kerja_class": {
                                                "$ref": "#/components/schemas/EmployeeEloquent/properties/bpjs_tenaga_kerja_class"
                                            },
                                            "has_bpjs_kesehatan": {
                                                "$ref": "#/components/schemas/EmployeeEloquent/properties/has_bpjs_kesehatan"
                                            },
                                            "bpjs_kesehatan_number": {
                                                "$ref": "#/components/schemas/EmployeeEloquent/properties/bpjs_kesehatan_number"
                                            },
                                            "bpjs_kesehatan_date": {
                                                "$ref": "#/components/schemas/EmployeeEloquent/properties/bpjs_kesehatan_date"
                                            },
                                            "bpjs_kesehatan_class": {
                                                "$ref": "#/components/schemas/EmployeeEloquent/properties/bpjs_kesehatan_class"
                                            },
                                            "has_mate_bpjs_kesehatan": {
                                                "$ref": "#/components/schemas/EmployeeEloquent/properties/has_mate_bpjs_kesehatan"
                                            },
                                            "mate_bpjs_kesehatan_number": {
                                                "$ref": "#/components/schemas/EmployeeEloquent/properties/mate_bpjs_kesehatan_number"
                                            },
                                            "mate_bpjs_kesehatan_date": {
                                                "$ref": "#/components/schemas/EmployeeEloquent/properties/mate_bpjs_kesehatan_date"
                                            },
                                            "mate_bpjs_kesehatan_class": {
                                                "$ref": "#/components/schemas/EmployeeEloquent/properties/mate_bpjs_kesehatan_class"
                                            },
                                            "dplk_number": {
                                                "$ref": "#/components/schemas/EmployeeEloquent/properties/dplk_number"
                                            },
                                            "collective_number": {
                                                "$ref": "#/components/schemas/EmployeeEloquent/properties/collective_number"
                                            },
                                            "english_ability": {
                                                "$ref": "#/components/schemas/EmployeeEloquent/properties/english_ability"
                                            },
                                            "computer_ability": {
                                                "$ref": "#/components/schemas/EmployeeEloquent/properties/computer_ability"
                                            },
                                            "other_ability": {
                                                "$ref": "#/components/schemas/EmployeeEloquent/properties/other_ability"
                                            },
                                            "bank_id": {
                                                "$ref": "#/components/schemas/EmployeeEloquent/properties/bank_id"
                                            },
                                            "account_number": {
                                                "$ref": "#/components/schemas/EmployeeEloquent/properties/account_number"
                                            },
                                            "join_date": {
                                                "$ref": "#/components/schemas/EmployeeEloquent/properties/join_date"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "properties": {
                                            "media_libraries": {
                                                "description": "Media library property",
                                                "type": "array",
                                                "items": {
                                                    "properties": {
                                                        "media_library_id": {
                                                            "description": "Media library id property",
                                                            "type": "string",
                                                            "example": "49e75589-f230-44eb-b209-521a78718cd5"
                                                        },
                                                        "pivot": {
                                                            "description": "Pivot property",
                                                            "properties": {
                                                                "attribute": {
                                                                    "type": "string",
                                                                    "example": "photo"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "properties": {
                                            "childs": {
                                                "description": "Childs of employee",
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#/components/schemas/CreateChildEloquent"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "properties": {
                                            "formal_education_histories": {
                                                "description": "Formal education histories of employee",
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#/components/schemas/CreateFormalEducationHistoryEloquent"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "properties": {
                                            "non_formal_education_histories": {
                                                "description": "Non formal education histories of employee",
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#/components/schemas/CreateNonFormalEducationHistoryEloquent"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "properties": {
                                            "organization_histories": {
                                                "description": "Organization histories of employee",
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#/components/schemas/CreateOrganizationHistoryEloquent"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "properties": {
                                            "work_competences": {
                                                "description": "Work competences of employee",
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#/components/schemas/CreateWorkCompetenceEloquent"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "properties": {
                                            "work_experiences": {
                                                "description": "Work experiences of employee",
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#/components/schemas/CreateWorkExperienceEloquent"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "properties": {
                                            "other_equipments": {
                                                "description": "Other equipments of employee",
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#/components/schemas/CreateOtherEquipmentEloquent"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/vacancy-applicant/{id}/note": {
            "put": {
                "tags": [
                    "Vacancy Applicant"
                ],
                "summary": "Update note vacancy applicant",
                "description": "Update note vacancy applicant",
                "operationId": "noteVacancyApplicant",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "note": {
                                        "description": "Note property",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/terminations": {
            "get": {
                "tags": [
                    "Termination"
                ],
                "summary": "Get list of termination",
                "description": "Get list of termination",
                "operationId": "getTerminationList",
                "parameters": [
                    {
                        "name": "employee_id",
                        "in": "query",
                        "description": "Employee id parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Type parameter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "",
                            "enum": [
                                "RESIGN",
                                "PHK"
                            ]
                        }
                    },
                    {
                        "name": "start_termination_date",
                        "in": "query",
                        "description": "Start termination date parameter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2020-01-01 00:00:00"
                        }
                    },
                    {
                        "name": "end_termination_date",
                        "in": "query",
                        "description": "End termination date parameter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2020-01-01 00:00:00"
                        }
                    },
                    {
                        "name": "start_severance",
                        "in": "query",
                        "description": "Start severance parameter",
                        "required": false,
                        "schema": {
                            "type": "float",
                            "example": "0"
                        }
                    },
                    {
                        "name": "end_severance",
                        "in": "query",
                        "description": "End severance parameter",
                        "required": false,
                        "schema": {
                            "type": "float",
                            "example": "100"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Termination"
                ],
                "summary": "Delete bulk termination",
                "description": "Delete bulk termination",
                "operationId": "deleteBulkTermination",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ids": {
                                        "description": "Ids property",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "format": "int64",
                                            "example": 1
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/terminations/list-search": {
            "post": {
                "tags": [
                    "Termination"
                ],
                "summary": "Get list of termination with query search",
                "description": "Get list of termination with query search",
                "operationId": "postTerminationListSearch",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "query": {
                                        "description": "Query property (Keyword would be filter note)",
                                        "type": "string",
                                        "example": "keyword"
                                    },
                                    "employee_id": {
                                        "$ref": "#/components/schemas/TerminationEloquent/properties/employee_id"
                                    },
                                    "type": {
                                        "$ref": "#/components/schemas/TerminationEloquent/properties/type"
                                    },
                                    "start_termination_date": {
                                        "description": "Start termination date parameter",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    },
                                    "end_termination_date": {
                                        "description": "End termination date parameter",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    },
                                    "start_severance": {
                                        "description": "Start severance parameter",
                                        "type": "float",
                                        "example": "0"
                                    },
                                    "end_severance": {
                                        "description": "End severance parameter",
                                        "type": "float",
                                        "example": "100"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/terminations/page-search": {
            "post": {
                "tags": [
                    "Termination"
                ],
                "summary": "Get list of termination with query and page parameter search",
                "description": "Get list of termination with query and page parameter search",
                "operationId": "postTerminationPageSearch",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "query": {
                                                "description": "Query property (Keyword would be filter note)",
                                                "properties": {
                                                    "value": {
                                                        "type": "string",
                                                        "example": "keyword"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "employee_id": {
                                                "$ref": "#/components/schemas/TerminationEloquent/properties/employee_id"
                                            },
                                            "type": {
                                                "$ref": "#/components/schemas/TerminationEloquent/properties/type"
                                            },
                                            "start_termination_date": {
                                                "description": "Start termination date parameter",
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2020-01-01 00:00:00"
                                            },
                                            "end_termination_date": {
                                                "description": "End termination date parameter",
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2020-01-01 00:00:00"
                                            },
                                            "start_severance": {
                                                "description": "Start severance parameter",
                                                "type": "float",
                                                "example": "0"
                                            },
                                            "end_severance": {
                                                "description": "End severance parameter",
                                                "type": "float",
                                                "example": "100"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/PagedSearchParameter"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/termination": {
            "put": {
                "tags": [
                    "Termination"
                ],
                "summary": "Update termination",
                "description": "Update termination",
                "operationId": "putTerminationUpdate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateTerminationEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "Termination"
                ],
                "summary": "Create termination",
                "description": "Create termination",
                "operationId": "postTerminationCreate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateTerminationEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/termination/{id}": {
            "delete": {
                "tags": [
                    "Termination"
                ],
                "summary": "Delete termination",
                "description": "Delete termination",
                "operationId": "deleteTermination",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/terminations/export": {
            "post": {
                "tags": [
                    "Termination"
                ],
                "summary": "Export list of termination",
                "description": "Export list of termination",
                "operationId": "postTerminationListSearchExport",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "export": {
                                        "description": "Export property",
                                        "type": "string",
                                        "default": "",
                                        "enum": [
                                            "excel",
                                            "pdf"
                                        ],
                                        "example": "excel"
                                    },
                                    "employee_id": {
                                        "$ref": "#/components/schemas/TerminationEloquent/properties/employee_id"
                                    },
                                    "type": {
                                        "$ref": "#/components/schemas/TerminationEloquent/properties/type"
                                    },
                                    "start_termination_date": {
                                        "description": "Start termination date parameter",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    },
                                    "end_termination_date": {
                                        "description": "End termination date parameter",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    },
                                    "start_severance": {
                                        "description": "Start severance parameter",
                                        "type": "float",
                                        "example": "0"
                                    },
                                    "end_severance": {
                                        "description": "End severance parameter",
                                        "type": "float",
                                        "example": "100"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/vacancies": {
            "get": {
                "tags": [
                    "Vacancy"
                ],
                "summary": "Get list of vacancy",
                "description": "Get list of vacancy",
                "operationId": "getVacancyList",
                "parameters": [
                    {
                        "name": "company_id",
                        "in": "query",
                        "description": "Company id parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "vacancy_location_id",
                        "in": "query",
                        "description": "Vacation location id parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "vacancy_category_id",
                        "in": "query",
                        "description": "Vacancy category id parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "start_publish_date",
                        "in": "query",
                        "description": "Start publish date parameter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2020-01-01 00:00:00"
                        }
                    },
                    {
                        "name": "end_publish_date",
                        "in": "query",
                        "description": "End publish date parameter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2020-01-01 00:00:00"
                        }
                    },
                    {
                        "name": "start_expired_date",
                        "in": "query",
                        "description": "Start expired date parameter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2020-01-01 00:00:00"
                        }
                    },
                    {
                        "name": "end_expired_date",
                        "in": "query",
                        "description": "End expired date parameter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2020-01-01 00:00:00"
                        }
                    },
                    {
                        "name": "work_status",
                        "in": "query",
                        "description": "Work status parameter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "",
                            "enum": [
                                "FULL_TIME",
                                "PART_TIME"
                            ]
                        }
                    },
                    {
                        "name": "work_type",
                        "in": "query",
                        "description": "Work type parameter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "",
                            "enum": [
                                "PERMANENT",
                                "CONTRACT"
                            ]
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Status parameter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "",
                            "enum": [
                                "PUBLISH",
                                "DRAFT",
                                "PENDING"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Vacancy"
                ],
                "summary": "Delete bulk vacancy",
                "description": "Delete bulk vacancy",
                "operationId": "deleteBulkVacancy",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ids": {
                                        "description": "Ids property",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "format": "int64",
                                            "example": 1
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/vacancy/list-search": {
            "post": {
                "tags": [
                    "Vacancy"
                ],
                "summary": "Get list of vacancy with query search",
                "description": "Get list of vacancy with query search",
                "operationId": "postVacancyListSearch",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "company_id": {
                                        "$ref": "#/components/schemas/VacancyEloquent/properties/company_id"
                                    },
                                    "vacancy_location_id": {
                                        "$ref": "#/components/schemas/VacancyEloquent/properties/vacancy_location_id"
                                    },
                                    "vacancy_category_id": {
                                        "$ref": "#/components/schemas/VacancyEloquent/properties/vacancy_category_id"
                                    },
                                    "start_publish_date": {
                                        "description": "Start publish date parameter",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    },
                                    "end_publish_date": {
                                        "description": "End publish date parameter",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    },
                                    "start_expired_date": {
                                        "description": "Start expired date parameter",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    },
                                    "end_expired_date": {
                                        "description": "End expired date parameter",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2020-01-01 00:00:00"
                                    },
                                    "work_status": {
                                        "$ref": "#/components/schemas/VacancyEloquent/properties/work_status"
                                    },
                                    "work_type": {
                                        "$ref": "#/components/schemas/VacancyEloquent/properties/work_type"
                                    },
                                    "status": {
                                        "$ref": "#/components/schemas/VacancyEloquent/properties/status"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/vacancy/page-search": {
            "post": {
                "tags": [
                    "Vacancy"
                ],
                "summary": "Get list of vacancy with query and page parameter search",
                "description": "Get list of vacancy with query and page parameter search",
                "operationId": "postVacancyPageSearch",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "query": {
                                                "description": "Query property (Keyword would be filter note)",
                                                "properties": {
                                                    "value": {
                                                        "type": "string",
                                                        "example": "keyword"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "company_id": {
                                                "$ref": "#/components/schemas/VacancyEloquent/properties/company_id"
                                            },
                                            "vacancy_location_id": {
                                                "$ref": "#/components/schemas/VacancyEloquent/properties/vacancy_location_id"
                                            },
                                            "vacancy_category_id": {
                                                "$ref": "#/components/schemas/VacancyEloquent/properties/vacancy_category_id"
                                            },
                                            "start_publish_date": {
                                                "description": "Start publish date parameter",
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2020-01-01 00:00:00"
                                            },
                                            "end_publish_date": {
                                                "description": "End publish date parameter",
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2020-01-01 00:00:00"
                                            },
                                            "start_expired_date": {
                                                "description": "Start expired date parameter",
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2020-01-01 00:00:00"
                                            },
                                            "end_expired_date": {
                                                "description": "End expired date parameter",
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2020-01-01 00:00:00"
                                            },
                                            "work_status": {
                                                "$ref": "#/components/schemas/VacancyEloquent/properties/work_status"
                                            },
                                            "work_type": {
                                                "$ref": "#/components/schemas/VacancyEloquent/properties/work_type"
                                            },
                                            "status": {
                                                "$ref": "#/components/schemas/VacancyEloquent/properties/status"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/PagedSearchParameter"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/vacancy": {
            "put": {
                "tags": [
                    "Vacancy"
                ],
                "summary": "Update vacancy",
                "description": "Update vacancy",
                "operationId": "putVacancyUpdate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/UpdateVacancyEloquent"
                                    },
                                    {
                                        "properties": {
                                            "degree": {
                                                "description": "Degree",
                                                "type": "array",
                                                "items": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "example": 1
                                                }
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "properties": {
                                            "skill": {
                                                "description": "Skill",
                                                "type": "array",
                                                "items": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "example": 1
                                                }
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "properties": {
                                            "additional_question": {
                                                "description": "Additional Question",
                                                "type": "array",
                                                "items": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "example": 1
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "Vacancy"
                ],
                "summary": "Create vacancy",
                "description": "Create vacancy",
                "operationId": "postVacancyCreate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/CreateVacancyEloquent"
                                    },
                                    {
                                        "properties": {
                                            "degree": {
                                                "description": "Degree",
                                                "type": "array",
                                                "items": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "example": 1
                                                }
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "properties": {
                                            "skill": {
                                                "description": "Skill",
                                                "type": "array",
                                                "items": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "example": 1
                                                }
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "properties": {
                                            "additional_question": {
                                                "description": "Additional Question",
                                                "type": "array",
                                                "items": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "example": 1
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/vacancy/{id}": {
            "delete": {
                "tags": [
                    "Vacancy"
                ],
                "summary": "Delete vacancy",
                "description": "Delete vacancy",
                "operationId": "deleteVacancy",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/vacancy/{id}/publish": {
            "put": {
                "tags": [
                    "Vacancy"
                ],
                "summary": "Set publish vacancy",
                "description": "Set publish vacancy",
                "operationId": "putVacancyPublish",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/vacancy/{id}/draft": {
            "put": {
                "tags": [
                    "Vacancy"
                ],
                "summary": "Set draft vacancy",
                "description": "Set draft vacancy",
                "operationId": "putVacancyDraft",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/vacancy/{id}/pending": {
            "put": {
                "tags": [
                    "Vacancy"
                ],
                "summary": "Set pending vacancy",
                "description": "Set pending vacancy",
                "operationId": "putVacancyPending",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/media/list": {
            "get": {
                "tags": [
                    "Media Library"
                ],
                "summary": "Get list of media library",
                "description": "Get list of media library",
                "operationId": "getMediaLibraryList",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "User id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "company_id",
                        "in": "query",
                        "description": "Company id parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "collection",
                        "in": "query",
                        "description": "collection parameter",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "STORAGE",
                                "COMPANY",
                                "PROFILE",
                                "EMPLOYEE",
                                "PROJECT",
                                "PROJECT_ADDENDUM"
                            ],
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/media/list-search": {
            "post": {
                "tags": [
                    "Media Library"
                ],
                "summary": "Get list of media library with query search",
                "description": "Get list of media library with query search",
                "operationId": "postMediaLibraryListSearch",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "query": {
                                        "description": "Query property (Keyword would be filter original file)",
                                        "type": "string",
                                        "example": "keyword"
                                    },
                                    "user_id": {
                                        "$ref": "#/components/schemas/MediaLibraryEloquent/properties/user_id"
                                    },
                                    "company_id": {
                                        "description": "Company id property",
                                        "type": "integer",
                                        "format": "int64",
                                        "example": "1"
                                    },
                                    "collection": {
                                        "$ref": "#/components/schemas/MediaLibraryEloquent/properties/collection"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/media/page-search": {
            "post": {
                "tags": [
                    "Media Library"
                ],
                "summary": "Get list of media library with query and page parameter search",
                "description": "Get list of media library with query and page parameter search",
                "operationId": "postMediaLibraryPageSearch",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "query": {
                                                "description": "Query property (Keyword would be filter file original)",
                                                "properties": {
                                                    "value": {
                                                        "type": "string",
                                                        "example": "keyword"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "user_id": {
                                                "$ref": "#/components/schemas/MediaLibraryEloquent/properties/user_id"
                                            },
                                            "company_id": {
                                                "description": "Company id property",
                                                "type": "integer",
                                                "format": "int64",
                                                "example": "1"
                                            },
                                            "collection": {
                                                "$ref": "#/components/schemas/MediaLibraryEloquent/properties/collection"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/PagedSearchParameter"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/file/upload": {
            "post": {
                "tags": [
                    "Media Library"
                ],
                "summary": "Upload file",
                "description": "Return info of file uploaded",
                "operationId": "postUploadFile",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/UploadFileMediaLibraryEloquent"
                                    },
                                    {
                                        "properties": {
                                            "file": {
                                                "description": "File property",
                                                "type": "file",
                                                "format": "file"
                                            }
                                        },
                                        "type": "object"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/file/download": {
            "get": {
                "tags": [
                    "Media Library"
                ],
                "summary": "Download file",
                "description": "Return info of file downloaded",
                "operationId": "getDownloadFile",
                "parameters": [
                    {
                        "name": "collection",
                        "in": "query",
                        "description": "Collection property",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "",
                            "enum": [
                                "STORAGE",
                                "COMPANY",
                                "PROFILE",
                                "EMPLOYEE",
                                "PROJECT",
                                "PROJECT_ADDENDUM"
                            ]
                        }
                    },
                    {
                        "name": "file",
                        "in": "query",
                        "description": "File property",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "Action of download",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "",
                            "enum": [
                                "DELETE"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/file/delete/{id}": {
            "delete": {
                "tags": [
                    "Media Library"
                ],
                "summary": "Delete media library",
                "description": "Return object of media library deleted",
                "operationId": "deleteRemoveFile",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/profile/create": {
            "post": {
                "tags": [
                    "Profile"
                ],
                "summary": "Create profile",
                "description": "Create profile",
                "operationId": "postProfileCreate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateProfileEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/profile/update": {
            "put": {
                "tags": [
                    "Profile"
                ],
                "summary": "Update profile",
                "description": "Update profile",
                "operationId": "putProfileUpdate",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/UpdateProfileEloquent"
                                    },
                                    {
                                        "properties": {
                                            "media_libraries": {
                                                "description": "Media library property",
                                                "type": "array",
                                                "items": {
                                                    "properties": {
                                                        "media_library_id": {
                                                            "description": "Media library id property",
                                                            "type": "string",
                                                            "example": "152cc099-56a2-46b6-b2a8-ebc080477e3a"
                                                        },
                                                        "pivot": {
                                                            "description": "Pivot property",
                                                            "properties": {
                                                                "attribute": {
                                                                    "type": "string",
                                                                    "example": "photo"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/profile/detail/{id}": {
            "get": {
                "tags": [
                    "Profile"
                ],
                "summary": "Get detail profile",
                "description": "Get detail profile",
                "operationId": "getProfileDetail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": "1"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/profile/user/": {
            "get": {
                "tags": [
                    "Profile"
                ],
                "summary": "Get user profile",
                "description": "Get user profile",
                "operationId": "getProfileUser",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/profile/delete/{id}": {
            "delete": {
                "tags": [
                    "Profile"
                ],
                "summary": "Delete profile",
                "description": "Delete profile",
                "operationId": "postProfileDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/setting/initialize": {
            "post": {
                "tags": [
                    "Setting"
                ],
                "summary": "Initialize setting",
                "description": "Return array of setting created",
                "operationId": "postInitializeDefaultSetting",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "company_id"
                                ],
                                "properties": {
                                    "company_id": {
                                        "description": "Company ID of setting",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/setting/initialize/all": {
            "post": {
                "tags": [
                    "Setting"
                ],
                "summary": "Initialize all setting",
                "description": "Return array of setting created",
                "operationId": "postInitializeDefaultSettingAll",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {}
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/setting/initialize/additional": {
            "post": {
                "tags": [
                    "Setting"
                ],
                "summary": "Initialize additional setting",
                "description": "Return array of setting created",
                "operationId": "postInitializeAdditionalSetting",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "company_id",
                                    "additional_setting"
                                ],
                                "properties": {
                                    "company_id": {
                                        "description": "Company ID of setting",
                                        "type": "string"
                                    },
                                    "additional_setting": {
                                        "description": "Filter additional_setting of setting by additional_setting parameter",
                                        "type": "object",
                                        "example": {
                                            "key_1": "value_1",
                                            "key_2": "value_2"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/user/list": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get list of user",
                "description": "Get list of user",
                "operationId": "getUserList",
                "parameters": [
                    {
                        "name": "company_id",
                        "in": "query",
                        "description": "Company id parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "application_id",
                        "in": "query",
                        "description": "Application id parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "example": 1
                        }
                    },
                    {
                        "name": "role_id",
                        "in": "query",
                        "description": "Role id parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "example": 1
                        }
                    },
                    {
                        "name": "permission_id",
                        "in": "query",
                        "description": "Permission id parameter",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "is_active",
                        "in": "query",
                        "description": "Is active parameter (active = 1; not active = 0)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "example": 1
                        }
                    },
                    {
                        "name": "is_block",
                        "in": "query",
                        "description": "Is block parameter (blocked = 1; not unblocked = 0)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/user/list-search": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Get list of user with query search",
                "description": "Get list of user with query search",
                "operationId": "postUserListSearch",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "query": {
                                        "description": "Query property (Keyword would be filter username and email)",
                                        "type": "string",
                                        "example": "keyword"
                                    },
                                    "company_id": {
                                        "description": "Company id property",
                                        "type": "integer",
                                        "format": "int64",
                                        "example": 1
                                    },
                                    "application_id": {
                                        "description": "Application id property",
                                        "type": "integer",
                                        "format": "int32",
                                        "example": 1
                                    },
                                    "role_id": {
                                        "description": "Role id property",
                                        "type": "integer",
                                        "format": "int32",
                                        "example": 1
                                    },
                                    "permission_id": {
                                        "description": "Permission id property",
                                        "type": "integer",
                                        "format": "int64",
                                        "example": 1
                                    },
                                    "is_active": {
                                        "$ref": "#/components/schemas/UserEloquent/properties/is_active"
                                    },
                                    "is_block": {
                                        "$ref": "#/components/schemas/UserEloquent/properties/is_block"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/user/page-search": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Get list of user with query and page parameter search",
                "description": "Get list of user with query and page parameter search",
                "operationId": "postUserPageSearch",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "query": {
                                                "description": "Query property (Keyword would be filter username and email)",
                                                "properties": {
                                                    "value": {
                                                        "type": "string",
                                                        "example": "keyword"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "company_id": {
                                                "description": "Company id property",
                                                "type": "integer",
                                                "format": "int64",
                                                "example": 1
                                            },
                                            "application_id": {
                                                "description": "Application id property",
                                                "type": "integer",
                                                "format": "int32",
                                                "example": 1
                                            },
                                            "role_id": {
                                                "description": "Role id property",
                                                "type": "integer",
                                                "format": "int32",
                                                "example": 1
                                            },
                                            "permission_id": {
                                                "description": "Permission id property",
                                                "type": "integer",
                                                "format": "int64",
                                                "example": 1
                                            },
                                            "is_active": {
                                                "$ref": "#/components/schemas/UserEloquent/properties/is_active"
                                            },
                                            "is_block": {
                                                "$ref": "#/components/schemas/UserEloquent/properties/is_block"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "$ref": "#/components/schemas/PagedSearchParameter"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/user/detail/{id}": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get detail user",
                "description": "Get detail user",
                "operationId": "getUserDetail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/user/detail/{id}/company": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get company user",
                "description": "Get company user",
                "operationId": "getUserCompany",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/user/detail/{id}/application": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get application user",
                "description": "Get application user",
                "operationId": "getUserApplication",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/user/detail/{id}/role": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get role user",
                "description": "Get role user",
                "operationId": "getUserRole",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/user/detail/{id}/role/permission": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get role permission user",
                "description": "Get role permission user",
                "operationId": "getUserRolePermission",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/user/update/password": {
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "User update password",
                "description": "User update password",
                "operationId": "putUserUpdatePassword",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateUserPasswordEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/user/update/role": {
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "User update role",
                "description": "User update role",
                "operationId": "putUserUpdateRole",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateUserRoleEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/user/update/permission": {
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "User update permission",
                "description": "User update permission",
                "operationId": "putUserUpdatePermission",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateUserPermissionEloquent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/user/delete/{id}": {
            "delete": {
                "tags": [
                    "User"
                ],
                "summary": "Delete user",
                "description": "Delete user",
                "operationId": "deleteUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id parameter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/user/active": {
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Set active user",
                "description": "Set active user",
                "operationId": "putUserActive",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "is_active"
                                ],
                                "properties": {
                                    "id": {
                                        "description": "Id property",
                                        "type": "integer",
                                        "format": "int64",
                                        "example": 1
                                    },
                                    "is_active": {
                                        "$ref": "#/components/schemas/UserEloquent/properties/is_active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/user/block": {
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Set block user",
                "description": "Set block user",
                "operationId": "putUserBlock",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "is_block"
                                ],
                                "properties": {
                                    "id": {
                                        "description": "Id parameter",
                                        "type": "integer",
                                        "format": "int64",
                                        "example": 1
                                    },
                                    "is_block": {
                                        "$ref": "#/components/schemas/UserEloquent/properties/is_block"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiKey": [
                            "*"
                        ]
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "PagedSearchParameter": {
                "required": [
                    "page",
                    "perpage",
                    "sort",
                    "field"
                ],
                "properties": {
                    "pagination": {
                        "description": "Pagination of page",
                        "properties": {
                            "page": {
                                "type": "integer",
                                "format": "int32",
                                "example": 1
                            },
                            "perpage": {
                                "type": "integer",
                                "format": "int32",
                                "example": 10
                            }
                        },
                        "type": "object"
                    },
                    "sort": {
                        "description": "Sort of page",
                        "properties": {
                            "sort": {
                                "type": "string",
                                "default": "",
                                "enum": [
                                    "ASC",
                                    "DESC"
                                ],
                                "example": "ASC"
                            },
                            "field": {
                                "type": "string",
                                "example": "id"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "CityEloquent": {
                "title": "City eloquent",
                "description": "City eloquent",
                "required": [
                    "state_id",
                    "city_name"
                ],
                "properties": {
                    "state_id": {
                        "description": "State id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "city_name": {
                        "description": "City name property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CreateCityEloquent": {
                "title": "Create state eloquent",
                "description": "Create state eloquent",
                "required": [
                    "state_id",
                    "city_name"
                ],
                "properties": {
                    "state_id": {
                        "$ref": "#/components/schemas/CityEloquent/properties/state_id"
                    },
                    "city_name": {
                        "$ref": "#/components/schemas/CityEloquent/properties/city_name"
                    }
                },
                "type": "object"
            },
            "UpdateCityEloquent": {
                "title": "Update state eloquent",
                "description": "Update state eloquent",
                "required": [
                    "id",
                    "state_id",
                    "city_name"
                ],
                "allOf": [
                    {
                        "properties": {
                            "id": {
                                "description": "Id property",
                                "type": "integer",
                                "format": "int64",
                                "example": 1
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/CreateCityEloquent"
                    }
                ]
            },
            "CountryEloquent": {
                "title": "Country eloquent",
                "description": "Country eloquent",
                "required": [
                    "country_name",
                    "two_letter_code",
                    "phone_code"
                ],
                "properties": {
                    "country_name": {
                        "description": "Country name property",
                        "type": "string"
                    },
                    "two_letter_code": {
                        "description": "Two letter code property",
                        "type": "string"
                    },
                    "phone_code": {
                        "description": "Phone code property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CreateCountryEloquent": {
                "title": "Create country eloquent",
                "description": "Create country eloquent",
                "required": [
                    "country_name",
                    "two_letter_code",
                    "phone_code"
                ],
                "properties": {
                    "country_name": {
                        "$ref": "#/components/schemas/CountryEloquent/properties/country_name"
                    },
                    "two_letter_code": {
                        "$ref": "#/components/schemas/CountryEloquent/properties/two_letter_code"
                    },
                    "phone_code": {
                        "$ref": "#/components/schemas/CountryEloquent/properties/phone_code"
                    }
                },
                "type": "object"
            },
            "UpdateCountryEloquent": {
                "title": "Update country eloquent",
                "description": "Update country eloquent",
                "required": [
                    "id",
                    "country_name",
                    "two_letter_code",
                    "phone_code"
                ],
                "allOf": [
                    {
                        "properties": {
                            "id": {
                                "description": "Id property",
                                "type": "integer",
                                "format": "int64",
                                "example": 1
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/CreateCountryEloquent"
                    }
                ]
            },
            "StateEloquent": {
                "title": "State eloquent",
                "description": "State eloquent",
                "required": [
                    "country_id",
                    "state_name"
                ],
                "properties": {
                    "country_id": {
                        "description": "Country id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "state_name": {
                        "description": "State name property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CreateStateEloquent": {
                "title": "Create country eloquent",
                "description": "Create country eloquent",
                "required": [
                    "country_id",
                    "state_name"
                ],
                "properties": {
                    "country_id": {
                        "$ref": "#/components/schemas/StateEloquent/properties/country_id"
                    },
                    "state_name": {
                        "$ref": "#/components/schemas/StateEloquent/properties/state_name"
                    }
                },
                "type": "object"
            },
            "UpdateStateEloquent": {
                "title": "Update country eloquent",
                "description": "Update country eloquent",
                "required": [
                    "id",
                    "country_id",
                    "state_name"
                ],
                "allOf": [
                    {
                        "properties": {
                            "id": {
                                "description": "Id property",
                                "type": "integer",
                                "format": "int64",
                                "example": 1
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/CreateStateEloquent"
                    }
                ]
            },
            "AccessEloquent": {
                "title": "Access eloquent",
                "description": "Access eloquent",
                "required": [
                    "name",
                    "slug"
                ],
                "properties": {
                    "name": {
                        "description": "Name property",
                        "type": "string"
                    },
                    "slug": {
                        "description": "Slug property",
                        "type": "string"
                    },
                    "description": {
                        "description": "Description property",
                        "type": "string"
                    },
                    "is_active": {
                        "description": "Is active property (active = 1; not active = 0)",
                        "type": "integer",
                        "format": "int32",
                        "example": 1
                    },
                    "created_by": {
                        "description": "Created by property",
                        "type": "string"
                    },
                    "modified_by": {
                        "description": "Modified by property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CreateAccessEloquent": {
                "title": "Create access eloquent",
                "description": "Create access eloquent",
                "required": [
                    "name",
                    "slug"
                ],
                "properties": {
                    "name": {
                        "$ref": "#/components/schemas/AccessEloquent/properties/name"
                    },
                    "slug": {
                        "$ref": "#/components/schemas/AccessEloquent/properties/slug"
                    },
                    "description": {
                        "$ref": "#/components/schemas/AccessEloquent/properties/description"
                    },
                    "is_active": {
                        "$ref": "#/components/schemas/AccessEloquent/properties/is_active"
                    }
                },
                "type": "object"
            },
            "UpdateAccessEloquent": {
                "title": "Update access eloquent",
                "description": "Update access eloquent",
                "required": [
                    "id",
                    "name",
                    "slug"
                ],
                "allOf": [
                    {
                        "properties": {
                            "id": {
                                "description": "Id property",
                                "type": "integer",
                                "format": "int64",
                                "example": 1
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/CreateAccessEloquent"
                    }
                ]
            },
            "ApplicationEloquent": {
                "title": "Application eloquent",
                "description": "Application eloquent",
                "required": [
                    "name",
                    "slug"
                ],
                "properties": {
                    "name": {
                        "description": "Name property",
                        "type": "string"
                    },
                    "slug": {
                        "description": "Slug property",
                        "type": "string"
                    },
                    "description": {
                        "description": "Description property",
                        "type": "string"
                    },
                    "is_active": {
                        "description": "Is active property (active = 1; not active = 0)",
                        "type": "integer",
                        "format": "int32",
                        "example": 1
                    },
                    "created_by": {
                        "description": "Created by property",
                        "type": "string"
                    },
                    "modified_by": {
                        "description": "Modified by property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CreateApplicationEloquent": {
                "title": "Create application eloquent",
                "description": "Create application eloquent",
                "required": [
                    "name",
                    "slug"
                ],
                "properties": {
                    "name": {
                        "$ref": "#/components/schemas/ApplicationEloquent/properties/name"
                    },
                    "slug": {
                        "$ref": "#/components/schemas/ApplicationEloquent/properties/slug"
                    },
                    "description": {
                        "$ref": "#/components/schemas/ApplicationEloquent/properties/description"
                    }
                },
                "type": "object"
            },
            "UpdateApplicationEloquent": {
                "title": "Update application eloquent",
                "description": "Update application eloquent",
                "required": [
                    "id",
                    "name",
                    "slug"
                ],
                "allOf": [
                    {
                        "properties": {
                            "id": {
                                "description": "Id property",
                                "type": "integer",
                                "format": "int64",
                                "example": 1
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/CreateApplicationEloquent"
                    }
                ]
            },
            "BankEloquent": {
                "title": "Bank eloquent",
                "description": "Bank eloquent",
                "required": [
                    "name",
                    "slug"
                ],
                "properties": {
                    "name": {
                        "description": "Name property",
                        "type": "string"
                    },
                    "slug": {
                        "description": "Slug property",
                        "type": "string"
                    },
                    "description": {
                        "description": "Description property",
                        "type": "string"
                    },
                    "is_active": {
                        "description": "Is active property",
                        "type": "integer",
                        "format": "int32",
                        "example": 1
                    },
                    "created_by": {
                        "description": "Created by property",
                        "type": "string"
                    },
                    "modified_by": {
                        "description": "Modified by property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CreateBankEloquent": {
                "title": "Create bank eloquent",
                "description": "Create bank eloquent",
                "required": [
                    "name",
                    "slug"
                ],
                "properties": {
                    "name": {
                        "$ref": "#/components/schemas/BankEloquent/properties/name"
                    },
                    "slug": {
                        "$ref": "#/components/schemas/BankEloquent/properties/slug"
                    },
                    "description": {
                        "$ref": "#/components/schemas/BankEloquent/properties/description"
                    }
                },
                "type": "object"
            },
            "UpdateBankEloquent": {
                "title": "Update bank eloquent",
                "description": "Update bank eloquent",
                "required": [
                    "id",
                    "name",
                    "slug"
                ],
                "allOf": [
                    {
                        "properties": {
                            "id": {
                                "description": "Id property",
                                "type": "integer",
                                "format": "int64",
                                "example": 1
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/CreateBankEloquent"
                    }
                ]
            },
            "CompanyEloquent": {
                "title": "Company eloquent",
                "description": "Company eloquent",
                "required": [
                    "company_category_id",
                    "employee_number_scale_id",
                    "name",
                    "slug",
                    "email"
                ],
                "properties": {
                    "company_category_id": {
                        "description": "Company category property",
                        "type": "integer",
                        "format": "int32",
                        "example": 1
                    },
                    "employee_number_scale_id": {
                        "description": "Employee number scale property",
                        "type": "integer",
                        "format": "int32",
                        "example": 1
                    },
                    "name": {
                        "description": "Name property",
                        "type": "string"
                    },
                    "slug": {
                        "description": "Slug property",
                        "type": "string"
                    },
                    "email": {
                        "description": "Email property",
                        "type": "string"
                    },
                    "url": {
                        "description": "Url property",
                        "type": "string"
                    },
                    "latitude": {
                        "description": "Latitude property",
                        "type": "string"
                    },
                    "longitude": {
                        "description": "Longitude property",
                        "type": "string"
                    },
                    "description": {
                        "description": "Description property",
                        "type": "string"
                    },
                    "is_active": {
                        "description": "Is active property",
                        "type": "integer",
                        "format": "int32"
                    },
                    "created_by": {
                        "description": "Created by property",
                        "type": "string"
                    },
                    "modified_by": {
                        "description": "Modified by property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CreateCompanyEloquent": {
                "title": "Create company eloquent",
                "description": "Create company eloquent",
                "required": [
                    "company_category_id",
                    "employee_number_scale_id",
                    "name",
                    "slug",
                    "email"
                ],
                "properties": {
                    "company_category_id": {
                        "$ref": "#/components/schemas/CompanyEloquent/properties/company_category_id"
                    },
                    "employee_number_scale_id": {
                        "$ref": "#/components/schemas/CompanyEloquent/properties/employee_number_scale_id"
                    },
                    "name": {
                        "$ref": "#/components/schemas/CompanyEloquent/properties/name"
                    },
                    "slug": {
                        "$ref": "#/components/schemas/CompanyEloquent/properties/slug"
                    },
                    "email": {
                        "$ref": "#/components/schemas/CompanyEloquent/properties/email"
                    },
                    "url": {
                        "$ref": "#/components/schemas/CompanyEloquent/properties/url"
                    },
                    "latitude": {
                        "$ref": "#/components/schemas/CompanyEloquent/properties/latitude"
                    },
                    "longitude": {
                        "$ref": "#/components/schemas/CompanyEloquent/properties/longitude"
                    },
                    "description": {
                        "$ref": "#/components/schemas/CompanyEloquent/properties/description"
                    },
                    "is_active": {
                        "$ref": "#/components/schemas/CompanyEloquent/properties/is_active"
                    }
                },
                "type": "object"
            },
            "UpdateCompanyEloquent": {
                "title": "Update company eloquent",
                "description": "Update company eloquent",
                "required": [
                    "id",
                    "company_category_id",
                    "employee_number_scale_id",
                    "name",
                    "slug",
                    "email"
                ],
                "allOf": [
                    {
                        "properties": {
                            "id": {
                                "description": "Id property",
                                "type": "integer",
                                "format": "int64",
                                "example": 1
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/CreateCompanyEloquent"
                    }
                ]
            },
            "CompanyCategoryEloquent": {
                "title": "Company category eloquent",
                "description": "Company category eloquent",
                "required": [
                    "name",
                    "slug"
                ],
                "properties": {
                    "name": {
                        "description": "Name property",
                        "type": "string"
                    },
                    "slug": {
                        "description": "Slug property",
                        "type": "string"
                    },
                    "description": {
                        "description": "Description property",
                        "type": "string"
                    },
                    "is_active": {
                        "description": "Is active property",
                        "type": "integer",
                        "format": "int32",
                        "example": 1
                    },
                    "created_by": {
                        "description": "Created by property",
                        "type": "string"
                    },
                    "modified_by": {
                        "description": "Modified by property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CreateCompanyCategoryEloquent": {
                "title": "Create company category eloquent",
                "description": "Create company category eloquent",
                "required": [
                    "name",
                    "slug"
                ],
                "properties": {
                    "name": {
                        "$ref": "#/components/schemas/CompanyCategoryEloquent/properties/name"
                    },
                    "slug": {
                        "$ref": "#/components/schemas/CompanyCategoryEloquent/properties/slug"
                    },
                    "description": {
                        "$ref": "#/components/schemas/CompanyCategoryEloquent/properties/description"
                    }
                },
                "type": "object"
            },
            "UpdateCompanyCategoryEloquent": {
                "title": "Update company category eloquent",
                "description": "Update company category eloquent",
                "required": [
                    "id",
                    "name",
                    "slug"
                ],
                "allOf": [
                    {
                        "properties": {
                            "id": {
                                "description": "Id property",
                                "type": "integer",
                                "format": "int64",
                                "example": 1
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/CreateCompanyCategoryEloquent"
                    }
                ]
            },
            "ContractTypeEloquent": {
                "title": "Contract type eloquent",
                "description": "Contract type eloquent",
                "required": [
                    "name",
                    "slug"
                ],
                "properties": {
                    "name": {
                        "description": "Name property",
                        "type": "string"
                    },
                    "slug": {
                        "description": "Slug property",
                        "type": "string"
                    },
                    "description": {
                        "description": "Description property",
                        "type": "string"
                    },
                    "is_active": {
                        "description": "Is active property (active = 1; not active = 0)",
                        "type": "integer",
                        "format": "int32",
                        "example": 1
                    },
                    "created_by": {
                        "description": "Created by property",
                        "type": "string"
                    },
                    "modified_by": {
                        "description": "Modified by property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CreateContractTypeEloquent": {
                "title": "Create contract type eloquent",
                "description": "Create contract type eloquent",
                "required": [
                    "name",
                    "slug"
                ],
                "properties": {
                    "name": {
                        "$ref": "#/components/schemas/ContractTypeEloquent/properties/name"
                    },
                    "slug": {
                        "$ref": "#/components/schemas/ContractTypeEloquent/properties/slug"
                    },
                    "description": {
                        "$ref": "#/components/schemas/ContractTypeEloquent/properties/description"
                    }
                },
                "type": "object"
            },
            "UpdateContractTypeEloquent": {
                "title": "Update contract type eloquent",
                "description": "Update contract type eloquent",
                "required": [
                    "id",
                    "name",
                    "slug"
                ],
                "allOf": [
                    {
                        "properties": {
                            "id": {
                                "description": "Id property",
                                "type": "integer",
                                "format": "int64",
                                "example": 1
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/CreateContractTypeEloquent"
                    }
                ]
            },
            "DegreeEloquent": {
                "title": "Degree eloquent",
                "description": "Degree eloquent",
                "required": [
                    "name",
                    "slug"
                ],
                "properties": {
                    "name": {
                        "description": "Name property",
                        "type": "string"
                    },
                    "slug": {
                        "description": "Slug property",
                        "type": "string"
                    },
                    "description": {
                        "description": "Description property",
                        "type": "string"
                    },
                    "is_active": {
                        "description": "Is active property (active = 1; not active = 0)",
                        "type": "integer",
                        "format": "int32",
                        "example": 1
                    },
                    "created_by": {
                        "description": "Created by property",
                        "type": "string"
                    },
                    "modified_by": {
                        "description": "Modified by property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CreateDegreeEloquent": {
                "title": "Create degree eloquent",
                "description": "Create degree eloquent",
                "required": [
                    "name",
                    "slug"
                ],
                "properties": {
                    "name": {
                        "$ref": "#/components/schemas/DegreeEloquent/properties/name"
                    },
                    "slug": {
                        "$ref": "#/components/schemas/DegreeEloquent/properties/slug"
                    },
                    "description": {
                        "$ref": "#/components/schemas/DegreeEloquent/properties/description"
                    }
                },
                "type": "object"
            },
            "UpdateDegreeEloquent": {
                "title": "Update degree eloquent",
                "description": "Update degree eloquent",
                "required": [
                    "id",
                    "name",
                    "slug"
                ],
                "allOf": [
                    {
                        "properties": {
                            "id": {
                                "description": "Id property",
                                "type": "integer",
                                "format": "int64",
                                "example": 1
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/CreateDegreeEloquent"
                    }
                ]
            },
            "EmployeeLoanTypeEloquent": {
                "title": "Employee loan type eloquent",
                "description": "Employee loan type eloquent",
                "required": [
                    "name",
                    "slug"
                ],
                "properties": {
                    "name": {
                        "description": "Name property",
                        "type": "string"
                    },
                    "slug": {
                        "description": "Slug property",
                        "type": "string"
                    },
                    "description": {
                        "description": "Description property",
                        "type": "string"
                    },
                    "is_active": {
                        "description": "Is active property (active = 1; not active = 0)",
                        "type": "integer",
                        "format": "int32",
                        "example": 1
                    },
                    "created_by": {
                        "description": "Created by property",
                        "type": "string"
                    },
                    "modified_by": {
                        "description": "Modified by property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CreateEmployeeLoanTypeEloquent": {
                "title": "Create employee loan type eloquent",
                "description": "Create employee loan type eloquent",
                "required": [
                    "name",
                    "slug"
                ],
                "properties": {
                    "name": {
                        "$ref": "#/components/schemas/EmployeeLoanTypeEloquent/properties/name"
                    },
                    "slug": {
                        "$ref": "#/components/schemas/EmployeeLoanTypeEloquent/properties/slug"
                    },
                    "description": {
                        "$ref": "#/components/schemas/EmployeeLoanTypeEloquent/properties/description"
                    }
                },
                "type": "object"
            },
            "UpdateEmployeeLoanTypeEloquent": {
                "title": "Update employee loan type eloquent",
                "description": "Update employee loan type eloquent",
                "required": [
                    "id",
                    "name",
                    "slug"
                ],
                "allOf": [
                    {
                        "properties": {
                            "id": {
                                "description": "Id property",
                                "type": "integer",
                                "format": "int64",
                                "example": 1
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/CreateEmployeeLoanTypeEloquent"
                    }
                ]
            },
            "EmployeeNumberScaleEloquent": {
                "title": "Employee number scale eloquent",
                "description": "Employee number scale eloquent",
                "required": [
                    "name",
                    "slug"
                ],
                "properties": {
                    "name": {
                        "description": "Name property",
                        "type": "string"
                    },
                    "slug": {
                        "description": "Slug property",
                        "type": "string"
                    },
                    "description": {
                        "description": "Description property",
                        "type": "string"
                    },
                    "is_active": {
                        "description": "Is active property (active = 1; not active = 0)",
                        "type": "integer",
                        "format": "int32",
                        "example": 1
                    },
                    "created_by": {
                        "description": "Created by property",
                        "type": "string"
                    },
                    "modified_by": {
                        "description": "Modified by property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CreateEmployeeNumberScaleEloquent": {
                "title": "Create employee number scale eloquent",
                "description": "Create employee number scale eloquent",
                "required": [
                    "name",
                    "slug"
                ],
                "properties": {
                    "name": {
                        "$ref": "#/components/schemas/EmployeeNumberScaleEloquent/properties/name"
                    },
                    "slug": {
                        "$ref": "#/components/schemas/EmployeeNumberScaleEloquent/properties/slug"
                    },
                    "description": {
                        "$ref": "#/components/schemas/EmployeeNumberScaleEloquent/properties/description"
                    }
                },
                "type": "object"
            },
            "UpdateEmployeeNumberScaleEloquent": {
                "title": "Update employee number scale eloquent",
                "description": "Update employee number scale eloquent",
                "required": [
                    "id",
                    "name",
                    "slug"
                ],
                "allOf": [
                    {
                        "properties": {
                            "id": {
                                "description": "Id property",
                                "type": "integer",
                                "format": "int64",
                                "example": 1
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/CreateEmployeeNumberScaleEloquent"
                    }
                ]
            },
            "GenderEloquent": {
                "title": "Gender eloquent",
                "description": "Gender eloquent",
                "required": [
                    "name",
                    "slug"
                ],
                "properties": {
                    "name": {
                        "description": "Name property",
                        "type": "string"
                    },
                    "slug": {
                        "description": "Slug property",
                        "type": "string"
                    },
                    "description": {
                        "description": "Description property",
                        "type": "string"
                    },
                    "is_active": {
                        "description": "Is active property (active = 1; not active = 0)",
                        "type": "integer",
                        "format": "int32",
                        "example": 1
                    },
                    "created_by": {
                        "description": "Created by property",
                        "type": "string"
                    },
                    "modified_by": {
                        "description": "Modified by property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CreateGenderEloquent": {
                "title": "Create gender eloquent",
                "description": "Create gender eloquent",
                "required": [
                    "name",
                    "slug"
                ],
                "properties": {
                    "name": {
                        "$ref": "#/components/schemas/GenderEloquent/properties/name"
                    },
                    "slug": {
                        "$ref": "#/components/schemas/GenderEloquent/properties/slug"
                    },
                    "description": {
                        "$ref": "#/components/schemas/GenderEloquent/properties/description"
                    }
                },
                "type": "object"
            },
            "UpdateGenderEloquent": {
                "title": "Update gender eloquent",
                "description": "Update gender eloquent",
                "required": [
                    "id",
                    "name",
                    "slug"
                ],
                "allOf": [
                    {
                        "properties": {
                            "id": {
                                "description": "Id property",
                                "type": "integer",
                                "format": "int64",
                                "example": 1
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/CreateGenderEloquent"
                    }
                ]
            },
            "GroupEloquent": {
                "title": "Group eloquent",
                "description": "Group eloquent",
                "required": [
                    "name",
                    "slug",
                    "description",
                    "is_active"
                ],
                "properties": {
                    "name": {
                        "description": "Name property",
                        "type": "string"
                    },
                    "slug": {
                        "description": "Slug property",
                        "type": "string"
                    },
                    "description": {
                        "description": "Description property",
                        "type": "string"
                    },
                    "is_active": {
                        "description": "Is active property (active = 1; not active = 0)",
                        "type": "integer",
                        "format": "int32",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "CreateGroupEloquent": {
                "title": "Create group eloquent",
                "description": "Create group eloquent",
                "required": [
                    "name",
                    "slug",
                    "description",
                    "is_active"
                ],
                "properties": {
                    "name": {
                        "$ref": "#/components/schemas/GroupEloquent/properties/name"
                    },
                    "slug": {
                        "$ref": "#/components/schemas/GroupEloquent/properties/slug"
                    },
                    "description": {
                        "$ref": "#/components/schemas/GroupEloquent/properties/description"
                    },
                    "is_active": {
                        "$ref": "#/components/schemas/GroupEloquent/properties/is_active"
                    }
                },
                "type": "object"
            },
            "UpdateGroupEloquent": {
                "title": "Update group eloquent",
                "description": "Update group eloquent",
                "required": [
                    "name",
                    "slug",
                    "description",
                    "is_active"
                ],
                "allOf": [
                    {
                        "properties": {
                            "id": {
                                "description": "Id property",
                                "type": "integer",
                                "format": "int64",
                                "example": 1
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/CreateGroupEloquent"
                    }
                ]
            },
            "MajorEloquent": {
                "title": "Major eloquent",
                "description": "Najor eloquent",
                "required": [
                    "name",
                    "slug"
                ],
                "properties": {
                    "name": {
                        "description": "Name property",
                        "type": "string"
                    },
                    "slug": {
                        "description": "Slug property",
                        "type": "string"
                    },
                    "description": {
                        "description": "Description property",
                        "type": "string"
                    },
                    "is_active": {
                        "description": "Is active property (active = 1; not active = 0)",
                        "type": "integer",
                        "format": "int32",
                        "example": 1
                    },
                    "created_by": {
                        "description": "Created by property",
                        "type": "string"
                    },
                    "modified_by": {
                        "description": "Modified by property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CreateMajorEloquent": {
                "title": "Create major eloquent",
                "description": "Create major eloquent",
                "required": [
                    "name",
                    "slug"
                ],
                "properties": {
                    "name": {
                        "$ref": "#/components/schemas/MajorEloquent/properties/name"
                    },
                    "slug": {
                        "$ref": "#/components/schemas/MajorEloquent/properties/slug"
                    },
                    "description": {
                        "$ref": "#/components/schemas/MajorEloquent/properties/description"
                    }
                },
                "type": "object"
            },
            "UpdateMajorEloquent": {
                "title": "Update major eloquent",
                "description": "Update major eloquent",
                "required": [
                    "id",
                    "name",
                    "slug"
                ],
                "allOf": [
                    {
                        "properties": {
                            "id": {
                                "description": "Id property",
                                "type": "integer",
                                "format": "int64",
                                "example": 1
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/CreateMajorEloquent"
                    }
                ]
            },
            "MaritalStatusEloquent": {
                "title": "Marital status eloquent",
                "description": "Marital status eloquent",
                "required": [
                    "name",
                    "slug"
                ],
                "properties": {
                    "name": {
                        "description": "Name property",
                        "type": "string"
                    },
                    "slug": {
                        "description": "Slug property",
                        "type": "string"
                    },
                    "description": {
                        "description": "Description property",
                        "type": "string"
                    },
                    "is_active": {
                        "description": "Is active property (active = 1; not active = 0)",
                        "type": "integer",
                        "format": "int32",
                        "example": 1
                    },
                    "created_by": {
                        "description": "Created by property",
                        "type": "string"
                    },
                    "modified_by": {
                        "description": "Modified by property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CreateMaritalStatusEloquent": {
                "title": "Create marital status eloquent",
                "description": "Create marital status eloquent",
                "required": [
                    "name",
                    "slug"
                ],
                "properties": {
                    "name": {
                        "$ref": "#/components/schemas/MaritalStatusEloquent/properties/name"
                    },
                    "slug": {
                        "$ref": "#/components/schemas/MaritalStatusEloquent/properties/slug"
                    },
                    "description": {
                        "$ref": "#/components/schemas/MaritalStatusEloquent/properties/description"
                    }
                },
                "type": "object"
            },
            "UpdateMaritalStatusEloquent": {
                "title": "Update marital status eloquent",
                "description": "Update marital status eloquent",
                "required": [
                    "id",
                    "name",
                    "slug"
                ],
                "allOf": [
                    {
                        "properties": {
                            "id": {
                                "description": "Id property",
                                "type": "integer",
                                "format": "int64",
                                "example": 1
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/CreateMaritalStatusEloquent"
                    }
                ]
            },
            "OfficeEloquent": {
                "title": "Office eloquent",
                "description": "Office eloquent",
                "required": [
                    "company_id",
                    "name",
                    "slug",
                    "type",
                    "country",
                    "state_or_province",
                    "city",
                    "address",
                    "phone"
                ],
                "properties": {
                    "company_id": {
                        "description": "Company id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "description": "Name property",
                        "type": "string"
                    },
                    "slug": {
                        "description": "Slug property",
                        "type": "string"
                    },
                    "type": {
                        "description": "Type property",
                        "type": "string",
                        "enum": [
                            "HEAD",
                            "BRANCH"
                        ],
                        "example": "HEAD"
                    },
                    "country": {
                        "description": "Country property",
                        "type": "string"
                    },
                    "state_or_province": {
                        "description": "State or province property",
                        "type": "string"
                    },
                    "city": {
                        "description": "City property",
                        "type": "string"
                    },
                    "address": {
                        "description": "Address property",
                        "type": "string"
                    },
                    "postcode": {
                        "description": "Postcode property",
                        "type": "string"
                    },
                    "phone": {
                        "description": "Phone property",
                        "type": "string"
                    },
                    "fax": {
                        "description": "Fax property",
                        "type": "string"
                    },
                    "email": {
                        "description": "Email property",
                        "type": "string"
                    },
                    "latitude": {
                        "description": "Latitude property",
                        "type": "float"
                    },
                    "longitude": {
                        "description": "Longitude property",
                        "type": "float"
                    },
                    "is_active": {
                        "description": "Is active property (active = 1; not active = 0)",
                        "type": "integer",
                        "format": "int32",
                        "example": 1
                    },
                    "created_by": {
                        "description": "Created by property",
                        "type": "string"
                    },
                    "modified_by": {
                        "description": "Modified by property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CreateOfficeEloquent": {
                "title": "Create office eloquent",
                "description": "Create office eloquent",
                "required": [
                    "company_id",
                    "name",
                    "slug",
                    "type",
                    "country",
                    "state_or_province",
                    "city",
                    "address",
                    "phone"
                ],
                "properties": {
                    "company_id": {
                        "$ref": "#/components/schemas/OfficeEloquent/properties/company_id"
                    },
                    "name": {
                        "$ref": "#/components/schemas/OfficeEloquent/properties/name"
                    },
                    "slug": {
                        "$ref": "#/components/schemas/OfficeEloquent/properties/slug"
                    },
                    "type": {
                        "$ref": "#/components/schemas/OfficeEloquent/properties/type"
                    },
                    "country": {
                        "$ref": "#/components/schemas/OfficeEloquent/properties/country"
                    },
                    "state_or_province": {
                        "$ref": "#/components/schemas/OfficeEloquent/properties/state_or_province"
                    },
                    "city": {
                        "$ref": "#/components/schemas/OfficeEloquent/properties/city"
                    },
                    "address": {
                        "$ref": "#/components/schemas/OfficeEloquent/properties/address"
                    },
                    "postcode": {
                        "$ref": "#/components/schemas/OfficeEloquent/properties/postcode"
                    },
                    "phone": {
                        "$ref": "#/components/schemas/OfficeEloquent/properties/phone"
                    },
                    "fax": {
                        "$ref": "#/components/schemas/OfficeEloquent/properties/fax"
                    },
                    "email": {
                        "$ref": "#/components/schemas/OfficeEloquent/properties/email"
                    },
                    "latitude": {
                        "$ref": "#/components/schemas/OfficeEloquent/properties/latitude"
                    },
                    "longitude": {
                        "$ref": "#/components/schemas/OfficeEloquent/properties/longitude"
                    }
                },
                "type": "object"
            },
            "UpdateOfficeEloquent": {
                "title": "Update office eloquent",
                "description": "Update office eloquent",
                "required": [
                    "id",
                    "company_id",
                    "name",
                    "slug",
                    "type",
                    "country",
                    "state_or_province",
                    "city",
                    "address",
                    "phone"
                ],
                "allOf": [
                    {
                        "properties": {
                            "id": {
                                "description": "Id property",
                                "type": "integer",
                                "format": "int64",
                                "example": 1
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/CreateOfficeEloquent"
                    }
                ]
            },
            "PermissionEloquent": {
                "title": "Permission eloquent",
                "description": "Permission eloquent",
                "required": [
                    "name",
                    "slug",
                    "server",
                    "path"
                ],
                "properties": {
                    "name": {
                        "description": "Name property",
                        "type": "string"
                    },
                    "slug": {
                        "description": "Slug property",
                        "type": "string"
                    },
                    "server": {
                        "description": "Server property",
                        "type": "string"
                    },
                    "path": {
                        "description": "Path property",
                        "type": "string"
                    },
                    "description": {
                        "description": "Description property",
                        "type": "string"
                    },
                    "is_active": {
                        "description": "Is active property (active = 1; not active = 0)",
                        "type": "integer",
                        "format": "int32",
                        "example": 1
                    },
                    "created_by": {
                        "description": "Created by property",
                        "type": "string"
                    },
                    "modified_by": {
                        "description": "Modified by property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CreatePermissionEloquent": {
                "title": "Create permission eloquent",
                "description": "Create permission eloquent",
                "required": [
                    "name",
                    "slug",
                    "server",
                    "path"
                ],
                "properties": {
                    "name": {
                        "$ref": "#/components/schemas/PermissionEloquent/properties/name"
                    },
                    "slug": {
                        "$ref": "#/components/schemas/PermissionEloquent/properties/slug"
                    },
                    "server": {
                        "$ref": "#/components/schemas/PermissionEloquent/properties/server"
                    },
                    "path": {
                        "$ref": "#/components/schemas/PermissionEloquent/properties/path"
                    },
                    "description": {
                        "$ref": "#/components/schemas/PermissionEloquent/properties/description"
                    },
                    "is_active": {
                        "$ref": "#/components/schemas/PermissionEloquent/properties/is_active"
                    }
                },
                "type": "object"
            },
            "UpdatePermissionEloquent": {
                "title": "Update permission eloquent",
                "description": "Update permission eloquent",
                "required": [
                    "id",
                    "name",
                    "slug",
                    "server",
                    "path"
                ],
                "allOf": [
                    {
                        "properties": {
                            "id": {
                                "description": "Id property",
                                "type": "integer",
                                "format": "int32",
                                "example": 1
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/CreatePermissionEloquent"
                    }
                ]
            },
            "UpdatePermissionAccessEloquent": {
                "title": "Update permission access eloquent",
                "description": "Update permission access eloquent",
                "required": [
                    "id"
                ],
                "properties": {
                    "id": {
                        "description": "Id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "access_ids": {
                        "description": "Access ids property",
                        "example": [
                            [
                                1,
                                "READ",
                                "ALLOW"
                            ],
                            [
                                2,
                                "WRITE",
                                "DENY"
                            ]
                        ]
                    }
                },
                "type": "object"
            },
            "ReligionEloquent": {
                "title": "Religion eloquent",
                "description": "Religion eloquent",
                "required": [
                    "name",
                    "slug"
                ],
                "properties": {
                    "name": {
                        "description": "Name property",
                        "type": "string"
                    },
                    "slug": {
                        "description": "Slug property",
                        "type": "string"
                    },
                    "description": {
                        "description": "Description property",
                        "type": "string"
                    },
                    "is_active": {
                        "description": "Is active property (active = 1; not active = 0)",
                        "type": "integer",
                        "format": "int32",
                        "example": 1
                    },
                    "created_by": {
                        "description": "Created by property",
                        "type": "string"
                    },
                    "modified_by": {
                        "description": "Modified by property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CreateReligionEloquent": {
                "title": "Create religion eloquent",
                "description": "Create religion eloquent",
                "required": [
                    "name",
                    "slug"
                ],
                "properties": {
                    "name": {
                        "$ref": "#/components/schemas/ReligionEloquent/properties/name"
                    },
                    "slug": {
                        "$ref": "#/components/schemas/ReligionEloquent/properties/slug"
                    },
                    "description": {
                        "$ref": "#/components/schemas/ReligionEloquent/properties/description"
                    }
                },
                "type": "object"
            },
            "UpdateReligionEloquent": {
                "title": "Update religion eloquent",
                "description": "Update religion eloquent",
                "required": [
                    "id",
                    "name",
                    "slug"
                ],
                "allOf": [
                    {
                        "properties": {
                            "id": {
                                "description": "Id property",
                                "type": "integer",
                                "format": "int64",
                                "example": 1
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/CreateReligionEloquent"
                    }
                ]
            },
            "RoleEloquent": {
                "title": "Role eloquent",
                "description": "Role eloquent",
                "required": [
                    "name",
                    "slug"
                ],
                "properties": {
                    "group_id": {
                        "description": "Group id property",
                        "type": "integer",
                        "format": "int32",
                        "example": 1
                    },
                    "name": {
                        "description": "Name property",
                        "type": "string"
                    },
                    "slug": {
                        "description": "Slug property",
                        "type": "string"
                    },
                    "description": {
                        "description": "Description property",
                        "type": "string"
                    },
                    "is_active": {
                        "description": "Is active property (active = 1; not active = 0)",
                        "type": "integer",
                        "format": "int32",
                        "example": 1
                    },
                    "created_by": {
                        "description": "Created by property",
                        "type": "string"
                    },
                    "modified_by": {
                        "description": "Modified by property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CreateRoleEloquent": {
                "title": "Create role eloquent",
                "description": "Create role eloquent",
                "required": [
                    "group_id",
                    "name",
                    "slug",
                    "description",
                    "is_active"
                ],
                "properties": {
                    "group_id": {
                        "$ref": "#/components/schemas/RoleEloquent/properties/group_id"
                    },
                    "name": {
                        "$ref": "#/components/schemas/RoleEloquent/properties/name"
                    },
                    "slug": {
                        "$ref": "#/components/schemas/RoleEloquent/properties/slug"
                    },
                    "description": {
                        "$ref": "#/components/schemas/RoleEloquent/properties/description"
                    },
                    "is_active": {
                        "$ref": "#/components/schemas/RoleEloquent/properties/is_active"
                    }
                },
                "type": "object"
            },
            "UpdateRoleEloquent": {
                "title": "Update role eloquent",
                "description": "Update role eloquent",
                "required": [
                    "id",
                    "name",
                    "slug"
                ],
                "allOf": [
                    {
                        "properties": {
                            "id": {
                                "description": "Id property",
                                "type": "integer",
                                "format": "int32",
                                "example": 1
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/CreateRoleEloquent"
                    }
                ]
            },
            "UpdateRolePermissionEloquent": {
                "title": "Update role permission eloquent",
                "description": "Update role permission eloquent",
                "required": [
                    "id"
                ],
                "properties": {
                    "id": {
                        "description": "Id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "permission_ids": {
                        "description": "Permission ids property",
                        "example": [
                            [
                                1,
                                "READ",
                                "ALLOW"
                            ],
                            [
                                2,
                                "WRITE",
                                "DENY"
                            ]
                        ]
                    }
                },
                "type": "object"
            },
            "SkillEloquent": {
                "title": "Skill eloquent",
                "description": "Skill eloquent",
                "required": [
                    "name",
                    "slug"
                ],
                "properties": {
                    "name": {
                        "description": "Name property",
                        "type": "string"
                    },
                    "slug": {
                        "description": "Slug property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CreateSkillEloquent": {
                "title": "Create gender eloquent",
                "description": "Create gender eloquent",
                "required": [
                    "name",
                    "slug"
                ],
                "properties": {
                    "name": {
                        "$ref": "#/components/schemas/SkillEloquent/properties/name"
                    },
                    "slug": {
                        "$ref": "#/components/schemas/SkillEloquent/properties/slug"
                    }
                },
                "type": "object"
            },
            "UpdateSkillEloquent": {
                "title": "Update gender eloquent",
                "description": "Update gender eloquent",
                "required": [
                    "id",
                    "name",
                    "slug"
                ],
                "allOf": [
                    {
                        "properties": {
                            "id": {
                                "description": "Id property",
                                "type": "integer",
                                "format": "int64",
                                "example": 1
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/CreateSkillEloquent"
                    }
                ]
            },
            "VacancyCategoryEloquent": {
                "title": "VacancyCategory eloquent",
                "description": "VacancyCategory eloquent",
                "required": [
                    "name",
                    "slug"
                ],
                "properties": {
                    "name": {
                        "description": "Name property",
                        "type": "string"
                    },
                    "slug": {
                        "description": "Slug property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CreateVacancyCategoryEloquent": {
                "title": "Create gender eloquent",
                "description": "Create gender eloquent",
                "required": [
                    "name",
                    "slug"
                ],
                "properties": {
                    "name": {
                        "$ref": "#/components/schemas/VacancyCategoryEloquent/properties/name"
                    },
                    "slug": {
                        "$ref": "#/components/schemas/VacancyCategoryEloquent/properties/slug"
                    }
                },
                "type": "object"
            },
            "UpdateVacancyCategoryEloquent": {
                "title": "Update gender eloquent",
                "description": "Update gender eloquent",
                "required": [
                    "id",
                    "name",
                    "slug"
                ],
                "allOf": [
                    {
                        "properties": {
                            "id": {
                                "description": "Id property",
                                "type": "integer",
                                "format": "int64",
                                "example": 1
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/CreateVacancyCategoryEloquent"
                    }
                ]
            },
            "VacancyLocationEloquent": {
                "title": "VacancyLocation eloquent",
                "description": "VacancyLocation eloquent",
                "required": [
                    "name",
                    "slug"
                ],
                "properties": {
                    "name": {
                        "description": "Name property",
                        "type": "string"
                    },
                    "slug": {
                        "description": "Slug property",
                        "type": "string"
                    },
                    "country": {
                        "description": "Country property",
                        "type": "string"
                    },
                    "_lft": {
                        "description": "_lft property",
                        "type": "integer",
                        "example": 1
                    },
                    "_rgt": {
                        "description": "_rgt property",
                        "type": "integer",
                        "example": 1
                    },
                    "parent_id": {
                        "description": "Parent id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "CreateVacancyLocationEloquent": {
                "title": "Create gender eloquent",
                "description": "Create gender eloquent",
                "required": [
                    "name",
                    "slug",
                    "_lft",
                    "_rgt",
                    "parent_id"
                ],
                "properties": {
                    "name": {
                        "$ref": "#/components/schemas/VacancyLocationEloquent/properties/name"
                    },
                    "slug": {
                        "$ref": "#/components/schemas/VacancyLocationEloquent/properties/slug"
                    },
                    "country": {
                        "$ref": "#/components/schemas/VacancyLocationEloquent/properties/country"
                    },
                    "_lft": {
                        "$ref": "#/components/schemas/VacancyLocationEloquent/properties/_lft"
                    },
                    "_rgt": {
                        "$ref": "#/components/schemas/VacancyLocationEloquent/properties/_rgt"
                    },
                    "parent_id": {
                        "$ref": "#/components/schemas/VacancyLocationEloquent/properties/parent_id"
                    }
                },
                "type": "object"
            },
            "UpdateVacancyLocationEloquent": {
                "title": "Update gender eloquent",
                "description": "Update gender eloquent",
                "required": [
                    "id",
                    "name",
                    "slug",
                    "_lft",
                    "_rgt"
                ],
                "allOf": [
                    {
                        "properties": {
                            "id": {
                                "description": "Id property",
                                "type": "integer",
                                "format": "int64",
                                "example": 1
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/CreateVacancyLocationEloquent"
                    }
                ]
            },
            "ElementEloquent": {
                "title": "Element eloquent",
                "description": "Element eloquent",
                "required": [
                    "code",
                    "name",
                    "slug"
                ],
                "properties": {
                    "code": {
                        "description": "Code property",
                        "type": "string"
                    },
                    "name": {
                        "description": "Name property",
                        "type": "string"
                    },
                    "slug": {
                        "description": "Slug property",
                        "type": "string"
                    },
                    "formula_id": {
                        "description": "Formula id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "seq_no": {
                        "description": "Seq number property",
                        "type": "string"
                    },
                    "created_by": {
                        "description": "Created by property",
                        "type": "string"
                    },
                    "modified_by": {
                        "description": "Modified by property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CreateElementEloquent": {
                "title": "Create element eloquent",
                "description": "Create element eloquent",
                "required": [
                    "code",
                    "name",
                    "slug"
                ],
                "properties": {
                    "code": {
                        "$ref": "#/components/schemas/ElementEloquent/properties/code"
                    },
                    "name": {
                        "$ref": "#/components/schemas/ElementEloquent/properties/name"
                    },
                    "slug": {
                        "$ref": "#/components/schemas/ElementEloquent/properties/slug"
                    },
                    "seq_no": {
                        "$ref": "#/components/schemas/ElementEloquent/properties/seq_no"
                    }
                },
                "type": "object"
            },
            "UpdateElementEloquent": {
                "title": "Update element eloquent",
                "description": "Update element eloquent",
                "required": [
                    "id",
                    "code",
                    "name",
                    "slug"
                ],
                "allOf": [
                    {
                        "properties": {
                            "id": {
                                "description": "Id property",
                                "type": "integer",
                                "format": "int64",
                                "example": 1
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/CreateElementEloquent"
                    }
                ]
            },
            "ElementEntryEloquent": {
                "title": "Element entry eloquent",
                "description": "Element entry eloquent",
                "required": [
                    "element_id",
                    "employee_id",
                    "effective_start_date",
                    "effective_end_date"
                ],
                "properties": {
                    "element_id": {
                        "description": "Element id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "employee_id": {
                        "description": "Employee id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "effective_start_date": {
                        "description": "Effective start date property",
                        "type": "string",
                        "format": "date-time"
                    },
                    "effective_end_date": {
                        "description": "Effective end date property",
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_by": {
                        "description": "Created by property",
                        "type": "string"
                    },
                    "modified_by": {
                        "description": "Modified by property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CreateElementEntryEloquent": {
                "title": "Create element entry eloquent",
                "description": "Create element entry eloquent",
                "required": [
                    "element_id",
                    "employee_id",
                    "effective_start_date",
                    "effective_end_date"
                ],
                "properties": {
                    "element_id": {
                        "$ref": "#/components/schemas/ElementEntryEloquent/properties/element_id"
                    },
                    "employee_id": {
                        "$ref": "#/components/schemas/ElementEntryEloquent/properties/employee_id"
                    },
                    "effective_start_date": {
                        "$ref": "#/components/schemas/ElementEntryEloquent/properties/effective_start_date"
                    },
                    "effective_end_date": {
                        "$ref": "#/components/schemas/ElementEntryEloquent/properties/effective_end_date"
                    }
                },
                "type": "object"
            },
            "UpdateElementEntryEloquent": {
                "title": "Update element entry eloquent",
                "description": "Update element entry eloquent",
                "required": [
                    "id",
                    "element_id",
                    "employee_id",
                    "effective_start_date",
                    "effective_end_date"
                ],
                "allOf": [
                    {
                        "properties": {
                            "id": {
                                "description": "Id property",
                                "type": "integer",
                                "format": "int64",
                                "example": 1
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/CreateElementEntryEloquent"
                    }
                ]
            },
            "ElementEntryValueEloquent": {
                "title": "Element entry value eloquent",
                "description": "Element entry value eloquent",
                "required": [
                    "element_entry_id",
                    "element_value_id",
                    "effective_start_date",
                    "effective_end_date",
                    "value"
                ],
                "properties": {
                    "element_entry_id": {
                        "description": "Element entry id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "element_value_id": {
                        "description": "Element value id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "effective_start_date": {
                        "description": "Effective start date property",
                        "type": "string",
                        "format": "date-time"
                    },
                    "effective_end_date": {
                        "description": "Effective end date property",
                        "type": "string",
                        "format": "date-time"
                    },
                    "value": {
                        "description": "Value property",
                        "type": "float",
                        "example": 100
                    },
                    "created_by": {
                        "description": "Created by property",
                        "type": "string"
                    },
                    "modified_by": {
                        "description": "Modified by property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CreateElementEntryValueEloquent": {
                "title": "Create element entry value eloquent",
                "description": "Create element entry value eloquent",
                "required": [
                    "element_entry_id",
                    "element_value_id",
                    "effective_start_date",
                    "effective_end_date",
                    "value"
                ],
                "properties": {
                    "element_entry_id": {
                        "$ref": "#/components/schemas/ElementEntryValueEloquent/properties/element_entry_id"
                    },
                    "element_value_id": {
                        "$ref": "#/components/schemas/ElementEntryValueEloquent/properties/element_value_id"
                    },
                    "effective_start_date": {
                        "$ref": "#/components/schemas/ElementEntryValueEloquent/properties/effective_start_date"
                    },
                    "effective_end_date": {
                        "$ref": "#/components/schemas/ElementEntryValueEloquent/properties/effective_end_date"
                    },
                    "value": {
                        "$ref": "#/components/schemas/ElementEntryValueEloquent/properties/value"
                    }
                },
                "type": "object"
            },
            "UpdateElementEntryValueEloquent": {
                "title": "Update element entry value eloquent",
                "description": "Update element entry value eloquent",
                "required": [
                    "id",
                    "element_entry_id",
                    "element_value_id",
                    "effective_start_date",
                    "effective_end_date",
                    "value"
                ],
                "allOf": [
                    {
                        "properties": {
                            "id": {
                                "description": "Id property",
                                "type": "integer",
                                "format": "int64",
                                "example": 1
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/CreateElementEntryValueEloquent"
                    }
                ]
            },
            "ElementValueEloquent": {
                "title": "Element value eloquent",
                "description": "Element value eloquent",
                "required": [
                    "element_id",
                    "code",
                    "name",
                    "slug",
                    "value",
                    "seq_no"
                ],
                "properties": {
                    "element_id": {
                        "description": "Element id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "code": {
                        "description": "Code property",
                        "type": "string"
                    },
                    "name": {
                        "description": "Name property",
                        "type": "string"
                    },
                    "slug": {
                        "description": "Slug property",
                        "type": "string"
                    },
                    "value": {
                        "description": "Value property",
                        "type": "float",
                        "example": "100"
                    },
                    "seq_no": {
                        "description": "Seq number property",
                        "type": "string"
                    },
                    "created_by": {
                        "description": "Created by property",
                        "type": "string"
                    },
                    "modified_by": {
                        "description": "Modified by property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CreateElementValueEloquent": {
                "title": "Create element value eloquent",
                "description": "Create element value eloquent",
                "required": [
                    "element_id",
                    "code",
                    "name",
                    "slug",
                    "value",
                    "seq_no"
                ],
                "properties": {
                    "element_id": {
                        "$ref": "#/components/schemas/ElementValueEloquent/properties/element_id"
                    },
                    "code": {
                        "$ref": "#/components/schemas/ElementValueEloquent/properties/code"
                    },
                    "name": {
                        "$ref": "#/components/schemas/ElementValueEloquent/properties/name"
                    },
                    "slug": {
                        "$ref": "#/components/schemas/ElementValueEloquent/properties/slug"
                    },
                    "value": {
                        "$ref": "#/components/schemas/ElementValueEloquent/properties/value"
                    },
                    "seq_no": {
                        "$ref": "#/components/schemas/ElementValueEloquent/properties/seq_no"
                    }
                },
                "type": "object"
            },
            "UpdateElementValueEloquent": {
                "title": "Update element value eloquent",
                "description": "Update element value eloquent",
                "required": [
                    "id",
                    "element_id",
                    "code",
                    "name",
                    "slug",
                    "value",
                    "seq_no"
                ],
                "allOf": [
                    {
                        "properties": {
                            "id": {
                                "description": "Id property",
                                "type": "integer",
                                "format": "int64",
                                "example": 1
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/CreateElementValueEloquent"
                    }
                ]
            },
            "FormulaCategoryEloquent": {
                "title": "Formula category eloquent",
                "description": "Formula category eloquent",
                "required": [
                    "name",
                    "slug"
                ],
                "properties": {
                    "name": {
                        "description": "Name property",
                        "type": "string"
                    },
                    "slug": {
                        "description": "Slug property",
                        "type": "string"
                    },
                    "description": {
                        "description": "Description property",
                        "type": "string"
                    },
                    "created_by": {
                        "description": "Created by property",
                        "type": "string"
                    },
                    "modified_by": {
                        "description": "Modified by property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CreateFormulaCategoryEloquent": {
                "title": "Create formula category eloquent",
                "description": "Create formula category eloquent",
                "required": [
                    "name",
                    "slug"
                ],
                "properties": {
                    "name": {
                        "$ref": "#/components/schemas/FormulaCategoryEloquent/properties/name"
                    },
                    "slug": {
                        "$ref": "#/components/schemas/FormulaCategoryEloquent/properties/slug"
                    },
                    "description": {
                        "$ref": "#/components/schemas/FormulaCategoryEloquent/properties/description"
                    }
                },
                "type": "object"
            },
            "UpdateFormulaCategoryEloquent": {
                "title": "Update formula category eloquent",
                "description": "Update formula category eloquent",
                "required": [
                    "id",
                    "name",
                    "slug"
                ],
                "allOf": [
                    {
                        "properties": {
                            "id": {
                                "description": "Id property",
                                "type": "integer",
                                "format": "int64",
                                "example": 1
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/CreateFormulaCategoryEloquent"
                    }
                ]
            },
            "FormulaEloquent": {
                "title": "Formula eloquent",
                "description": "Formula eloquent",
                "required": [
                    "formula_category_id",
                    "name",
                    "slug",
                    "type"
                ],
                "properties": {
                    "formula_category_id": {
                        "description": "Formula category id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "description": "Name property",
                        "type": "string"
                    },
                    "slug": {
                        "description": "Slug property",
                        "type": "string"
                    },
                    "type": {
                        "description": "Type property",
                        "type": "string"
                    },
                    "description": {
                        "description": "Description property",
                        "type": "string"
                    },
                    "created_by": {
                        "description": "Created by property",
                        "type": "string"
                    },
                    "modified_by": {
                        "description": "Modified by property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CreateFormulaEloquent": {
                "title": "Create formula eloquent",
                "description": "Create formula eloquent",
                "required": [
                    "formula_category_id",
                    "name",
                    "slug",
                    "type"
                ],
                "properties": {
                    "formula_category_id": {
                        "$ref": "#/components/schemas/FormulaEloquent/properties/formula_category_id"
                    },
                    "name": {
                        "$ref": "#/components/schemas/FormulaEloquent/properties/name"
                    },
                    "slug": {
                        "$ref": "#/components/schemas/FormulaEloquent/properties/slug"
                    },
                    "type": {
                        "$ref": "#/components/schemas/FormulaEloquent/properties/type"
                    },
                    "description": {
                        "$ref": "#/components/schemas/FormulaEloquent/properties/description"
                    }
                },
                "type": "object"
            },
            "UpdateFormulaEloquent": {
                "title": "Update formula eloquent",
                "description": "Update formula eloquent",
                "required": [
                    "id",
                    "formula_category_id",
                    "name",
                    "slug",
                    "type"
                ],
                "allOf": [
                    {
                        "properties": {
                            "id": {
                                "description": "Id property",
                                "type": "integer",
                                "format": "int64",
                                "example": 1
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/CreateFormulaEloquent"
                    }
                ]
            },
            "AdditionalQuestionEloquent": {
                "title": "Additional Question eloquent",
                "description": "Additional Question eloquent",
                "required": [
                    "company_id",
                    "question",
                    "is_required",
                    "status"
                ],
                "properties": {
                    "company_id": {
                        "description": "Company id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "question": {
                        "description": "Question property",
                        "type": "string"
                    },
                    "is_required": {
                        "description": "Is required property (required = 1; not required = 0)",
                        "type": "integer",
                        "format": "int32",
                        "example": 1
                    },
                    "status": {
                        "description": "Status property",
                        "type": "string",
                        "default": "",
                        "enum": [
                            "DRAFT",
                            "PUBLISH",
                            "PENDING"
                        ]
                    }
                },
                "type": "object"
            },
            "CreateAdditionalQuestionEloquent": {
                "title": "Create additional question eloquent",
                "description": "Create additional question eloquent",
                "required": [
                    "company_id",
                    "question",
                    "is_required",
                    "status"
                ],
                "properties": {
                    "company_id": {
                        "$ref": "#/components/schemas/AdditionalQuestionEloquent/properties/company_id"
                    },
                    "question": {
                        "$ref": "#/components/schemas/AdditionalQuestionEloquent/properties/question"
                    },
                    "is_required": {
                        "$ref": "#/components/schemas/AdditionalQuestionEloquent/properties/is_required"
                    },
                    "status": {
                        "$ref": "#/components/schemas/AdditionalQuestionEloquent/properties/status"
                    }
                },
                "type": "object"
            },
            "UpdateAdditionalQuestionEloquent": {
                "title": "Update additional question eloquent",
                "description": "Update additional question eloquent",
                "required": [
                    "id",
                    "company_id",
                    "question",
                    "is_required",
                    "status"
                ],
                "allOf": [
                    {
                        "properties": {
                            "id": {
                                "description": "Id property",
                                "type": "integer",
                                "format": "int64",
                                "example": 1
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/CreateAdditionalQuestionEloquent"
                    }
                ]
            },
            "BaseSalaryCustomTypeEloquent": {
                "title": "Base salary custom type eloquent",
                "description": "Base salary custom type eloquent",
                "required": [
                    "name",
                    "slug"
                ],
                "properties": {
                    "company_id": {
                        "description": "Company id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "description": "Name property",
                        "type": "string"
                    },
                    "slug": {
                        "description": "Slug property",
                        "type": "string"
                    },
                    "description": {
                        "description": "Description property",
                        "type": "string"
                    },
                    "is_active": {
                        "description": "Is active property (active = 1; not active = 0)",
                        "type": "integer",
                        "format": "int32",
                        "example": 1
                    },
                    "created_by": {
                        "description": "Created by property",
                        "type": "string"
                    },
                    "modified_by": {
                        "description": "Modified by property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CreateBaseSalaryCustomTypeEloquent": {
                "title": "Create base salary custom type eloquent",
                "description": "Create base salary custom type eloquent",
                "required": [
                    "company_id",
                    "name",
                    "slug"
                ],
                "properties": {
                    "company_id": {
                        "$ref": "#/components/schemas/BaseSalaryCustomTypeEloquent/properties/company_id"
                    },
                    "name": {
                        "$ref": "#/components/schemas/BaseSalaryCustomTypeEloquent/properties/name"
                    },
                    "slug": {
                        "$ref": "#/components/schemas/BaseSalaryCustomTypeEloquent/properties/slug"
                    },
                    "description": {
                        "$ref": "#/components/schemas/BaseSalaryCustomTypeEloquent/properties/description"
                    }
                },
                "type": "object"
            },
            "UpdateBaseSalaryCustomTypeEloquent": {
                "title": "Update base salary custom type eloquent",
                "description": "Update base salary custom type eloquent",
                "required": [
                    "id",
                    "company_id",
                    "name",
                    "slug"
                ],
                "allOf": [
                    {
                        "properties": {
                            "id": {
                                "description": "Id property",
                                "type": "integer",
                                "format": "int64",
                                "example": 1
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/CreateBaseSalaryCustomTypeEloquent"
                    }
                ]
            },
            "CompetenceEloquent": {
                "title": "Competence eloquent",
                "description": "Competence eloquent",
                "required": [
                    "code",
                    "name",
                    "slug"
                ],
                "properties": {
                    "company_id": {
                        "description": "Company id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "code": {
                        "description": "Code property",
                        "type": "string"
                    },
                    "name": {
                        "description": "Name property",
                        "type": "string"
                    },
                    "slug": {
                        "description": "Slug property",
                        "type": "string"
                    },
                    "description": {
                        "description": "Description property",
                        "type": "string"
                    },
                    "is_active": {
                        "description": "Is active property (active = 1; not active = 0)",
                        "type": "integer",
                        "format": "int32",
                        "example": 1
                    },
                    "created_by": {
                        "description": "Created by property",
                        "type": "string"
                    },
                    "modified_by": {
                        "description": "Modified by property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CreateCompetenceEloquent": {
                "title": "Create competence eloquent",
                "description": "Create competence eloquent",
                "required": [
                    "company_id",
                    "code",
                    "name",
                    "slug"
                ],
                "properties": {
                    "company_id": {
                        "$ref": "#/components/schemas/CompetenceEloquent/properties/company_id"
                    },
                    "code": {
                        "$ref": "#/components/schemas/CompetenceEloquent/properties/code"
                    },
                    "name": {
                        "$ref": "#/components/schemas/CompetenceEloquent/properties/name"
                    },
                    "slug": {
                        "$ref": "#/components/schemas/CompetenceEloquent/properties/slug"
                    },
                    "description": {
                        "$ref": "#/components/schemas/CompetenceEloquent/properties/description"
                    }
                },
                "type": "object"
            },
            "UpdateCompetenceEloquent": {
                "title": "Update competence eloquent",
                "description": "Update competence eloquent",
                "required": [
                    "id",
                    "company_id",
                    "code",
                    "name",
                    "slug"
                ],
                "allOf": [
                    {
                        "properties": {
                            "id": {
                                "description": "Id property",
                                "type": "integer",
                                "format": "int64",
                                "example": 1
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/CreateCompetenceEloquent"
                    }
                ]
            },
            "GradeEloquent": {
                "title": "Grade eloquent",
                "description": "Grade eloquent",
                "required": [
                    "name",
                    "slug"
                ],
                "properties": {
                    "company_id": {
                        "description": "Company id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "description": "Name property",
                        "type": "string"
                    },
                    "slug": {
                        "description": "Slug property",
                        "type": "string"
                    },
                    "description": {
                        "description": "Description property",
                        "type": "string"
                    },
                    "is_active": {
                        "description": "Is active property (active = 1; not active = 0)",
                        "type": "integer",
                        "format": "int32",
                        "example": 1
                    },
                    "created_by": {
                        "description": "Created by property",
                        "type": "string"
                    },
                    "modified_by": {
                        "description": "Modified by property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CreateGradeEloquent": {
                "title": "Create grade eloquent",
                "description": "Create grade eloquent",
                "required": [
                    "company_id",
                    "name",
                    "slug"
                ],
                "properties": {
                    "company_id": {
                        "$ref": "#/components/schemas/GradeEloquent/properties/company_id"
                    },
                    "name": {
                        "$ref": "#/components/schemas/GradeEloquent/properties/name"
                    },
                    "slug": {
                        "$ref": "#/components/schemas/GradeEloquent/properties/slug"
                    },
                    "description": {
                        "$ref": "#/components/schemas/GradeEloquent/properties/description"
                    }
                },
                "type": "object"
            },
            "UpdateGradeEloquent": {
                "title": "Update grade eloquent",
                "description": "Update grade eloquent",
                "required": [
                    "id",
                    "company_id",
                    "name",
                    "slug"
                ],
                "allOf": [
                    {
                        "properties": {
                            "id": {
                                "description": "Id property",
                                "type": "integer",
                                "format": "int64",
                                "example": 1
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/CreateGradeEloquent"
                    }
                ]
            },
            "LetterTypeEloquent": {
                "title": "Letter type eloquent",
                "description": "Letter type eloquent",
                "required": [
                    "code",
                    "name",
                    "slug"
                ],
                "properties": {
                    "company_id": {
                        "description": "Company id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "code": {
                        "description": "Code property",
                        "type": "string"
                    },
                    "name": {
                        "description": "Name property",
                        "type": "string"
                    },
                    "slug": {
                        "description": "Slug property",
                        "type": "string"
                    },
                    "description": {
                        "description": "Description property",
                        "type": "string"
                    },
                    "is_active": {
                        "description": "Is active property (active = 1; not active = 0)",
                        "type": "integer",
                        "format": "int32",
                        "example": 1
                    },
                    "created_by": {
                        "description": "Created by property",
                        "type": "string"
                    },
                    "modified_by": {
                        "description": "Modified by property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CreateLetterTypeEloquent": {
                "title": "Create letter type eloquent",
                "description": "Create letter type eloquent",
                "required": [
                    "company_id",
                    "code",
                    "name",
                    "slug"
                ],
                "properties": {
                    "company_id": {
                        "$ref": "#/components/schemas/LetterTypeEloquent/properties/company_id"
                    },
                    "code": {
                        "$ref": "#/components/schemas/LetterTypeEloquent/properties/code"
                    },
                    "name": {
                        "$ref": "#/components/schemas/LetterTypeEloquent/properties/name"
                    },
                    "slug": {
                        "$ref": "#/components/schemas/LetterTypeEloquent/properties/slug"
                    },
                    "description": {
                        "$ref": "#/components/schemas/LetterTypeEloquent/properties/description"
                    }
                },
                "type": "object"
            },
            "UpdateLetterTypeEloquent": {
                "title": "Update letter type eloquent",
                "description": "Update letter type eloquent",
                "required": [
                    "id",
                    "company_id",
                    "code",
                    "name",
                    "slug"
                ],
                "allOf": [
                    {
                        "properties": {
                            "id": {
                                "description": "Id property",
                                "type": "integer",
                                "format": "int64",
                                "example": 1
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/CreateLetterTypeEloquent"
                    }
                ]
            },
            "OtherTypeEloquent": {
                "title": "Other type eloquent",
                "description": "Other type eloquent",
                "required": [
                    "name",
                    "slug"
                ],
                "properties": {
                    "company_id": {
                        "description": "Company id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "description": "Name property",
                        "type": "string"
                    },
                    "slug": {
                        "description": "Slug property",
                        "type": "string"
                    },
                    "description": {
                        "description": "Description property",
                        "type": "string"
                    },
                    "is_active": {
                        "description": "Is active property (active = 1; not active = 0)",
                        "type": "integer",
                        "format": "int32",
                        "example": 1
                    },
                    "created_by": {
                        "description": "Created by property",
                        "type": "string"
                    },
                    "modified_by": {
                        "description": "Modified by property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CreateOtherTypeEloquent": {
                "title": "Create other type eloquent",
                "description": "Create other type eloquent",
                "required": [
                    "company_id",
                    "name",
                    "slug"
                ],
                "properties": {
                    "company_id": {
                        "$ref": "#/components/schemas/OtherTypeEloquent/properties/company_id"
                    },
                    "name": {
                        "$ref": "#/components/schemas/OtherTypeEloquent/properties/name"
                    },
                    "slug": {
                        "$ref": "#/components/schemas/OtherTypeEloquent/properties/slug"
                    },
                    "description": {
                        "$ref": "#/components/schemas/OtherTypeEloquent/properties/description"
                    }
                },
                "type": "object"
            },
            "UpdateOtherTypeEloquent": {
                "title": "Update other type eloquent",
                "description": "Update other type eloquent",
                "required": [
                    "id",
                    "company_id",
                    "name",
                    "slug"
                ],
                "allOf": [
                    {
                        "properties": {
                            "id": {
                                "description": "Id property",
                                "type": "integer",
                                "format": "int64",
                                "example": 1
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/CreateOtherTypeEloquent"
                    }
                ]
            },
            "PositionEloquent": {
                "title": "Position eloquent",
                "description": "Position eloquent",
                "required": [
                    "company_id",
                    "code",
                    "name",
                    "slug"
                ],
                "properties": {
                    "parent_id": {
                        "description": "Parent id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "company_id": {
                        "description": "Company id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "code": {
                        "description": "Code property",
                        "type": "string"
                    },
                    "name": {
                        "description": "Name property",
                        "type": "string"
                    },
                    "slug": {
                        "description": "Slug property",
                        "type": "string"
                    },
                    "description": {
                        "description": "Description property",
                        "type": "string"
                    },
                    "is_active": {
                        "description": "Is active property (active = 1; not active = 0)",
                        "type": "integer",
                        "format": "int32",
                        "example": 1
                    },
                    "created_by": {
                        "description": "Created by property",
                        "type": "string"
                    },
                    "modified_by": {
                        "description": "Modified by property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CreatePositionEloquent": {
                "title": "Create position eloquent",
                "description": "Create position eloquent",
                "required": [
                    "company_id",
                    "code",
                    "name",
                    "slug"
                ],
                "properties": {
                    "parent_id": {
                        "$ref": "#/components/schemas/PositionEloquent/properties/parent_id"
                    },
                    "company_id": {
                        "$ref": "#/components/schemas/PositionEloquent/properties/company_id"
                    },
                    "code": {
                        "$ref": "#/components/schemas/PositionEloquent/properties/code"
                    },
                    "name": {
                        "$ref": "#/components/schemas/PositionEloquent/properties/name"
                    },
                    "slug": {
                        "$ref": "#/components/schemas/PositionEloquent/properties/slug"
                    },
                    "description": {
                        "$ref": "#/components/schemas/PositionEloquent/properties/description"
                    }
                },
                "type": "object"
            },
            "UpdatePositionEloquent": {
                "title": "Update position eloquent",
                "description": "Update position eloquent",
                "required": [
                    "id",
                    "company_id",
                    "code",
                    "name",
                    "slug"
                ],
                "allOf": [
                    {
                        "properties": {
                            "id": {
                                "description": "Id property",
                                "type": "integer",
                                "format": "int64",
                                "example": 1
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/CreatePositionEloquent"
                    }
                ]
            },
            "RecruitmentStageEloquent": {
                "title": "Recruitment Stage eloquent",
                "description": "Recruitment Stage eloquent",
                "required": [
                    "company_id",
                    "name",
                    "slug",
                    "color",
                    "sort_order",
                    "is_scheduled",
                    "is_init",
                    "is_hired",
                    "is_reject"
                ],
                "properties": {
                    "company_id": {
                        "description": "Company id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "description": "Name property",
                        "type": "string"
                    },
                    "slug": {
                        "description": "Slug property",
                        "type": "string"
                    },
                    "color": {
                        "description": "Color property",
                        "type": "string"
                    },
                    "sort_order": {
                        "type": "integer",
                        "format": "int32",
                        "example": 1
                    },
                    "is_scheduled": {
                        "description": "Is scheduled property",
                        "type": "boolean"
                    },
                    "is_init": {
                        "description": "Is init property",
                        "type": "boolean"
                    },
                    "is_hired": {
                        "description": "Is hired property",
                        "type": "boolean"
                    },
                    "is_reject": {
                        "description": "Is reject property",
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "CreateRecruitmentStageEloquent": {
                "title": "Create recruitment stage eloquent",
                "description": "Create recruitment stage eloquent",
                "required": [
                    "company_id",
                    "name",
                    "slug",
                    "color",
                    "sort_order",
                    "is_scheduled",
                    "is_init",
                    "is_hired",
                    "is_reject"
                ],
                "properties": {
                    "company_id": {
                        "$ref": "#/components/schemas/RecruitmentStageEloquent/properties/company_id"
                    },
                    "name": {
                        "$ref": "#/components/schemas/RecruitmentStageEloquent/properties/name"
                    },
                    "slug": {
                        "$ref": "#/components/schemas/RecruitmentStageEloquent/properties/slug"
                    },
                    "color": {
                        "$ref": "#/components/schemas/RecruitmentStageEloquent/properties/color"
                    },
                    "sort_order": {
                        "$ref": "#/components/schemas/RecruitmentStageEloquent/properties/sort_order"
                    },
                    "is_scheduled": {
                        "$ref": "#/components/schemas/RecruitmentStageEloquent/properties/is_scheduled"
                    },
                    "is_init": {
                        "$ref": "#/components/schemas/RecruitmentStageEloquent/properties/is_init"
                    },
                    "is_hired": {
                        "$ref": "#/components/schemas/RecruitmentStageEloquent/properties/is_hired"
                    },
                    "is_reject": {
                        "$ref": "#/components/schemas/RecruitmentStageEloquent/properties/is_reject"
                    }
                },
                "type": "object"
            },
            "UpdateRecruitmentStageEloquent": {
                "title": "Update recruitment stage eloquent",
                "description": "Update recruitment stage eloquent",
                "required": [
                    "id",
                    "company_id",
                    "name",
                    "slug",
                    "color",
                    "sort_order",
                    "is_scheduled",
                    "is_init",
                    "is_hired",
                    "is_reject"
                ],
                "allOf": [
                    {
                        "properties": {
                            "id": {
                                "description": "Id property",
                                "type": "integer",
                                "format": "int64",
                                "example": 1
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/CreateRecruitmentStageEloquent"
                    }
                ]
            },
            "SalaryStructureEloquent": {
                "title": "Salary structure eloquent",
                "description": "Salary structure eloquent",
                "required": [
                    "company_id",
                    "type",
                    "name",
                    "slug"
                ],
                "properties": {
                    "company_id": {
                        "description": "Company id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "type": {
                        "description": "Type property",
                        "type": "string",
                        "default": "",
                        "enum": [
                            "SALARY",
                            "ALLOWANCE",
                            "LOAN"
                        ]
                    },
                    "name": {
                        "description": "Name property",
                        "type": "string"
                    },
                    "slug": {
                        "description": "Slug property",
                        "type": "string"
                    },
                    "description": {
                        "description": "Description property",
                        "type": "string"
                    },
                    "is_active": {
                        "description": "Is active property (active = 1; not active = 0)",
                        "type": "integer",
                        "format": "int32",
                        "example": 1
                    },
                    "created_by": {
                        "description": "Created by property",
                        "type": "string"
                    },
                    "modified_by": {
                        "description": "Modified by property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CreateSalaryStructureEloquent": {
                "title": "Create salary structure eloquent",
                "description": "Create salary structure eloquent",
                "required": [
                    "company_id",
                    "type",
                    "name",
                    "slug"
                ],
                "properties": {
                    "company_id": {
                        "$ref": "#/components/schemas/SalaryStructureEloquent/properties/company_id"
                    },
                    "type": {
                        "$ref": "#/components/schemas/SalaryStructureEloquent/properties/type"
                    },
                    "name": {
                        "$ref": "#/components/schemas/SalaryStructureEloquent/properties/name"
                    },
                    "slug": {
                        "$ref": "#/components/schemas/SalaryStructureEloquent/properties/slug"
                    },
                    "description": {
                        "$ref": "#/components/schemas/SalaryStructureEloquent/properties/description"
                    }
                },
                "type": "object"
            },
            "UpdateSalaryStructureEloquent": {
                "title": "Update salary structure eloquent",
                "description": "Update salary structure eloquent",
                "required": [
                    "id",
                    "company_id",
                    "type",
                    "name",
                    "slug"
                ],
                "allOf": [
                    {
                        "properties": {
                            "id": {
                                "description": "Id property",
                                "type": "integer",
                                "format": "int64",
                                "example": 1
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/CreateSalaryStructureEloquent"
                    }
                ]
            },
            "WorkAreaEloquent": {
                "title": "Work area eloquent",
                "description": "Work area eloquent",
                "required": [
                    "company_id",
                    "code",
                    "title",
                    "slug",
                    "country",
                    "state_or_province",
                    "city",
                    "address",
                    "postcode",
                    "phone",
                    "email"
                ],
                "properties": {
                    "company_id": {
                        "description": "Company id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "code": {
                        "description": "Code property",
                        "type": "string"
                    },
                    "title": {
                        "description": "Title property",
                        "type": "string"
                    },
                    "slug": {
                        "description": "Slug property",
                        "type": "string"
                    },
                    "country": {
                        "description": "Country property",
                        "type": "string"
                    },
                    "state_or_province": {
                        "description": "State/Province property",
                        "type": "string"
                    },
                    "city": {
                        "description": "City property",
                        "type": "string"
                    },
                    "address": {
                        "description": "Address property",
                        "type": "string"
                    },
                    "postcode": {
                        "description": "Postcode property",
                        "type": "string"
                    },
                    "phone": {
                        "description": "Phone property",
                        "type": "string"
                    },
                    "fax": {
                        "description": "Fax property",
                        "type": "string"
                    },
                    "email": {
                        "description": "Email property",
                        "type": "string"
                    },
                    "url": {
                        "description": "Url property",
                        "type": "string"
                    },
                    "is_active": {
                        "description": "Is active property (active = 1; not active = 0)",
                        "type": "integer",
                        "format": "int32",
                        "example": 1
                    },
                    "created_by": {
                        "description": "Created by property",
                        "type": "string"
                    },
                    "modified_by": {
                        "description": "Modified by property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CreateWorkAreaEloquent": {
                "title": "Create work area eloquent",
                "description": "Create work area eloquent",
                "required": [
                    "company_id",
                    "code",
                    "title",
                    "slug",
                    "country",
                    "state_or_province",
                    "city",
                    "address",
                    "postcode",
                    "phone",
                    "email"
                ],
                "properties": {
                    "company_id": {
                        "$ref": "#/components/schemas/WorkAreaEloquent/properties/company_id"
                    },
                    "code": {
                        "$ref": "#/components/schemas/WorkAreaEloquent/properties/code"
                    },
                    "title": {
                        "$ref": "#/components/schemas/WorkAreaEloquent/properties/title"
                    },
                    "slug": {
                        "$ref": "#/components/schemas/WorkAreaEloquent/properties/slug"
                    },
                    "country": {
                        "$ref": "#/components/schemas/WorkAreaEloquent/properties/country"
                    },
                    "state_or_province": {
                        "$ref": "#/components/schemas/WorkAreaEloquent/properties/state_or_province"
                    },
                    "city": {
                        "$ref": "#/components/schemas/WorkAreaEloquent/properties/city"
                    },
                    "address": {
                        "$ref": "#/components/schemas/WorkAreaEloquent/properties/address"
                    },
                    "postcode": {
                        "$ref": "#/components/schemas/WorkAreaEloquent/properties/postcode"
                    },
                    "phone": {
                        "$ref": "#/components/schemas/WorkAreaEloquent/properties/phone"
                    },
                    "fax": {
                        "$ref": "#/components/schemas/WorkAreaEloquent/properties/fax"
                    },
                    "email": {
                        "$ref": "#/components/schemas/WorkAreaEloquent/properties/email"
                    },
                    "url": {
                        "$ref": "#/components/schemas/WorkAreaEloquent/properties/url"
                    }
                },
                "type": "object"
            },
            "UpdateWorkAreaEloquent": {
                "title": "Update work area eloquent",
                "description": "Update work area eloquent",
                "required": [
                    "id",
                    "company_id",
                    "name",
                    "slug"
                ],
                "allOf": [
                    {
                        "properties": {
                            "id": {
                                "description": "Id property",
                                "type": "integer",
                                "format": "int64",
                                "example": 1
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/CreateWorkAreaEloquent"
                    }
                ]
            },
            "WorkUnitEloquent": {
                "title": "Work unit eloquent",
                "description": "Work unit eloquent",
                "required": [
                    "company_id",
                    "code",
                    "title",
                    "slug",
                    "country",
                    "state_or_province",
                    "city",
                    "address",
                    "postcode",
                    "phone",
                    "email"
                ],
                "properties": {
                    "parent_id": {
                        "description": "Parent id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "company_id": {
                        "description": "Company id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "code": {
                        "description": "Code property",
                        "type": "string"
                    },
                    "title": {
                        "description": "Title property",
                        "type": "string"
                    },
                    "slug": {
                        "description": "Slug property",
                        "type": "string"
                    },
                    "country": {
                        "description": "Country property",
                        "type": "string"
                    },
                    "state_or_province": {
                        "description": "State/Province property",
                        "type": "string"
                    },
                    "city": {
                        "description": "City property",
                        "type": "string"
                    },
                    "address": {
                        "description": "Address property",
                        "type": "string"
                    },
                    "postcode": {
                        "description": "Postcode property",
                        "type": "string"
                    },
                    "phone": {
                        "description": "Phone property",
                        "type": "string"
                    },
                    "fax": {
                        "description": "Fax property",
                        "type": "string"
                    },
                    "email": {
                        "description": "Email property",
                        "type": "string"
                    },
                    "url": {
                        "description": "Url property",
                        "type": "string"
                    },
                    "is_active": {
                        "description": "Is active property (active = 1; not active = 0)",
                        "type": "integer",
                        "format": "int32",
                        "example": 1
                    },
                    "created_by": {
                        "description": "Created by property",
                        "type": "string"
                    },
                    "modified_by": {
                        "description": "Modified by property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CreateWorkUnitEloquent": {
                "title": "Create work unit eloquent",
                "description": "Create work unit eloquent",
                "required": [
                    "company_id",
                    "code",
                    "title",
                    "slug",
                    "country",
                    "state_or_province",
                    "city",
                    "address",
                    "postcode",
                    "phone",
                    "email"
                ],
                "properties": {
                    "parent_id": {
                        "$ref": "#/components/schemas/WorkUnitEloquent/properties/parent_id"
                    },
                    "company_id": {
                        "$ref": "#/components/schemas/WorkUnitEloquent/properties/company_id"
                    },
                    "code": {
                        "$ref": "#/components/schemas/WorkUnitEloquent/properties/code"
                    },
                    "title": {
                        "$ref": "#/components/schemas/WorkUnitEloquent/properties/title"
                    },
                    "slug": {
                        "$ref": "#/components/schemas/WorkUnitEloquent/properties/slug"
                    },
                    "country": {
                        "$ref": "#/components/schemas/WorkUnitEloquent/properties/country"
                    },
                    "state_or_province": {
                        "$ref": "#/components/schemas/WorkUnitEloquent/properties/state_or_province"
                    },
                    "city": {
                        "$ref": "#/components/schemas/WorkUnitEloquent/properties/city"
                    },
                    "address": {
                        "$ref": "#/components/schemas/WorkUnitEloquent/properties/address"
                    },
                    "postcode": {
                        "$ref": "#/components/schemas/WorkUnitEloquent/properties/postcode"
                    },
                    "phone": {
                        "$ref": "#/components/schemas/WorkUnitEloquent/properties/phone"
                    },
                    "fax": {
                        "$ref": "#/components/schemas/WorkUnitEloquent/properties/fax"
                    },
                    "email": {
                        "$ref": "#/components/schemas/WorkUnitEloquent/properties/email"
                    },
                    "url": {
                        "$ref": "#/components/schemas/WorkUnitEloquent/properties/url"
                    }
                },
                "type": "object"
            },
            "UpdateWorkUnitEloquent": {
                "title": "Update work unit eloquent",
                "description": "Update work unit eloquent",
                "required": [
                    "id",
                    "company_id",
                    "name",
                    "slug"
                ],
                "allOf": [
                    {
                        "properties": {
                            "id": {
                                "description": "Id property",
                                "type": "integer",
                                "format": "int64",
                                "example": 1
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/CreateWorkUnitEloquent"
                    }
                ]
            },
            "PositionMutationEloquent": {
                "title": "Position mutation eloquent",
                "description": "Position mutation eloquent",
                "required": [
                    "employee_id",
                    "position_id",
                    "grade_id",
                    "mutation_date"
                ],
                "properties": {
                    "employee_id": {
                        "description": "Employee id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "position_id": {
                        "description": "Position id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "grade_id": {
                        "description": "Grade id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "mutation_date": {
                        "description": "Mutation date property",
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-01-01 00:00:00"
                    },
                    "note": {
                        "description": "Note property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CreatePositionMutationEloquent": {
                "title": "Create position mutation eloquent",
                "description": "Create position mutation eloquent",
                "required": [
                    "position_id",
                    "grade_id",
                    "mutation_date"
                ],
                "properties": {
                    "position_id": {
                        "$ref": "#/components/schemas/PositionMutationEloquent/properties/position_id"
                    },
                    "grade_id": {
                        "$ref": "#/components/schemas/PositionMutationEloquent/properties/grade_id"
                    },
                    "mutation_date": {
                        "$ref": "#/components/schemas/PositionMutationEloquent/properties/mutation_date"
                    },
                    "note": {
                        "$ref": "#/components/schemas/PositionMutationEloquent/properties/note"
                    }
                },
                "type": "object"
            },
            "UpdatePositionMutationEloquent": {
                "title": "Update position mutation eloquent",
                "description": "Update position mutation eloquent",
                "required": [
                    "id",
                    "position_id",
                    "grade_id",
                    "mutation_date"
                ],
                "allOf": [
                    {
                        "properties": {
                            "id": {
                                "description": "Id property",
                                "type": "integer",
                                "format": "int64",
                                "example": 1
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/CreatePositionMutationEloquent"
                    }
                ]
            },
            "ProjectMutationEloquent": {
                "title": "Project mutation eloquent",
                "description": "Project mutation eloquent",
                "required": [
                    "employee_id",
                    "project_id",
                    "mutation_date"
                ],
                "properties": {
                    "employee_id": {
                        "description": "Employee id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "project_id": {
                        "description": "Project id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "mutation_date": {
                        "description": "Mutation date property",
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-01-01 00:00:00"
                    }
                },
                "type": "object"
            },
            "CreateProjectMutationEloquent": {
                "title": "Create project mutation eloquent",
                "description": "Create project mutation eloquent",
                "required": [
                    "project_id",
                    "mutation_date"
                ],
                "properties": {
                    "project_id": {
                        "$ref": "#/components/schemas/ProjectMutationEloquent/properties/project_id"
                    },
                    "mutation_date": {
                        "$ref": "#/components/schemas/ProjectMutationEloquent/properties/mutation_date"
                    }
                },
                "type": "object"
            },
            "UpdateProjectMutationEloquent": {
                "title": "Update project mutation eloquent",
                "description": "Update project mutation eloquent",
                "required": [
                    "id",
                    "project_id",
                    "mutation_date"
                ],
                "allOf": [
                    {
                        "properties": {
                            "id": {
                                "description": "Id property",
                                "type": "integer",
                                "format": "int64",
                                "example": 1
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/CreateProjectMutationEloquent"
                    }
                ]
            },
            "WorkUnitMutationEloquent": {
                "title": "Work unit mutation eloquent",
                "description": "Work unit mutation eloquent",
                "required": [
                    "employee_id",
                    "work_unit_id",
                    "mutation_date"
                ],
                "properties": {
                    "employee_id": {
                        "description": "Employee id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "work_unit_id": {
                        "description": "Work unit id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "mutation_date": {
                        "description": "Mutation date property",
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-01-01 00:00:00"
                    },
                    "note": {
                        "description": "Note property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CreateWorkUnitMutationEloquent": {
                "title": "Create work unit mutation eloquent",
                "description": "Create work unit mutation eloquent",
                "required": [
                    "work_unit_id",
                    "mutation_date"
                ],
                "properties": {
                    "work_unit_id": {
                        "$ref": "#/components/schemas/WorkUnitMutationEloquent/properties/work_unit_id"
                    },
                    "mutation_date": {
                        "$ref": "#/components/schemas/WorkUnitMutationEloquent/properties/mutation_date"
                    }
                },
                "type": "object"
            },
            "UpdateWorkUnitMutationEloquent": {
                "title": "Update work unit mutation eloquent",
                "description": "Update work unit mutation eloquent",
                "required": [
                    "id",
                    "work_unit_id",
                    "mutation_date"
                ],
                "allOf": [
                    {
                        "properties": {
                            "id": {
                                "description": "Id property",
                                "type": "integer",
                                "format": "int64",
                                "example": 1
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/CreateWorkUnitMutationEloquent"
                    }
                ]
            },
            "ChildEloquent": {
                "title": "Child eloquent",
                "description": "Child eloquent",
                "required": [
                    "employee_id",
                    "full_name",
                    "nick_name",
                    "gender_id",
                    "order"
                ],
                "properties": {
                    "employee_id": {
                        "description": "Employee id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "full_name": {
                        "description": "Full name property",
                        "type": "string"
                    },
                    "nick_name": {
                        "description": "Nick name property",
                        "type": "string"
                    },
                    "gender_id": {
                        "description": "Gender id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "order": {
                        "description": "Order property",
                        "type": "integer",
                        "format": "int32",
                        "example": 1
                    },
                    "birth_place": {
                        "description": "Birth place property",
                        "type": "string"
                    },
                    "birth_date": {
                        "description": "Birth date property",
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-01-01 00:00:00"
                    },
                    "has_bpjs_kesehatan": {
                        "description": "Has BPJS kesehatan property",
                        "type": "boolean"
                    },
                    "bpjs_kesehatan_number": {
                        "description": "BPJS kesehatan number property",
                        "type": "string"
                    },
                    "bpjs_kesehatan_date": {
                        "description": "BPJS kesehatan date property",
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-01-01 00:00:00"
                    },
                    "bpjs_kesehatan_class": {
                        "description": "BPJS kesehatan class property",
                        "type": "string",
                        "default": "",
                        "enum": [
                            "I",
                            "II",
                            "III"
                        ]
                    },
                    "created_by": {
                        "description": "Created by property",
                        "type": "string"
                    },
                    "modified_by": {
                        "description": "Modified by property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CreateChildEloquent": {
                "title": "Create child eloquent",
                "description": "Create child eloquent",
                "required": [
                    "employee_id",
                    "full_name",
                    "nick_name",
                    "gender_id",
                    "order"
                ],
                "properties": {
                    "employee_id": {
                        "$ref": "#/components/schemas/ChildEloquent/properties/employee_id"
                    },
                    "full_name": {
                        "$ref": "#/components/schemas/ChildEloquent/properties/full_name"
                    },
                    "nick_name": {
                        "$ref": "#/components/schemas/ChildEloquent/properties/nick_name"
                    },
                    "gender_id": {
                        "$ref": "#/components/schemas/ChildEloquent/properties/gender_id"
                    },
                    "order": {
                        "$ref": "#/components/schemas/ChildEloquent/properties/order"
                    },
                    "birth_place": {
                        "$ref": "#/components/schemas/ChildEloquent/properties/birth_place"
                    },
                    "birth_date": {
                        "$ref": "#/components/schemas/ChildEloquent/properties/birth_date"
                    },
                    "has_bpjs_kesehatan": {
                        "$ref": "#/components/schemas/ChildEloquent/properties/has_bpjs_kesehatan"
                    },
                    "bpjs_kesehatan_number": {
                        "$ref": "#/components/schemas/ChildEloquent/properties/bpjs_kesehatan_number"
                    },
                    "bpjs_kesehatan_date": {
                        "$ref": "#/components/schemas/ChildEloquent/properties/bpjs_kesehatan_date"
                    },
                    "bpjs_kesehatan_class": {
                        "$ref": "#/components/schemas/ChildEloquent/properties/bpjs_kesehatan_class"
                    }
                },
                "type": "object"
            },
            "UpdateChildEloquent": {
                "title": "Update child eloquent",
                "description": "Update child eloquent",
                "required": [
                    "id",
                    "employee_id",
                    "full_name",
                    "nick_name",
                    "gender_id",
                    "order"
                ],
                "allOf": [
                    {
                        "properties": {
                            "id": {
                                "description": "Id property",
                                "type": "integer",
                                "format": "int64",
                                "example": 1
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/CreateChildEloquent"
                    }
                ]
            },
            "EmployeeEloquent": {
                "title": "Employee eloquent",
                "description": "Employee eloquent",
                "required": [
                    "company_id",
                    "nip",
                    "full_name",
                    "nick_name",
                    "gender_id",
                    "religion_id",
                    "birth_place",
                    "birth_date",
                    "address",
                    "phone",
                    "mobile",
                    "email",
                    "identity_number",
                    "identity_date",
                    "identity_address",
                    "marital_status_id",
                    "office_id",
                    "work_area_id",
                    "has_npwp",
                    "npwp_number",
                    "npwp_date",
                    "npwp_status",
                    "has_bpjs_tenaga_kerja",
                    "bpjs_tenaga_kerja_number",
                    "bpjs_tenaga_kerja_date",
                    "bpjs_tenaga_kerja_class",
                    "has_bpjs_kesehatan",
                    "bpjs_kesehatan_number",
                    "bpjs_kesehatan_date",
                    "bpjs_kesehatan_class",
                    "dplk_number",
                    "collective_number",
                    "english_ability",
                    "computer_ability",
                    "other_ability",
                    "bank_id",
                    "account_number",
                    "join_date",
                    "work_status"
                ],
                "properties": {
                    "company_id": {
                        "description": "Company id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "nip": {
                        "description": "Nip property",
                        "type": "string"
                    },
                    "full_name": {
                        "description": "Full name property",
                        "type": "string"
                    },
                    "nick_name": {
                        "description": "Nick name property",
                        "type": "string"
                    },
                    "gender_id": {
                        "description": "Gender id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "religion_id": {
                        "description": "Religion id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "birth_place": {
                        "description": "Birth place property",
                        "type": "string"
                    },
                    "birth_date": {
                        "description": "Birth date property",
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-01-01 00:00:00"
                    },
                    "address": {
                        "description": "Address property",
                        "type": "string"
                    },
                    "phone": {
                        "description": "Phone property",
                        "type": "string"
                    },
                    "mobile": {
                        "description": "Mobile property",
                        "type": "string"
                    },
                    "email": {
                        "description": "Email property",
                        "type": "string"
                    },
                    "identity_number": {
                        "description": "Identity number property",
                        "type": "string"
                    },
                    "identity_expired_date": {
                        "description": "Identity expired date property",
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-01-01 00:00:00"
                    },
                    "identity_address": {
                        "description": "Identity address property",
                        "type": "string"
                    },
                    "has_drive_license_a": {
                        "description": "Has drive license a property",
                        "type": "boolean"
                    },
                    "drive_license_a_number": {
                        "description": "Drive license a number property",
                        "type": "string"
                    },
                    "drive_license_a_date": {
                        "description": "Drive license a date property",
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-01-01 00:00:00"
                    },
                    "has_drive_license_b": {
                        "description": "Has drive license b property",
                        "type": "boolean"
                    },
                    "drive_license_b_number": {
                        "description": "Drive license b number property",
                        "type": "string"
                    },
                    "drive_license_b_date": {
                        "description": "Drive license b date property",
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-01-01 00:00:00"
                    },
                    "has_drive_license_c": {
                        "description": "Has drive license c property",
                        "type": "boolean"
                    },
                    "drive_license_c_number": {
                        "description": "Drive license c number property",
                        "type": "string"
                    },
                    "drive_license_c_date": {
                        "description": "Drive license c date property",
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-01-01 00:00:00"
                    },
                    "marital_status_id": {
                        "description": "Marital status id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "mate_as": {
                        "description": "Mate as property",
                        "type": "string",
                        "default": "",
                        "enum": [
                            "HUSBAND",
                            "WIFE"
                        ]
                    },
                    "mate_full_name": {
                        "description": "Mate full name property",
                        "type": "string"
                    },
                    "mate_nick_name": {
                        "description": "Mate nick name property",
                        "type": "string"
                    },
                    "mate_birth_place": {
                        "description": "Mate birth place property",
                        "type": "string"
                    },
                    "mate_birth_date": {
                        "description": "Mate birth date property",
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-01-01 00:00:00"
                    },
                    "mate_occupation": {
                        "description": "Mate occupation property",
                        "type": "string"
                    },
                    "office_id": {
                        "description": "Office id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "work_area_id": {
                        "description": "Work area id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "has_npwp": {
                        "description": "Has npwp property",
                        "type": "boolean"
                    },
                    "npwp_number": {
                        "description": "NPWP number property",
                        "type": "string"
                    },
                    "npwp_date": {
                        "description": "NPWP date property",
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-01-01 00:00:00"
                    },
                    "npwp_status": {
                        "description": "NPWP status property",
                        "type": "string",
                        "default": "",
                        "enum": [
                            "TK/0",
                            "TK/1",
                            "TK/2",
                            "TK/3",
                            "K/0",
                            "K/1",
                            "K/2",
                            "K/3",
                            "KI/1",
                            "KI/2",
                            "KI/3"
                        ]
                    },
                    "has_bpjs_tenaga_kerja": {
                        "description": "Has BPJS tenaga kerja property",
                        "type": "boolean"
                    },
                    "bpjs_tenaga_kerja_number": {
                        "description": "BPJS tenaga kerja number property",
                        "type": "string"
                    },
                    "bpjs_tenaga_kerja_date": {
                        "description": "BPJS tenaga kerja date property",
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-01-01 00:00:00"
                    },
                    "bpjs_tenaga_kerja_class": {
                        "description": "BPJS tenaga kerja class property",
                        "type": "string",
                        "default": "",
                        "enum": [
                            "I",
                            "II",
                            "III"
                        ]
                    },
                    "has_bpjs_kesehatan": {
                        "description": "Has BPJS kesehatan property",
                        "type": "boolean"
                    },
                    "bpjs_kesehatan_number": {
                        "description": "BPJS kesehatan number property",
                        "type": "string"
                    },
                    "bpjs_kesehatan_date": {
                        "description": "BPJS kesehatan date property",
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-01-01 00:00:00"
                    },
                    "bpjs_kesehatan_class": {
                        "description": "BPJS kesehatan class property",
                        "type": "string",
                        "default": "",
                        "enum": [
                            "I",
                            "II",
                            "III"
                        ]
                    },
                    "has_mate_bpjs_kesehatan": {
                        "description": "Has mate BPJS kesehatan property",
                        "type": "boolean"
                    },
                    "mate_bpjs_kesehatan_number": {
                        "description": "Mate BPJS kesehatan number property",
                        "type": "string"
                    },
                    "mate_bpjs_kesehatan_date": {
                        "description": "Mate BPJS kesehatan date property",
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-01-01 00:00:00"
                    },
                    "mate_bpjs_kesehatan_class": {
                        "description": "Mate BPJS kesehatan class property",
                        "type": "string",
                        "default": "",
                        "enum": [
                            "I",
                            "II",
                            "III"
                        ]
                    },
                    "dplk_number": {
                        "description": "DPLK number property",
                        "type": "string"
                    },
                    "collective_number": {
                        "description": "Collective property",
                        "type": "string"
                    },
                    "english_ability": {
                        "description": "English ability property",
                        "type": "string"
                    },
                    "computer_ability": {
                        "description": "Computer ability property",
                        "type": "string"
                    },
                    "other_ability": {
                        "description": "Other ability property",
                        "type": "string"
                    },
                    "bank_id": {
                        "description": "Bank id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "account_number": {
                        "description": "Account number property",
                        "type": "string"
                    },
                    "join_date": {
                        "description": "Join date property",
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-01-01 00:00:00"
                    },
                    "work_status": {
                        "description": "Work status property",
                        "type": "string",
                        "default": "",
                        "enum": [
                            "FULL_TIME",
                            "PART_TIME"
                        ]
                    },
                    "work_type": {
                        "description": "Work type property",
                        "type": "string",
                        "default": "",
                        "enum": [
                            "PERMANENT",
                            "CONTRACT"
                        ]
                    }
                },
                "type": "object"
            },
            "CreateEmployeeEloquent": {
                "title": "Create employee eloquent",
                "description": "Create employee eloquent",
                "required": [
                    "company_id",
                    "nip",
                    "full_name",
                    "nick_name",
                    "gender_id",
                    "religion_id",
                    "birth_place",
                    "birth_date",
                    "address",
                    "phone",
                    "mobile",
                    "email",
                    "identity_number",
                    "identity_expired_date",
                    "identity_address",
                    "marital_status_id",
                    "office_id",
                    "work_area_id",
                    "has_npwp",
                    "npwp_number",
                    "npwp_date",
                    "npwp_status",
                    "has_bpjs_tenaga_kerja",
                    "bpjs_tenaga_kerja_number",
                    "bpjs_tenaga_kerja_date",
                    "bpjs_tenaga_kerja_class",
                    "has_bpjs_kesehatan",
                    "bpjs_kesehatan_number",
                    "bpjs_kesehatan_date",
                    "bpjs_kesehatan_class",
                    "dplk_number",
                    "collective_number",
                    "english_ability",
                    "computer_ability",
                    "other_ability",
                    "bank_id",
                    "account_number",
                    "join_date",
                    "work_status",
                    "work_type"
                ],
                "properties": {
                    "company_id": {
                        "$ref": "#/components/schemas/EmployeeEloquent/properties/company_id"
                    },
                    "nip": {
                        "$ref": "#/components/schemas/EmployeeEloquent/properties/nip"
                    },
                    "full_name": {
                        "$ref": "#/components/schemas/EmployeeEloquent/properties/full_name"
                    },
                    "nick_name": {
                        "$ref": "#/components/schemas/EmployeeEloquent/properties/nick_name"
                    },
                    "gender_id": {
                        "$ref": "#/components/schemas/EmployeeEloquent/properties/gender_id"
                    },
                    "religion_id": {
                        "$ref": "#/components/schemas/EmployeeEloquent/properties/religion_id"
                    },
                    "birth_place": {
                        "$ref": "#/components/schemas/EmployeeEloquent/properties/birth_place"
                    },
                    "birth_date": {
                        "$ref": "#/components/schemas/EmployeeEloquent/properties/birth_date"
                    },
                    "address": {
                        "$ref": "#/components/schemas/EmployeeEloquent/properties/address"
                    },
                    "phone": {
                        "$ref": "#/components/schemas/EmployeeEloquent/properties/phone"
                    },
                    "mobile": {
                        "$ref": "#/components/schemas/EmployeeEloquent/properties/mobile"
                    },
                    "email": {
                        "$ref": "#/components/schemas/EmployeeEloquent/properties/email"
                    },
                    "identity_number": {
                        "$ref": "#/components/schemas/EmployeeEloquent/properties/identity_number"
                    },
                    "identity_expired_date": {
                        "$ref": "#/components/schemas/EmployeeEloquent/properties/identity_expired_date"
                    },
                    "identity_address": {
                        "$ref": "#/components/schemas/EmployeeEloquent/properties/identity_address"
                    },
                    "has_drive_license_a": {
                        "$ref": "#/components/schemas/EmployeeEloquent/properties/has_drive_license_a"
                    },
                    "drive_license_a_number": {
                        "$ref": "#/components/schemas/EmployeeEloquent/properties/drive_license_a_number"
                    },
                    "drive_license_a_date": {
                        "$ref": "#/components/schemas/EmployeeEloquent/properties/drive_license_a_date"
                    },
                    "has_drive_license_b": {
                        "$ref": "#/components/schemas/EmployeeEloquent/properties/has_drive_license_b"
                    },
                    "drive_license_b_number": {
                        "$ref": "#/components/schemas/EmployeeEloquent/properties/drive_license_b_number"
                    },
                    "drive_license_b_date": {
                        "$ref": "#/components/schemas/EmployeeEloquent/properties/drive_license_b_date"
                    },
                    "has_drive_license_c": {
                        "$ref": "#/components/schemas/EmployeeEloquent/properties/has_drive_license_c"
                    },
                    "drive_license_c_number": {
                        "$ref": "#/components/schemas/EmployeeEloquent/properties/drive_license_c_number"
                    },
                    "drive_license_c_date": {
                        "$ref": "#/components/schemas/EmployeeEloquent/properties/drive_license_c_date"
                    },
                    "marital_status_id": {
                        "$ref": "#/components/schemas/EmployeeEloquent/properties/marital_status_id"
                    },
                    "mate_as": {
                        "$ref": "#/components/schemas/EmployeeEloquent/properties/mate_as"
                    },
                    "mate_full_name": {
                        "$ref": "#/components/schemas/EmployeeEloquent/properties/mate_full_name"
                    },
                    "mate_nick_name": {
                        "$ref": "#/components/schemas/EmployeeEloquent/properties/mate_nick_name"
                    },
                    "mate_birth_place": {
                        "$ref": "#/components/schemas/EmployeeEloquent/properties/mate_birth_place"
                    },
                    "mate_birth_date": {
                        "$ref": "#/components/schemas/EmployeeEloquent/properties/mate_birth_date"
                    },
                    "mate_occupation": {
                        "$ref": "#/components/schemas/EmployeeEloquent/properties/mate_occupation"
                    },
                    "office_id": {
                        "$ref": "#/components/schemas/EmployeeEloquent/properties/office_id"
                    },
                    "work_area_id": {
                        "$ref": "#/components/schemas/EmployeeEloquent/properties/work_area_id"
                    },
                    "has_npwp": {
                        "$ref": "#/components/schemas/EmployeeEloquent/properties/has_npwp"
                    },
                    "npwp_number": {
                        "$ref": "#/components/schemas/EmployeeEloquent/properties/npwp_number"
                    },
                    "npwp_date": {
                        "$ref": "#/components/schemas/EmployeeEloquent/properties/npwp_date"
                    },
                    "npwp_status": {
                        "$ref": "#/components/schemas/EmployeeEloquent/properties/npwp_status"
                    },
                    "has_bpjs_tenaga_kerja": {
                        "$ref": "#/components/schemas/EmployeeEloquent/properties/has_bpjs_tenaga_kerja"
                    },
                    "bpjs_tenaga_kerja_number": {
                        "$ref": "#/components/schemas/EmployeeEloquent/properties/bpjs_tenaga_kerja_number"
                    },
                    "bpjs_tenaga_kerja_date": {
                        "$ref": "#/components/schemas/EmployeeEloquent/properties/bpjs_tenaga_kerja_date"
                    },
                    "bpjs_tenaga_kerja_class": {
                        "$ref": "#/components/schemas/EmployeeEloquent/properties/bpjs_tenaga_kerja_class"
                    },
                    "has_bpjs_kesehatan": {
                        "$ref": "#/components/schemas/EmployeeEloquent/properties/has_bpjs_kesehatan"
                    },
                    "bpjs_kesehatan_number": {
                        "$ref": "#/components/schemas/EmployeeEloquent/properties/bpjs_kesehatan_number"
                    },
                    "bpjs_kesehatan_date": {
                        "$ref": "#/components/schemas/EmployeeEloquent/properties/bpjs_kesehatan_date"
                    },
                    "bpjs_kesehatan_class": {
                        "$ref": "#/components/schemas/EmployeeEloquent/properties/bpjs_kesehatan_class"
                    },
                    "has_mate_bpjs_kesehatan": {
                        "$ref": "#/components/schemas/EmployeeEloquent/properties/has_mate_bpjs_kesehatan"
                    },
                    "mate_bpjs_kesehatan_number": {
                        "$ref": "#/components/schemas/EmployeeEloquent/properties/mate_bpjs_kesehatan_number"
                    },
                    "mate_bpjs_kesehatan_date": {
                        "$ref": "#/components/schemas/EmployeeEloquent/properties/mate_bpjs_kesehatan_date"
                    },
                    "mate_bpjs_kesehatan_class": {
                        "$ref": "#/components/schemas/EmployeeEloquent/properties/mate_bpjs_kesehatan_class"
                    },
                    "dplk_number": {
                        "$ref": "#/components/schemas/EmployeeEloquent/properties/dplk_number"
                    },
                    "collective_number": {
                        "$ref": "#/components/schemas/EmployeeEloquent/properties/collective_number"
                    },
                    "english_ability": {
                        "$ref": "#/components/schemas/EmployeeEloquent/properties/english_ability"
                    },
                    "computer_ability": {
                        "$ref": "#/components/schemas/EmployeeEloquent/properties/computer_ability"
                    },
                    "other_ability": {
                        "$ref": "#/components/schemas/EmployeeEloquent/properties/other_ability"
                    },
                    "bank_id": {
                        "$ref": "#/components/schemas/EmployeeEloquent/properties/bank_id"
                    },
                    "account_number": {
                        "$ref": "#/components/schemas/EmployeeEloquent/properties/account_number"
                    },
                    "join_date": {
                        "$ref": "#/components/schemas/EmployeeEloquent/properties/join_date"
                    },
                    "work_status": {
                        "$ref": "#/components/schemas/EmployeeEloquent/properties/work_status"
                    },
                    "work_type": {
                        "$ref": "#/components/schemas/EmployeeEloquent/properties/work_type"
                    }
                },
                "type": "object"
            },
            "UpdateEmployeeEloquent": {
                "title": "Update employee eloquent",
                "description": "Update employee eloquent",
                "required": [
                    "id",
                    "company_id",
                    "nip",
                    "full_name",
                    "nick_name",
                    "gender_id",
                    "religion_id",
                    "birth_place",
                    "birth_date",
                    "address",
                    "phone",
                    "mobile",
                    "email",
                    "identity_number",
                    "identity_expired_date",
                    "identity_address",
                    "marital_status_id",
                    "office_id",
                    "work_area_id",
                    "has_npwp",
                    "npwp_number",
                    "npwp_date",
                    "npwp_status",
                    "has_bpjs_tenaga_kerja",
                    "bpjs_tenaga_kerja_number",
                    "bpjs_tenaga_kerja_date",
                    "bpjs_tenaga_kerja_class",
                    "has_bpjs_kesehatan",
                    "bpjs_kesehatan_number",
                    "bpjs_kesehatan_date",
                    "bpjs_kesehatan_class",
                    "dplk_number",
                    "collective_number",
                    "english_ability",
                    "computer_ability",
                    "other_ability",
                    "bank_id",
                    "account_number",
                    "join_date",
                    "work_status",
                    "work_type"
                ],
                "allOf": [
                    {
                        "properties": {
                            "id": {
                                "description": "Id property",
                                "type": "integer",
                                "format": "int64",
                                "example": 1
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/CreateEmployeeEloquent"
                    }
                ]
            },
            "FormalEducationHistoryEloquent": {
                "title": "Application eloquent",
                "description": "Formal education history eloquent",
                "required": [
                    "employee_id",
                    "degree_id",
                    "major_id",
                    "name",
                    "start_date",
                    "end_date"
                ],
                "properties": {
                    "employee_id": {
                        "description": "Employee id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "major_id": {
                        "description": "Major id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "degree_id": {
                        "description": "Degree id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "description": "Name property",
                        "type": "string"
                    },
                    "start_date": {
                        "description": "Start date property",
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-01-01 00:00:00"
                    },
                    "end_date": {
                        "description": "End date property",
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-01-01 00:00:00"
                    },
                    "created_by": {
                        "description": "Created by property",
                        "type": "string"
                    },
                    "modified_by": {
                        "description": "Modified by property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CreateFormalEducationHistoryEloquent": {
                "title": "Create formal education history eloquent",
                "description": "Create formal education history eloquent",
                "required": [
                    "employee_id",
                    "degree_id",
                    "major_id",
                    "name",
                    "start_date",
                    "end_date"
                ],
                "properties": {
                    "employee_id": {
                        "$ref": "#/components/schemas/FormalEducationHistoryEloquent/properties/employee_id"
                    },
                    "degree_id": {
                        "$ref": "#/components/schemas/FormalEducationHistoryEloquent/properties/degree_id"
                    },
                    "major_id": {
                        "$ref": "#/components/schemas/FormalEducationHistoryEloquent/properties/major_id"
                    },
                    "name": {
                        "$ref": "#/components/schemas/FormalEducationHistoryEloquent/properties/name"
                    },
                    "start_date": {
                        "$ref": "#/components/schemas/FormalEducationHistoryEloquent/properties/start_date"
                    },
                    "end_date": {
                        "$ref": "#/components/schemas/FormalEducationHistoryEloquent/properties/end_date"
                    }
                },
                "type": "object"
            },
            "UpdateFormalEducationHistoryEloquent": {
                "title": "Update formal education history eloquent",
                "description": "Update formal education history eloquent",
                "required": [
                    "id",
                    "employee_id",
                    "degree_id",
                    "major_id",
                    "name",
                    "start_date",
                    "end_date"
                ],
                "allOf": [
                    {
                        "properties": {
                            "id": {
                                "description": "Id property",
                                "type": "integer",
                                "format": "int64",
                                "example": 1
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/CreateFormalEducationHistoryEloquent"
                    }
                ]
            },
            "NonFormalEducationHistoryEloquent": {
                "title": "Non formal education history eloquent",
                "description": "Non formal education history eloquent",
                "required": [
                    "employee_id",
                    "type",
                    "name",
                    "start_date",
                    "end_date",
                    "institution"
                ],
                "properties": {
                    "employee_id": {
                        "description": "Employee id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "type": {
                        "description": "Type property",
                        "type": "string"
                    },
                    "name": {
                        "description": "Name property",
                        "type": "string"
                    },
                    "start_date": {
                        "description": "Start date property",
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-01-01 00:00:00"
                    },
                    "end_date": {
                        "description": "End date property",
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-01-01 00:00:00"
                    },
                    "institution": {
                        "description": "Institution property",
                        "type": "string"
                    },
                    "created_by": {
                        "description": "Created by property",
                        "type": "string"
                    },
                    "modified_by": {
                        "description": "Modified by property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CreateNonFormalEducationHistoryEloquent": {
                "title": "Create non formal education history eloquent",
                "description": "Create non formal education history eloquent",
                "required": [
                    "employee_id",
                    "type",
                    "name",
                    "start_date",
                    "end_date",
                    "institution"
                ],
                "properties": {
                    "employee_id": {
                        "$ref": "#/components/schemas/NonFormalEducationHistoryEloquent/properties/employee_id"
                    },
                    "type": {
                        "$ref": "#/components/schemas/NonFormalEducationHistoryEloquent/properties/type"
                    },
                    "name": {
                        "$ref": "#/components/schemas/NonFormalEducationHistoryEloquent/properties/name"
                    },
                    "start_date": {
                        "$ref": "#/components/schemas/NonFormalEducationHistoryEloquent/properties/start_date"
                    },
                    "end_date": {
                        "$ref": "#/components/schemas/NonFormalEducationHistoryEloquent/properties/end_date"
                    },
                    "institution": {
                        "$ref": "#/components/schemas/NonFormalEducationHistoryEloquent/properties/institution"
                    }
                },
                "type": "object"
            },
            "UpdateNonFormalEducationHistoryEloquent": {
                "title": "Update non formal education history eloquent",
                "description": "Update non formal education history eloquent",
                "required": [
                    "id",
                    "employee_id",
                    "degree_id",
                    "major_id",
                    "name",
                    "start_date",
                    "end_date"
                ],
                "allOf": [
                    {
                        "properties": {
                            "id": {
                                "description": "Id property",
                                "type": "integer",
                                "format": "int64",
                                "example": 1
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/CreateNonFormalEducationHistoryEloquent"
                    }
                ]
            },
            "OrganizationHistoryEloquent": {
                "title": "Organization history eloquent",
                "description": "Organization history eloquent",
                "required": [
                    "employee_id",
                    "name",
                    "start_date",
                    "end_date",
                    "activity"
                ],
                "properties": {
                    "employee_id": {
                        "description": "Employee id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "description": "Name property",
                        "type": "string"
                    },
                    "start_date": {
                        "description": "Start date property",
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-01-01 00:00:00"
                    },
                    "end_date": {
                        "description": "End date property",
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-01-01 00:00:00"
                    },
                    "activity": {
                        "description": "Activity property",
                        "type": "string"
                    },
                    "created_by": {
                        "description": "Created by property",
                        "type": "string"
                    },
                    "modified_by": {
                        "description": "Modified by property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CreateOrganizationHistoryEloquent": {
                "title": "Create organization history eloquent",
                "description": "Create organization history eloquent",
                "required": [
                    "employee_id",
                    "name",
                    "start_date",
                    "end_date",
                    "activity"
                ],
                "properties": {
                    "employee_id": {
                        "$ref": "#/components/schemas/OrganizationHistoryEloquent/properties/employee_id"
                    },
                    "name": {
                        "$ref": "#/components/schemas/OrganizationHistoryEloquent/properties/name"
                    },
                    "start_date": {
                        "$ref": "#/components/schemas/OrganizationHistoryEloquent/properties/start_date"
                    },
                    "end_date": {
                        "$ref": "#/components/schemas/OrganizationHistoryEloquent/properties/end_date"
                    },
                    "activity": {
                        "$ref": "#/components/schemas/OrganizationHistoryEloquent/properties/activity"
                    }
                },
                "type": "object"
            },
            "UpdateOrganizationHistoryEloquent": {
                "title": "Update organization history eloquent",
                "description": "Update organization history eloquent",
                "required": [
                    "id",
                    "employee_id",
                    "name",
                    "start_date",
                    "end_date",
                    "activity"
                ],
                "allOf": [
                    {
                        "properties": {
                            "id": {
                                "description": "Id property",
                                "type": "integer",
                                "format": "int64",
                                "example": 1
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/CreateOrganizationHistoryEloquent"
                    }
                ]
            },
            "OtherEquipmentEloquent": {
                "title": "Other equipment eloquent",
                "description": "Other equipment eloquent",
                "required": [
                    "employee_id",
                    "name"
                ],
                "properties": {
                    "employee_id": {
                        "description": "Employee id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "description": "Name property",
                        "type": "string"
                    },
                    "description": {
                        "description": "Description property",
                        "type": "string"
                    },
                    "created_by": {
                        "description": "Created by property",
                        "type": "string"
                    },
                    "modified_by": {
                        "description": "Modified by property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CreateOtherEquipmentEloquent": {
                "title": "Create other equipment eloquent",
                "description": "Create other equipment eloquent",
                "required": [
                    "employee_id",
                    "name",
                    "description"
                ],
                "properties": {
                    "employee_id": {
                        "$ref": "#/components/schemas/OtherEquipmentEloquent/properties/employee_id"
                    },
                    "name": {
                        "$ref": "#/components/schemas/OtherEquipmentEloquent/properties/name"
                    },
                    "description": {
                        "$ref": "#/components/schemas/OtherEquipmentEloquent/properties/description"
                    }
                },
                "type": "object"
            },
            "UpdateOtherEquipmentEloquent": {
                "title": "Update other equipment eloquent",
                "description": "Update other equipment eloquent",
                "required": [
                    "id",
                    "employee_id",
                    "name",
                    "description"
                ],
                "allOf": [
                    {
                        "properties": {
                            "id": {
                                "description": "Id property",
                                "type": "integer",
                                "format": "int64",
                                "example": 1
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/CreateOtherEquipmentEloquent"
                    }
                ]
            },
            "WorkCompetenceEloquent": {
                "title": "Work competence eloquent",
                "description": "Work competence eloquent",
                "required": [
                    "employee_id",
                    "reference_number",
                    "competence_id",
                    "issue_date",
                    "validity"
                ],
                "properties": {
                    "employee_id": {
                        "description": "Employee id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "reference_number": {
                        "description": "Reference number property",
                        "type": "string"
                    },
                    "competence_id": {
                        "description": "Competence id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "issue_date": {
                        "description": "Issue date property",
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-01-01 00:00:00"
                    },
                    "validity": {
                        "description": "Validity property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CreateWorkCompetenceEloquent": {
                "title": "Create work competence eloquent",
                "description": "Create work competence eloquent",
                "required": [
                    "employee_id",
                    "reference_number",
                    "competence_id",
                    "issue_date",
                    "validity"
                ],
                "properties": {
                    "employee_id": {
                        "$ref": "#/components/schemas/WorkCompetenceEloquent/properties/employee_id"
                    },
                    "reference_number": {
                        "$ref": "#/components/schemas/WorkCompetenceEloquent/properties/reference_number"
                    },
                    "competence_id": {
                        "$ref": "#/components/schemas/WorkCompetenceEloquent/properties/competence_id"
                    },
                    "issue_date": {
                        "$ref": "#/components/schemas/WorkCompetenceEloquent/properties/issue_date"
                    },
                    "validity": {
                        "$ref": "#/components/schemas/WorkCompetenceEloquent/properties/validity"
                    }
                },
                "type": "object"
            },
            "UpdateWorkCompetenceEloquent": {
                "title": "Update work competence eloquent",
                "description": "Update work competence eloquent",
                "required": [
                    "id",
                    "employee_id",
                    "reference_number",
                    "competence_id",
                    "issue_date",
                    "validity"
                ],
                "allOf": [
                    {
                        "properties": {
                            "id": {
                                "description": "Id property",
                                "type": "integer",
                                "format": "int64",
                                "example": 1
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/CreateWorkCompetenceEloquent"
                    }
                ]
            },
            "WorkExperienceEloquent": {
                "title": "Work experience eloquent",
                "description": "Work experience eloquent",
                "required": [
                    "employee_id",
                    "company",
                    "business_type",
                    "position"
                ],
                "properties": {
                    "employee_id": {
                        "description": "Employee id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "company": {
                        "description": "Company property",
                        "type": "string"
                    },
                    "business_type": {
                        "description": "Business type property",
                        "type": "string"
                    },
                    "position": {
                        "description": "Position property",
                        "type": "string"
                    },
                    "start_date": {
                        "description": "Start date property",
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-01-01 00:00:00"
                    },
                    "end_date": {
                        "description": "End date property",
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-01-01 00:00:00"
                    }
                },
                "type": "object"
            },
            "CreateWorkExperienceEloquent": {
                "title": "Create work experience eloquent",
                "description": "Create work experience eloquent",
                "required": [
                    "employee_id",
                    "company",
                    "business_type",
                    "position"
                ],
                "properties": {
                    "employee_id": {
                        "$ref": "#/components/schemas/WorkExperienceEloquent/properties/employee_id"
                    },
                    "company": {
                        "$ref": "#/components/schemas/WorkExperienceEloquent/properties/company"
                    },
                    "business_type": {
                        "$ref": "#/components/schemas/WorkExperienceEloquent/properties/business_type"
                    },
                    "position": {
                        "$ref": "#/components/schemas/WorkExperienceEloquent/properties/position"
                    },
                    "start_date": {
                        "$ref": "#/components/schemas/WorkExperienceEloquent/properties/start_date"
                    },
                    "end_date": {
                        "$ref": "#/components/schemas/WorkExperienceEloquent/properties/end_date"
                    }
                },
                "type": "object"
            },
            "UpdateWorkExperienceEloquent": {
                "title": "Update work experience eloquent",
                "description": "Update work experience eloquent",
                "required": [
                    "id",
                    "employee_id",
                    "reference_number",
                    "competence_id",
                    "issue_date",
                    "validity"
                ],
                "allOf": [
                    {
                        "properties": {
                            "id": {
                                "description": "Id property",
                                "type": "integer",
                                "format": "int64",
                                "example": 1
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/CreateWorkExperienceEloquent"
                    }
                ]
            },
            "RegistrationLetterEloquent": {
                "title": "Registration letter eloquent",
                "description": "Registration letter eloquent",
                "required": [
                    "employee_id",
                    "letter_type_id",
                    "reference_number",
                    "start_date",
                    "end_date"
                ],
                "properties": {
                    "employee_id": {
                        "description": "Employee id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "letter_type_id": {
                        "description": "Letter type id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "reference_number": {
                        "description": "Reference number property",
                        "type": "string"
                    },
                    "start_date": {
                        "description": "Start date property",
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-01-01 00:00:00"
                    },
                    "end_date": {
                        "description": "End date property",
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-01-01 00:00:00"
                    },
                    "description": {
                        "description": "Description number property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CreateRegistrationLetterEloquent": {
                "title": "Create registration letter eloquent",
                "description": "Create registration letter eloquent",
                "required": [
                    "employee_id",
                    "letter_type_id",
                    "reference_number",
                    "start_date",
                    "end_date"
                ],
                "properties": {
                    "employee_id": {
                        "$ref": "#/components/schemas/RegistrationLetterEloquent/properties/employee_id"
                    },
                    "letter_type_id": {
                        "$ref": "#/components/schemas/RegistrationLetterEloquent/properties/letter_type_id"
                    },
                    "reference_number": {
                        "$ref": "#/components/schemas/RegistrationLetterEloquent/properties/reference_number"
                    },
                    "start_date": {
                        "$ref": "#/components/schemas/RegistrationLetterEloquent/properties/start_date"
                    },
                    "end_date": {
                        "$ref": "#/components/schemas/RegistrationLetterEloquent/properties/end_date"
                    }
                },
                "type": "object"
            },
            "UpdateRegistrationLetterEloquent": {
                "title": "Update registration letter eloquent",
                "description": "Update registration letter eloquent",
                "required": [
                    "id",
                    "employee_id",
                    "letter_type_id",
                    "reference_number",
                    "start_date",
                    "end_date"
                ],
                "allOf": [
                    {
                        "properties": {
                            "id": {
                                "description": "Id property",
                                "type": "integer",
                                "format": "int64",
                                "example": 1
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/CreateRegistrationLetterEloquent"
                    }
                ]
            },
            "WorkAgreementLetterEloquent": {
                "title": "Work agreement letter eloquent",
                "description": "Work agreement letter eloquent",
                "required": [
                    "employee_id",
                    "letter_type_id",
                    "reference_number",
                    "start_date",
                    "end_date"
                ],
                "properties": {
                    "employee_id": {
                        "description": "Employee id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "letter_type_id": {
                        "description": "Letter type id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "reference_number": {
                        "description": "Reference number property",
                        "type": "string"
                    },
                    "start_date": {
                        "description": "Start date property",
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-01-01 00:00:00"
                    },
                    "end_date": {
                        "description": "End date property",
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-01-01 00:00:00"
                    },
                    "description": {
                        "description": "Description number property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CreateWorkAgreementLetterEloquent": {
                "title": "Create work agreement letter eloquent",
                "description": "Create work agreement letter eloquent",
                "required": [
                    "employee_id",
                    "letter_type_id",
                    "reference_number",
                    "start_date",
                    "end_date"
                ],
                "properties": {
                    "employee_id": {
                        "$ref": "#/components/schemas/WorkAgreementLetterEloquent/properties/employee_id"
                    },
                    "letter_type_id": {
                        "$ref": "#/components/schemas/WorkAgreementLetterEloquent/properties/letter_type_id"
                    },
                    "reference_number": {
                        "$ref": "#/components/schemas/WorkAgreementLetterEloquent/properties/reference_number"
                    },
                    "start_date": {
                        "$ref": "#/components/schemas/WorkAgreementLetterEloquent/properties/start_date"
                    },
                    "end_date": {
                        "$ref": "#/components/schemas/WorkAgreementLetterEloquent/properties/end_date"
                    }
                },
                "type": "object"
            },
            "UpdateWorkAgreementLetterEloquent": {
                "title": "Update work agreement letter eloquent",
                "description": "Update work agreement letter eloquent",
                "required": [
                    "id",
                    "employee_id",
                    "letter_type_id",
                    "reference_number",
                    "start_date",
                    "end_date"
                ],
                "allOf": [
                    {
                        "properties": {
                            "id": {
                                "description": "Id property",
                                "type": "integer",
                                "format": "int64",
                                "example": 1
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/CreateWorkAgreementLetterEloquent"
                    }
                ]
            },
            "ProjectAddendumEloquent": {
                "title": "Project addendum eloquent",
                "description": "Project addendum eloquent",
                "required": [
                    "project_id",
                    "reference_number",
                    "name",
                    "issue_date",
                    "start_date",
                    "end_date"
                ],
                "properties": {
                    "project_id": {
                        "description": "Project id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "reference_number": {
                        "description": "Reference number property",
                        "type": "string"
                    },
                    "name": {
                        "description": "Name property",
                        "type": "string"
                    },
                    "issue_date": {
                        "description": "Issue date property",
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-01-01 00:00:00"
                    },
                    "start_date": {
                        "description": "Start date property",
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-01-01 00:00:00"
                    },
                    "end_date": {
                        "description": "End date property",
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-01-01 00:00:00"
                    },
                    "description": {
                        "description": "Description number property",
                        "type": "string"
                    },
                    "value": {
                        "description": "Value property",
                        "type": "number"
                    },
                    "is_contract": {
                        "description": "Is contract property (contract = 1; not contract = 0)",
                        "type": "integer",
                        "format": "int32",
                        "example": 1
                    },
                    "created_by": {
                        "description": "Created by property",
                        "type": "string"
                    },
                    "modified_by": {
                        "description": "Modified by property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CreateProjectAddendumEloquent": {
                "title": "Create project addendum eloquent",
                "description": "Create project addendum eloquent",
                "required": [
                    "reference_number",
                    "name",
                    "issue_date",
                    "start_date",
                    "end_date"
                ],
                "properties": {
                    "reference_number": {
                        "$ref": "#/components/schemas/ProjectAddendumEloquent/properties/reference_number"
                    },
                    "name": {
                        "$ref": "#/components/schemas/ProjectAddendumEloquent/properties/name"
                    },
                    "issue_date": {
                        "$ref": "#/components/schemas/ProjectAddendumEloquent/properties/issue_date"
                    },
                    "start_date": {
                        "$ref": "#/components/schemas/ProjectAddendumEloquent/properties/start_date"
                    },
                    "end_date": {
                        "$ref": "#/components/schemas/ProjectAddendumEloquent/properties/end_date"
                    },
                    "description": {
                        "$ref": "#/components/schemas/ProjectAddendumEloquent/properties/description"
                    },
                    "value": {
                        "$ref": "#/components/schemas/ProjectAddendumEloquent/properties/value"
                    },
                    "is_contract": {
                        "$ref": "#/components/schemas/ProjectAddendumEloquent/properties/is_contract"
                    },
                    "media_libraries": {
                        "description": "Media library property",
                        "type": "array",
                        "items": {
                            "properties": {
                                "media_library_id": {
                                    "description": "Media library id property",
                                    "type": "string",
                                    "example": "152cc099-56a2-46b6-b2a8-ebc080477e3a"
                                },
                                "pivot": {
                                    "description": "Pivot property",
                                    "properties": {
                                        "attribute": {
                                            "type": "string",
                                            "example": "document"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "UpdateProjectAddendumEloquent": {
                "title": "Update project addendum eloquent",
                "description": "Update project addendum eloquent",
                "required": [
                    "id",
                    "reference_number",
                    "name",
                    "issue_date",
                    "start_date",
                    "end_date"
                ],
                "allOf": [
                    {
                        "properties": {
                            "id": {
                                "description": "Id property",
                                "type": "integer",
                                "format": "int64",
                                "example": 1
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/CreateProjectAddendumEloquent"
                    }
                ]
            },
            "ProjectEloquent": {
                "title": "Project eloquent",
                "description": "Project eloquent",
                "required": [
                    "company_id",
                    "reference_number",
                    "contract_type_id",
                    "name",
                    "first_party_number",
                    "second_party_number",
                    "issue_date",
                    "start_date",
                    "end_date",
                    "activity",
                    "description",
                    "value",
                    "is_contract"
                ],
                "properties": {
                    "parent_id": {
                        "description": "Parent id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "company_id": {
                        "description": "Company id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "reference_number": {
                        "description": "Reference number property",
                        "type": "string"
                    },
                    "contract_type_id": {
                        "description": "Contract type id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "description": "Name property",
                        "type": "string"
                    },
                    "first_party_number": {
                        "description": "First party number property",
                        "type": "string"
                    },
                    "second_party_number": {
                        "description": "Second party number property",
                        "type": "string"
                    },
                    "issue_date": {
                        "description": "Issue date property",
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-01-01 00:00:00"
                    },
                    "start_date": {
                        "description": "Start date property",
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-01-01 00:00:00"
                    },
                    "end_date": {
                        "description": "End date property",
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-01-01 00:00:00"
                    },
                    "activity": {
                        "description": "Activity property",
                        "type": "string"
                    },
                    "description": {
                        "description": "Description property",
                        "type": "string"
                    },
                    "value": {
                        "description": "Value property",
                        "type": "float",
                        "example": "0"
                    },
                    "is_contract": {
                        "description": "Is contract property (contract = 1; not contract = 0)",
                        "type": "integer",
                        "format": "int32",
                        "example": 1
                    },
                    "created_by": {
                        "description": "Created by property",
                        "type": "string"
                    },
                    "modified_by": {
                        "description": "Modified by property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CreateProjectEloquent": {
                "title": "Create project eloquent",
                "description": "Create project eloquent",
                "required": [
                    "company_id",
                    "reference_number",
                    "contract_type_id",
                    "name",
                    "first_party_number",
                    "second_party_number",
                    "issue_date",
                    "start_date",
                    "end_date",
                    "activity",
                    "description",
                    "value",
                    "is_contract"
                ],
                "properties": {
                    "parent_id": {
                        "$ref": "#/components/schemas/ProjectEloquent/properties/parent_id"
                    },
                    "company_id": {
                        "$ref": "#/components/schemas/ProjectEloquent/properties/company_id"
                    },
                    "reference_number": {
                        "$ref": "#/components/schemas/ProjectEloquent/properties/reference_number"
                    },
                    "contract_type_id": {
                        "$ref": "#/components/schemas/ProjectEloquent/properties/contract_type_id"
                    },
                    "name": {
                        "$ref": "#/components/schemas/ProjectEloquent/properties/name"
                    },
                    "first_party_number": {
                        "$ref": "#/components/schemas/ProjectEloquent/properties/first_party_number"
                    },
                    "second_party_number": {
                        "$ref": "#/components/schemas/ProjectEloquent/properties/second_party_number"
                    },
                    "issue_date": {
                        "$ref": "#/components/schemas/ProjectEloquent/properties/issue_date"
                    },
                    "start_date": {
                        "$ref": "#/components/schemas/ProjectEloquent/properties/start_date"
                    },
                    "end_date": {
                        "$ref": "#/components/schemas/ProjectEloquent/properties/end_date"
                    },
                    "activity": {
                        "$ref": "#/components/schemas/ProjectEloquent/properties/activity"
                    },
                    "description": {
                        "$ref": "#/components/schemas/ProjectEloquent/properties/description"
                    },
                    "value": {
                        "$ref": "#/components/schemas/ProjectEloquent/properties/value"
                    },
                    "is_contract": {
                        "$ref": "#/components/schemas/ProjectEloquent/properties/is_contract"
                    }
                },
                "type": "object"
            },
            "UpdateProjectEloquent": {
                "title": "Update project eloquent",
                "description": "Update project eloquent",
                "required": [
                    "id",
                    "company_id",
                    "reference_number",
                    "contract_type_id",
                    "name",
                    "first_party_number",
                    "second_party_number",
                    "issue_date",
                    "start_date",
                    "end_date",
                    "activity",
                    "description",
                    "value",
                    "is_contract"
                ],
                "allOf": [
                    {
                        "properties": {
                            "id": {
                                "description": "Id property",
                                "type": "integer",
                                "format": "int64",
                                "example": 1
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/CreateProjectEloquent"
                    }
                ]
            },
            "ProjectTermsEloquent": {
                "title": "Project Terms eloquent",
                "description": "Project Terms eloquent",
                "required": [
                    "project_id",
                    "step",
                    "name",
                    "value",
                    "description"
                ],
                "properties": {
                    "project_id": {
                        "description": "Project id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "step": {
                        "description": "Step property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "description": "Name property",
                        "type": "string"
                    },
                    "value": {
                        "description": "Value property",
                        "type": "float",
                        "example": "0"
                    },
                    "description": {
                        "description": "Description property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CreateProjectTermsEloquent": {
                "title": "Create project terms eloquent",
                "description": "Create project terms eloquent",
                "required": [
                    "step",
                    "name",
                    "value",
                    "description"
                ],
                "properties": {
                    "step": {
                        "$ref": "#/components/schemas/ProjectTermsEloquent/properties/step"
                    },
                    "name": {
                        "$ref": "#/components/schemas/ProjectTermsEloquent/properties/name"
                    },
                    "value": {
                        "$ref": "#/components/schemas/ProjectTermsEloquent/properties/value"
                    },
                    "description": {
                        "$ref": "#/components/schemas/ProjectTermsEloquent/properties/description"
                    }
                },
                "type": "object"
            },
            "UpdateProjectTermsEloquent": {
                "title": "Update project terms eloquent",
                "description": "Update project terms eloquent",
                "required": [
                    "project_id",
                    "step",
                    "name",
                    "value",
                    "description"
                ],
                "allOf": [
                    {
                        "properties": {
                            "id": {
                                "description": "Id property",
                                "type": "integer",
                                "format": "int64",
                                "example": 1
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/CreateProjectTermsEloquent"
                    }
                ]
            },
            "ApplicantEloquent": {
                "title": "Applicant eloquent",
                "description": "Applicant eloquent",
                "required": [
                    "profile_id",
                    "gender_id",
                    "religion_id",
                    "marital_status_id",
                    "identity_number",
                    "identity_expired_date",
                    "identity_address",
                    "passport_number",
                    "passport_expired_date",
                    "visa_number",
                    "visa_expired_number",
                    "birth_date",
                    "birth_place",
                    "age",
                    "weight",
                    "height",
                    "linkedin",
                    "facebook",
                    "instagram",
                    "skype",
                    "website"
                ],
                "properties": {
                    "profile_id": {
                        "description": "Profile id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "gender_id": {
                        "description": "Gender id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "religion_id": {
                        "description": "Religion id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "marital_status_id": {
                        "description": "Marital status id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "identity_number": {
                        "description": "Identity number property",
                        "type": "string"
                    },
                    "identity_expired_date": {
                        "description": "Identity expired date property",
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-01-01 00:00:00"
                    },
                    "identity_address": {
                        "description": "Identity address property",
                        "type": "string"
                    },
                    "passport_number": {
                        "description": "Passport number property",
                        "type": "string"
                    },
                    "passport_expired_date": {
                        "description": "Passport expired date property",
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-01-01 00:00:00"
                    },
                    "visa_number": {
                        "description": "Visa number property",
                        "type": "integer",
                        "format": "int32",
                        "example": 13213213
                    },
                    "visa_expired_date": {
                        "description": "Visa expired date property",
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-01-01 00:00:00"
                    },
                    "birth_date": {
                        "description": "Birth date property",
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-01-01 00:00:00"
                    },
                    "birth_place": {
                        "description": "Birth place property",
                        "type": "string"
                    },
                    "age": {
                        "description": "Age property",
                        "type": "integer",
                        "format": "int32",
                        "example": 20
                    },
                    "weight": {
                        "description": "Weight property",
                        "type": "integer",
                        "format": "int32",
                        "example": 80
                    },
                    "height": {
                        "description": "Height property",
                        "type": "integer",
                        "format": "int32",
                        "example": 80
                    },
                    "linkedin": {
                        "description": "Linkedin property",
                        "type": "string"
                    },
                    "facebook": {
                        "description": "Facebook property",
                        "type": "string"
                    },
                    "instagram": {
                        "description": "Instagram property",
                        "type": "string"
                    },
                    "skype": {
                        "description": "Skype property",
                        "type": "string"
                    },
                    "website": {
                        "description": "Website property",
                        "type": "string"
                    },
                    "created_by": {
                        "description": "Created by property",
                        "type": "string"
                    },
                    "modified_by": {
                        "description": "Modified by property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CreateApplicantEloquent": {
                "title": "Create applicant eloquent",
                "description": "Create applicant eloquent",
                "required": [
                    "gender_id",
                    "religion_id",
                    "marital_status_id",
                    "identity_number",
                    "identity_expired_date",
                    "identity_address",
                    "passport_number",
                    "passport_expired_date",
                    "visa_number",
                    "visa_expired_number",
                    "birth_date",
                    "birth_place",
                    "age",
                    "weight",
                    "height",
                    "linkedin",
                    "facebook",
                    "instagram",
                    "skype",
                    "website"
                ],
                "properties": {
                    "gender_id": {
                        "$ref": "#/components/schemas/ApplicantEloquent/properties/gender_id"
                    },
                    "religion_id": {
                        "$ref": "#/components/schemas/ApplicantEloquent/properties/religion_id"
                    },
                    "marital_status_id": {
                        "$ref": "#/components/schemas/ApplicantEloquent/properties/marital_status_id"
                    },
                    "identity_number": {
                        "$ref": "#/components/schemas/ApplicantEloquent/properties/identity_number"
                    },
                    "identity_expired_date": {
                        "$ref": "#/components/schemas/ApplicantEloquent/properties/identity_expired_date"
                    },
                    "identity_address": {
                        "$ref": "#/components/schemas/ApplicantEloquent/properties/identity_address"
                    },
                    "passport_number": {
                        "$ref": "#/components/schemas/ApplicantEloquent/properties/passport_number"
                    },
                    "passport_expired_date": {
                        "$ref": "#/components/schemas/ApplicantEloquent/properties/passport_expired_date"
                    },
                    "visa_number": {
                        "$ref": "#/components/schemas/ApplicantEloquent/properties/visa_number"
                    },
                    "visa_expired_date": {
                        "$ref": "#/components/schemas/ApplicantEloquent/properties/visa_expired_date"
                    },
                    "birth_date": {
                        "$ref": "#/components/schemas/ApplicantEloquent/properties/birth_date"
                    },
                    "birth_place": {
                        "$ref": "#/components/schemas/ApplicantEloquent/properties/birth_place"
                    },
                    "age": {
                        "$ref": "#/components/schemas/ApplicantEloquent/properties/age"
                    },
                    "weight": {
                        "$ref": "#/components/schemas/ApplicantEloquent/properties/weight"
                    },
                    "height": {
                        "$ref": "#/components/schemas/ApplicantEloquent/properties/height"
                    },
                    "linkedin": {
                        "$ref": "#/components/schemas/ApplicantEloquent/properties/linkedin"
                    },
                    "facebook": {
                        "$ref": "#/components/schemas/ApplicantEloquent/properties/facebook"
                    },
                    "instagram": {
                        "$ref": "#/components/schemas/ApplicantEloquent/properties/instagram"
                    },
                    "skype": {
                        "$ref": "#/components/schemas/ApplicantEloquent/properties/skype"
                    },
                    "website": {
                        "$ref": "#/components/schemas/ApplicantEloquent/properties/website"
                    }
                },
                "type": "object"
            },
            "UpdateApplicantEloquent": {
                "title": "Update applicant eloquent",
                "description": "Update applicant eloquent",
                "required": [
                    "gender_id",
                    "religion_id",
                    "marital_status_id",
                    "identity_number",
                    "identity_expired_date",
                    "identity_address",
                    "passport_number",
                    "passport_expired_date",
                    "visa_number",
                    "visa_expired_number",
                    "birth_date",
                    "birth_place",
                    "age",
                    "weight",
                    "height",
                    "linkedin",
                    "facebook",
                    "instagram",
                    "skype",
                    "website"
                ],
                "allOf": [
                    {
                        "properties": {
                            "id": {
                                "description": "Id property",
                                "type": "integer",
                                "format": "int64",
                                "example": 1
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/CreateApplicantEloquent"
                    }
                ]
            },
            "RecruitmentScheduleEloquent": {
                "title": "Recruitment Schedule eloquent",
                "description": "Recruitment Schedule eloquent",
                "required": [
                    "vacancy_application_id",
                    "schedule_date"
                ],
                "properties": {
                    "vacancy_application_id": {
                        "description": "Vacancy Application id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "schedule_date": {
                        "description": "Schedule date property",
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-01-01 00:00:00"
                    }
                },
                "type": "object"
            },
            "CreateRecruitmentScheduleEloquent": {
                "title": "Create work area eloquent",
                "description": "Create work area eloquent",
                "required": [
                    "vacancy_application_id",
                    "schedule_date"
                ],
                "properties": {
                    "vacancy_application_id": {
                        "$ref": "#/components/schemas/RecruitmentScheduleEloquent/properties/vacancy_application_id"
                    },
                    "schedule_date": {
                        "$ref": "#/components/schemas/RecruitmentScheduleEloquent/properties/schedule_date"
                    }
                },
                "type": "object"
            },
            "UpdateRecruitmentScheduleEloquent": {
                "title": "Update work area eloquent",
                "description": "Update work area eloquent",
                "required": [
                    "id",
                    "vacancy_application_id",
                    "name",
                    "slug"
                ],
                "allOf": [
                    {
                        "properties": {
                            "id": {
                                "description": "Id property",
                                "type": "integer",
                                "format": "int64",
                                "example": 1
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/CreateRecruitmentScheduleEloquent"
                    }
                ]
            },
            "VacancyApplicantEloquent": {
                "title": "Vacancy Applicant eloquent",
                "description": "Vacancy Applicant eloquent",
                "required": [
                    "applicant_id",
                    "vacancy_id",
                    "recruitment_stage_id",
                    "cover_letter",
                    "rating"
                ],
                "properties": {
                    "applicant_id": {
                        "description": "Applicant id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "vacancy_id": {
                        "description": "Vacancy id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "recruitment_stage_id": {
                        "description": "Recruitment stage id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "cover_letter": {
                        "description": "Cover letter property",
                        "type": "string"
                    },
                    "rating": {
                        "description": "Rating property",
                        "type": "string",
                        "enum": [
                            "1",
                            "2",
                            "3",
                            "4",
                            "5"
                        ]
                    }
                },
                "type": "object"
            },
            "CreateVacancyApplicantEloquent": {
                "title": "Create vacancy applicant eloquent",
                "description": "Create vacancy applicant eloquent",
                "required": [
                    "applicant_id",
                    "vacancy_id",
                    "recruitment_stage_id",
                    "cover_letter",
                    "rating"
                ],
                "properties": {
                    "applicant_id": {
                        "$ref": "#/components/schemas/VacancyApplicantEloquent/properties/applicant_id"
                    },
                    "vacancy_id": {
                        "$ref": "#/components/schemas/VacancyApplicantEloquent/properties/vacancy_id"
                    },
                    "recruitment_stage_id": {
                        "$ref": "#/components/schemas/VacancyApplicantEloquent/properties/recruitment_stage_id"
                    },
                    "cover_letter": {
                        "$ref": "#/components/schemas/VacancyApplicantEloquent/properties/cover_letter"
                    },
                    "rating": {
                        "$ref": "#/components/schemas/VacancyApplicantEloquent/properties/rating"
                    }
                },
                "type": "object"
            },
            "UpdateVacancyApplicantEloquent": {
                "title": "Update vacancy applicant eloquent",
                "description": "Update vacancy applicant eloquent",
                "required": [
                    "id",
                    "applicant_id",
                    "vacancy_id",
                    "recruitment_stage_id",
                    "cover_letter",
                    "rating"
                ],
                "allOf": [
                    {
                        "properties": {
                            "id": {
                                "description": "Id property",
                                "type": "integer",
                                "format": "int64",
                                "example": 1
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/CreateVacancyApplicantEloquent"
                    }
                ]
            },
            "VacancyApplicationNoteEloquent": {
                "title": "Vacancy Applicant Note eloquent",
                "description": "Vacancy Applicant Note eloquent",
                "required": [
                    "vacancy_application_id",
                    "note"
                ],
                "properties": {
                    "vacancy_application_id": {
                        "description": "Vacancy application id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "note": {
                        "description": "Note property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CreateVacancyApplicationNoteEloquent": {
                "title": "Create vacancy applicant note eloquent",
                "description": "Create vacancy applicant note eloquent",
                "required": [
                    "vacancy_application_id",
                    "note"
                ],
                "properties": {
                    "vacancy_application_id": {
                        "$ref": "#/components/schemas/VacancyApplicationNoteEloquent/properties/vacancy_application_id"
                    },
                    "note": {
                        "$ref": "#/components/schemas/VacancyApplicationNoteEloquent/properties/note"
                    }
                },
                "type": "object"
            },
            "UpdateVacancyApplicationNoteEloquent": {
                "title": "Update vacancy applicant note eloquent",
                "description": "Update vacancy applicant note eloquent",
                "required": [
                    "id",
                    "vacancy_application_id",
                    "note"
                ],
                "allOf": [
                    {
                        "properties": {
                            "id": {
                                "description": "Id property",
                                "type": "integer",
                                "format": "int64",
                                "example": 1
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/CreateVacancyApplicationNoteEloquent"
                    }
                ]
            },
            "TerminationEloquent": {
                "title": "Termination eloquent",
                "description": "Termination eloquent",
                "required": [
                    "employee_id",
                    "type",
                    "termination_date",
                    "severance"
                ],
                "properties": {
                    "employee_id": {
                        "description": "Employee id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "type": {
                        "description": "Type property",
                        "type": "string",
                        "default": "",
                        "enum": [
                            "RESIGN",
                            "PHK"
                        ]
                    },
                    "termination_date": {
                        "description": "Termination date property",
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-01-01 00:00:00"
                    },
                    "note": {
                        "description": "Note property",
                        "type": "string"
                    },
                    "severance": {
                        "description": "Severance property",
                        "type": "number"
                    }
                },
                "type": "object"
            },
            "CreateTerminationEloquent": {
                "title": "Create termination eloquent",
                "description": "Create termination eloquent",
                "required": [
                    "employee_id",
                    "type",
                    "termination_date",
                    "severance"
                ],
                "properties": {
                    "employee_id": {
                        "$ref": "#/components/schemas/TerminationEloquent/properties/employee_id"
                    },
                    "type": {
                        "$ref": "#/components/schemas/TerminationEloquent/properties/type"
                    },
                    "termination_date": {
                        "$ref": "#/components/schemas/TerminationEloquent/properties/termination_date"
                    },
                    "note": {
                        "$ref": "#/components/schemas/TerminationEloquent/properties/note"
                    },
                    "severance": {
                        "$ref": "#/components/schemas/TerminationEloquent/properties/severance"
                    }
                },
                "type": "object"
            },
            "UpdateTerminationEloquent": {
                "title": "Update termination eloquent",
                "description": "Update termination eloquent",
                "required": [
                    "id",
                    "employee_id",
                    "type",
                    "termination_date",
                    "severance"
                ],
                "allOf": [
                    {
                        "properties": {
                            "id": {
                                "description": "Id property",
                                "type": "integer",
                                "format": "int64",
                                "example": 1
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/CreateTerminationEloquent"
                    }
                ]
            },
            "VacancyEloquent": {
                "title": "Vacancy eloquent",
                "description": "Vacancy eloquent",
                "required": [
                    "company_id",
                    "vacancy_location_id",
                    "vacancy_category_id",
                    "title",
                    "slug",
                    "publish_date",
                    "expired_date",
                    "min_salary",
                    "max_salary",
                    "reference_code",
                    "intro",
                    "description",
                    "requirement",
                    "needs",
                    "work_status",
                    "work_type",
                    "status"
                ],
                "properties": {
                    "company_id": {
                        "description": "Company id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "vacancy_location_id": {
                        "description": "Vacancy locaiton id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "vacancy_category_id": {
                        "description": "Vacancy category id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "title": {
                        "description": "Title property",
                        "type": "string"
                    },
                    "slug": {
                        "description": "Slug property",
                        "type": "string"
                    },
                    "publish_date": {
                        "description": "Publish date property",
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-01-01 00:00:00"
                    },
                    "expired_date": {
                        "description": "Expired date property",
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-01-01 00:00:00"
                    },
                    "min_salary": {
                        "description": "Min salary property",
                        "type": "number"
                    },
                    "max_salary": {
                        "description": "Max salary property",
                        "type": "number"
                    },
                    "reference_code": {
                        "description": "Reference code property",
                        "type": "string"
                    },
                    "intro": {
                        "description": "Intro property",
                        "type": "string"
                    },
                    "description": {
                        "description": "Description property",
                        "type": "string"
                    },
                    "requirement": {
                        "description": "Requirement property",
                        "type": "string"
                    },
                    "needs": {
                        "description": "Career property",
                        "type": "integer",
                        "format": "int64"
                    },
                    "work_status": {
                        "description": "Work status property",
                        "type": "string",
                        "default": "",
                        "enum": [
                            "FULL_TIME",
                            "PART_TIME"
                        ]
                    },
                    "work_type": {
                        "description": "Work type property",
                        "type": "string",
                        "default": "",
                        "enum": [
                            "PERMANENT",
                            "CONTRACT"
                        ]
                    },
                    "status": {
                        "description": "Status property",
                        "type": "string",
                        "default": "",
                        "enum": [
                            "PUBLISH",
                            "DRAFT",
                            "PENDING"
                        ]
                    },
                    "created_by": {
                        "description": "Created by property",
                        "type": "string"
                    },
                    "modified_by": {
                        "description": "Modified by property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CreateVacancyEloquent": {
                "title": "Create vacancy eloquent",
                "description": "Create vacancy eloquent",
                "required": [
                    "company_id",
                    "vacancy_location_id",
                    "vacancy_category_id",
                    "title",
                    "slug",
                    "publish_date",
                    "expired_date",
                    "reference_code",
                    "intro",
                    "description",
                    "requirement",
                    "needs",
                    "work_status",
                    "work_type",
                    "status"
                ],
                "properties": {
                    "company_id": {
                        "$ref": "#/components/schemas/VacancyEloquent/properties/company_id"
                    },
                    "vacancy_location_id": {
                        "$ref": "#/components/schemas/VacancyEloquent/properties/vacancy_location_id"
                    },
                    "vacancy_category_id": {
                        "$ref": "#/components/schemas/VacancyEloquent/properties/vacancy_category_id"
                    },
                    "title": {
                        "$ref": "#/components/schemas/VacancyEloquent/properties/title"
                    },
                    "slug": {
                        "$ref": "#/components/schemas/VacancyEloquent/properties/slug"
                    },
                    "publish_date": {
                        "$ref": "#/components/schemas/VacancyEloquent/properties/publish_date"
                    },
                    "expired_date": {
                        "$ref": "#/components/schemas/VacancyEloquent/properties/expired_date"
                    },
                    "min_salary": {
                        "$ref": "#/components/schemas/VacancyEloquent/properties/min_salary"
                    },
                    "max_salary": {
                        "$ref": "#/components/schemas/VacancyEloquent/properties/max_salary"
                    },
                    "reference_code": {
                        "$ref": "#/components/schemas/VacancyEloquent/properties/reference_code"
                    },
                    "intro": {
                        "$ref": "#/components/schemas/VacancyEloquent/properties/intro"
                    },
                    "description": {
                        "$ref": "#/components/schemas/VacancyEloquent/properties/description"
                    },
                    "requirement": {
                        "$ref": "#/components/schemas/VacancyEloquent/properties/requirement"
                    },
                    "needs": {
                        "$ref": "#/components/schemas/VacancyEloquent/properties/needs"
                    },
                    "work_status": {
                        "$ref": "#/components/schemas/VacancyEloquent/properties/work_status"
                    },
                    "work_type": {
                        "$ref": "#/components/schemas/VacancyEloquent/properties/work_type"
                    },
                    "status": {
                        "$ref": "#/components/schemas/VacancyEloquent/properties/status"
                    }
                },
                "type": "object"
            },
            "UpdateVacancyEloquent": {
                "title": "Update vacancy eloquent",
                "description": "Update vacancy eloquent",
                "required": [
                    "company_id",
                    "vacancy_location_id",
                    "vacancy_category_id",
                    "title",
                    "slug",
                    "publish_date",
                    "expired_date",
                    "min_salary",
                    "max_salary",
                    "reference_code",
                    "intro",
                    "description",
                    "requirement",
                    "needs",
                    "work_status",
                    "work_type",
                    "status"
                ],
                "allOf": [
                    {
                        "properties": {
                            "id": {
                                "description": "Id property",
                                "type": "integer",
                                "format": "int64",
                                "example": 1
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/CreateVacancyEloquent"
                    }
                ]
            },
            "MediaLibraryEloquent": {
                "title": "Media library eloquent",
                "description": "Media library eloquent",
                "required": [
                    "company_id",
                    "collection",
                    "original_file",
                    "generate_file",
                    "extension",
                    "mime_type",
                    "disk",
                    "path",
                    "size"
                ],
                "properties": {
                    "user_id": {
                        "description": "User id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "collection": {
                        "description": "Collection property",
                        "type": "string",
                        "default": "",
                        "enum": [
                            "STORAGE",
                            "COMPANY",
                            "PROFILE",
                            "EMPLOYEE",
                            "WORK_AGREEMENT_LETTER",
                            "REGISTRATION_LETTER",
                            "PROJECT",
                            "PROJECT_ADDENDUM",
                            "APPLICANT"
                        ]
                    },
                    "original_file": {
                        "description": "Original file property",
                        "type": "string"
                    },
                    "generate_file": {
                        "description": "Generate file property",
                        "type": "string"
                    },
                    "extension": {
                        "description": "Extension property",
                        "type": "string"
                    },
                    "type": {
                        "description": "Type property",
                        "type": "string"
                    },
                    "mime_type": {
                        "description": "Mime type property",
                        "type": "string"
                    },
                    "disk": {
                        "description": "Disk property",
                        "type": "string"
                    },
                    "path": {
                        "description": "Path type property",
                        "type": "string"
                    },
                    "width": {
                        "description": "Width property",
                        "type": "string"
                    },
                    "height": {
                        "description": "Height property",
                        "type": "string"
                    },
                    "size": {
                        "description": "Size property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UploadFileMediaLibraryEloquent": {
                "title": "Upload file media library eloquent",
                "description": "Upload file media library eloquent",
                "required": [
                    "company_id",
                    "collection"
                ],
                "properties": {
                    "user_id": {
                        "$ref": "#/components/schemas/MediaLibraryEloquent/properties/user_id"
                    },
                    "collection": {
                        "$ref": "#/components/schemas/MediaLibraryEloquent/properties/collection"
                    }
                },
                "type": "object"
            },
            "ProfileEloquent": {
                "title": "Profile eloquent",
                "description": "Profile eloquent",
                "required": [
                    "user_id",
                    "full_name",
                    "nick_name",
                    "email"
                ],
                "properties": {
                    "user_id": {
                        "description": "User id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "full_name": {
                        "description": "Full name property",
                        "type": "string"
                    },
                    "nick_name": {
                        "description": "Nick name property",
                        "type": "string"
                    },
                    "country": {
                        "description": "Country property",
                        "type": "string"
                    },
                    "state_or_province": {
                        "description": "State or province property",
                        "type": "string"
                    },
                    "city": {
                        "description": "City property",
                        "type": "string"
                    },
                    "address": {
                        "description": "Address property",
                        "type": "string"
                    },
                    "postcode": {
                        "description": "Postcode property",
                        "type": "string"
                    },
                    "phone": {
                        "description": "Phone property",
                        "type": "string"
                    },
                    "mobile": {
                        "description": "Mobile property",
                        "type": "string"
                    },
                    "email": {
                        "description": "Email property",
                        "type": "string",
                        "example": "bs@gmail.com"
                    }
                },
                "type": "object"
            },
            "CreateProfileEloquent": {
                "title": "Create profile eloquent",
                "description": "Create profile eloquent",
                "required": [
                    "full_name",
                    "nick_name",
                    "country",
                    "state_or_province",
                    "city",
                    "address",
                    "email"
                ],
                "properties": {
                    "full_name": {
                        "$ref": "#/components/schemas/ProfileEloquent/properties/full_name"
                    },
                    "nick_name": {
                        "$ref": "#/components/schemas/ProfileEloquent/properties/nick_name"
                    },
                    "country": {
                        "$ref": "#/components/schemas/ProfileEloquent/properties/country"
                    },
                    "state_or_province": {
                        "$ref": "#/components/schemas/ProfileEloquent/properties/state_or_province"
                    },
                    "city": {
                        "$ref": "#/components/schemas/ProfileEloquent/properties/city"
                    },
                    "address": {
                        "$ref": "#/components/schemas/ProfileEloquent/properties/address"
                    },
                    "postcode": {
                        "$ref": "#/components/schemas/ProfileEloquent/properties/postcode"
                    },
                    "phone": {
                        "$ref": "#/components/schemas/ProfileEloquent/properties/phone"
                    },
                    "mobile": {
                        "$ref": "#/components/schemas/ProfileEloquent/properties/mobile"
                    },
                    "email": {
                        "$ref": "#/components/schemas/ProfileEloquent/properties/email"
                    }
                },
                "type": "object"
            },
            "UpdateProfileEloquent": {
                "title": "Update profile eloquent",
                "description": "Update profile eloquent",
                "required": [
                    "id",
                    "full_name",
                    "nick_name",
                    "country",
                    "state_or_province",
                    "city",
                    "address",
                    "email"
                ],
                "allOf": [
                    {
                        "properties": {
                            "id": {
                                "description": "Id property",
                                "type": "integer",
                                "format": "int64",
                                "example": 1
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/CreateProfileEloquent"
                    }
                ]
            },
            "UserEloquent": {
                "title": "User eloquent",
                "description": "User eloquent",
                "required": [
                    "company_id",
                    "username",
                    "email",
                    "password"
                ],
                "properties": {
                    "username": {
                        "description": "Username property",
                        "type": "string"
                    },
                    "email": {
                        "description": "Email property",
                        "type": "string"
                    },
                    "password": {
                        "description": "Password property",
                        "type": "string"
                    },
                    "remember_token": {
                        "description": "Remember token property",
                        "type": "string"
                    },
                    "is_active": {
                        "description": "Is active property (active = 1; not active = 0)",
                        "type": "integer",
                        "format": "int32",
                        "example": 1
                    },
                    "is_block": {
                        "description": "Is block property (blocked = 1; not unblocked = 0)",
                        "type": "integer",
                        "format": "int32"
                    },
                    "created_by": {
                        "description": "Created by property",
                        "type": "string",
                        "format": "datetime"
                    },
                    "modified_by": {
                        "description": "Modified by property",
                        "type": "string",
                        "format": "datetime"
                    }
                },
                "type": "object"
            },
            "UpdateUserPasswordEloquent": {
                "title": "Update user password eloquent",
                "description": "Update user password eloquent",
                "required": [
                    "id"
                ],
                "properties": {
                    "id": {
                        "description": "Id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "password": {
                        "$ref": "#/components/schemas/UserEloquent/properties/password"
                    },
                    "confirm_password": {
                        "description": "Confirm password property",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UpdateUserRoleEloquent": {
                "title": "Update user role eloquent",
                "description": "Update user role eloquent",
                "required": [
                    "id"
                ],
                "properties": {
                    "id": {
                        "description": "Id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "role_ids": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "example": [
                            1,
                            2,
                            3
                        ]
                    }
                },
                "type": "object"
            },
            "UpdateUserPermissionEloquent": {
                "title": "Update user permission eloquent",
                "description": "Update user permission eloquent",
                "required": [
                    "id"
                ],
                "properties": {
                    "id": {
                        "description": "Id property",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "permission_ids": {
                        "type": "array",
                        "items": {
                            "type": "array",
                            "items": {}
                        },
                        "example": [
                            [
                                1,
                                "ALLOW"
                            ],
                            [
                                2,
                                "DENY"
                            ]
                        ]
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "apiKey": {
                "type": "apiKey",
                "name": "Authorization",
                "in": "header"
            }
        }
    }
}